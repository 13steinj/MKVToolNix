'\" t
.\"     Title: mkvmerge
.\"    Author: Moritz Bunkus <moritz@bunkus.org>
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 2016-09-11
.\"    Manual: Komendy użytkownika
.\"    Source: MKVToolNix 9.4.2
.\"  Language: Polish
.\"
.TH "MKVMERGE" "1" "2016\-09\-11" "MKVToolNix 9\&.4\&.2" "Komendy użytkownika"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAZWA"
mkvmerge \- \(/Lączy ścieżki multimedialne do pliku Matroska(TM)
.SH "SZABLON LINII KOMEND"
.HP \w'\fBmkvmerge\fR\ 'u
\fBmkvmerge\fR [opcje\ globalne] {\-o\ plik\-wyjściowy} [opcje1] {plik1} [[opcje2]\ {plik2}] [@plikopcji]
.SH "OPIS"
.PP
This program takes the input from several media files and joins their streams (all of them or just a selection) into a
Matroska(TM)
file; see
\m[blue]\fBthe Matroska(TM) website\fR\m[]\&\s-2\u[1]\d\s+2\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWażne\fR
.ps -1
.br
.PP
The order of command line options is important\&. Please read the section
"Option order"
if you\*(Aqre new to the program\&.
.sp .5v
.RE
.SS "Opcje globalne"
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
Zwiększa szczeg\('o\(/lowość
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
Suppress status output\&.
.RE
.PP
\fB\-o\fR, \fB\-\-output\fR \fInazwa\-pliku\fR
.RS 4
Write to the file
\fIfile\-name\fR\&. If splitting is used then this parameter is treated a bit differently\&. See the explanation for the
\fB\-\-split\fR
option for details\&.
.RE
.PP
\fB\-w\fR, \fB\-\-webm\fR
.RS 4
Create a WebM compliant file\&. This is also turned on if the output file name\*(Aqs extension is "webm"\&. This mode enforces several restrictions\&. The only allowed codecs are VP8, VP9 video and Opus, Vorbis audio tracks\&. Neither chapters nor tags are allowed\&. The DocType header item is changed to "webm"\&.
.RE
.PP
\fB\-\-title\fR \fItytu\(/l\fR
.RS 4
Sets the general title for the output file, e\&.g\&. the movie name\&.
.RE
.PP
\fB\-\-default\-language\fR \fIkod\-językowy\fR
.RS 4
Sets the default language code that will be used for tracks for which no language is set with the
\fB\-\-language\fR
option and for which the source container doesn\*(Aqt provide a language\&.
.sp
The default language code is \*(Aqund\*(Aq for \*(Aqundefined\*(Aq\&.
.RE
.SS "Segment info handling (global options)"
.PP
\fB\-\-segmentinfo\fR \fInazwa\-pliku\&.xml\fR
.RS 4
Read segment information from a
XML
file\&. This file can contain the segment family
UID, segment
UID, previous and next segment
UID
elements\&. An example file and a
DTD
are included in the MKVToolNix distribution\&.
.sp
See the section about
segment info XML files
below for details\&.
.RE
.PP
\fB\-\-segment\-uid\fR \fISID1,SID2,\&.\&.\&.\fR
.RS 4
Sets the segment UIDs to use\&. This is a comma\-separated list of 128bit segment UIDs in the usual UID form: hex numbers with or without the "0x" prefix, with or without spaces, exactly 32 digits\&.
.sp
If SID starts with = then its rest is interpreted as the name of a Matroska file whose segment UID is read and used\&.
.sp
Each file created contains one segment, and each segment has one segment UID\&. If more segment UIDs are specified than segments are created then the surplus UIDs are ignored\&. If fewer UIDs are specified than segments are created then random UIDs will be created for them\&.
.RE
.SS "Obs\(/luga rozdzia\(/l\('ow i tag\('ow (opcje globalne)"
.PP
\fB\-\-chapter\-language\fR \fIkod\-językowy\fR
.RS 4
Sets the ISO639\-2 language code that is written for each chapter entry\&. Defaults to \*(Aqeng\*(Aq\&. See the section about
chapters
below for details\&.
.sp
This option can be used both for simple chapter files and for source files that contain chapters but no information about the chapters\*(Aq language, e\&.g\&. MP4 and OGM files\&.
.sp
The language set with this option is also used when chapters are generated with the
\fB\-\-generate\-chapters\fR option\&.
.RE
.PP
\fB\-\-chapter\-charset\fR \fIzestaw\-znak\('ow\fR
.RS 4
Sets the character set that is used for the conversion to UTF\-8 for simple chapter files\&. See the section about
text files and character sets
for an explanation how
\fBmkvmerge\fR(1)
converts between character sets\&.
.sp
This switch does also apply to chapters that are copied from certain container types, e\&.g\&. Ogg/OGM and MP4 files\&. See the section about chapters below for details\&.
.RE
.PP
\fB\-\-generate\-chapters\fR \fImode\fR
.RS 4
\fBmkvmerge\fR(1)
can create chapters automatically\&. The following two modes are currently supported:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\*(Aqwhen\-appending\*(Aq \(en This mode creates one chapter at the start and one chapter whenever a file is appended\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUwaga\fR
.ps -1
.br
\fBmkvmerge\fR(1)
requires a video or an audio track to be present in order to be able to determine when a new file is appended\&. If one or more video tracks are muxed the first one is used\&. Otherwise the first audio track is used\&.
.sp .5v
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\*(Aqinterval:\fItime\-spec\fR\*(Aq \(en This mode creates one chapter at fixed intervals given by
\fItime\-spec\fR\&. The format is either the form
\fIHH:MM:SS\&.nnnnnnnnn\fR
or a number followed by one of the units \*(Aqs\*(Aq, \*(Aqms\*(Aq or \*(Aqus\*(Aq\&.
.sp
Example:
\-\-generate\-chapters interval:45s
.RE
.sp
The names for the new chapters are controlled by the option
\-\-generate\-chapters\-name\-template\&. The language is set with
\-\-chapter\-language
which must occur before
\fB\-\-generate\-chapters\fR\&.
.RE
.PP
\fB\-\-generate\-chapters\-name\-template\fR \fItemplate\fR
.RS 4
This sets the name template for chapter names generated by the option
\-\-generate\-chapters\&. If the option is not used then default \*(AqChapter <NUM:2>\*(Aq will be used\&.
.sp
There are several variables that can be used in the template that are replaced by their actual values when a chapter is generated\&. The string \*(Aq<NUM>\*(Aq will be replaced by the chapter number\&. The string \*(Aq<START>\*(Aq will be replaced by the chapter\*(Aqs start timestamp\&.
.sp
The strings
\*(Aq<FILE_NAME>\*(Aq
and
\*(Aq<FILE_NAME_WITH_EXT>\*(Aq
are only filled when generating chapters for appended files\&. They will be replaced by the appended file\*(Aqs name wihtout respectively with its extension\&. Note that only the file\*(Aqs base name and extension are inserted, not its directory or drive components\&.
.sp
You can specify a minimum number of places for the chapter number with \*(Aq<NUM:places>\*(Aq, e\&.g\&. \*(Aq<NUM:3>\*(Aq\&. The resulting number will be padded with leading zeroes if the number of places is less than specified\&.
.sp
You can control the format used by the start timestamp with
<START:format>\&. The format defaults to \*(Aq%H:%M:%S\*(Aq if none is given\&. Valid format codes are:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
%h
\(en hours
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
%H
\(en hours zero\-padded to two places
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
%m
\(en minutes
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
%M
\(en minutes zero\-padded to two places
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
%s
\(en seconds
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
%S
\(en seconds zero\-padded to two places
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
%n
\(en nanoseconds with nine places
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
%<1\-9>n
\(en nanoseconds with up to nine places (e\&.g\&. three places with
%3n)
.RE
.RE
.PP
\fB\-\-cue\-chapter\-name\-format\fR \fIformat\fR
.RS 4
\fBmkvmerge\fR(1)
supports reading
CUE
sheets for audio files as the input for chapters\&.
CUE
sheets usually contain the entries
\fIPERFORMER\fR
and
\fITITLE\fR
for each index entry\&.
\fBmkvmerge\fR(1)
uses these two strings in order to construct the chapter name\&. With this option the format used for this name can be set\&.
.sp
If this option is not given then
\fBmkvmerge\fR(1)
defaults to the format \*(Aq%p \- %t\*(Aq (the performer, followed by a space, a dash, another space and the title)\&.
.sp
If the format is given then everything except the following meta characters is copied as\-is, and the meta characters are replaced like this:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%p\fR
jest zastępowany przez aktualną wartość linii
\fIPERFORMER\fR,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%t\fR
jest zastępowany przez aktualną wartość linii
\fITITLE\fR,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%n\fR
jest zastępowany przez obecny numer ściezki i
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%N\fR
jest zastępowany przez aktualny numer ścieżki i dodawanym zerem z przodu jeśli < 10\&.
.RE
.RE
.PP
\fB\-\-chapters\fR \fInazwa\-pliku\fR
.RS 4
Read chapter information from the file
\fIfile\-name\fR\&. See the section about
chapters
below for details\&.
.RE
.PP
\fB\-\-global\-tags\fR \fInazwa\-pliku\fR
.RS 4
Read global tags from the file
\fIfile\-name\fR\&. See the section about
tags
below for details\&.
.RE
.SS "General output control (advanced global options)"
.PP
\fB\-\-track\-order\fR \fIFID1:TID1,FID2:TID2,\&.\&.\&.\fR
.RS 4
This option changes the order in which the tracks for an input file are created\&. The argument is a comma separated list of pairs IDs\&. Each pair contains first the file ID (\fIFID1\fR) which is simply the number of the file on the command line starting at 0\&. The second is a track ID (\fITID1\fR) from that file\&. If some track IDs are omitted then those tracks are created after the ones given with this option have been created\&.
.RE
.PP
\fB\-\-cluster\-length\fR \fIparametr\fR
.RS 4
Limit the number of data blocks or the duration of data in each cluster\&. The
\fIspec\fR
parameter can either be a number
\fIn\fR
without a unit or a number
\fId\fR
postfixed with \*(Aqms\*(Aq\&.
.sp
If no unit is used then
\fBmkvmerge\fR(1)
will put at most
\fIn\fR
data blocks into each cluster\&. The maximum number of blocks is 65535\&.
.sp
If the number
\fId\fR
is postfixed with \*(Aqms\*(Aq then
\fBmkvmerge\fR(1)
puts at most
\fId\fR
milliseconds of data into each cluster\&. The minimum for
\fId\fR
is \*(Aq100ms\*(Aq, and the maximum is \*(Aq32000ms\*(Aq\&.
.sp
\fBmkvmerge\fR(1)
defaults to putting at most 65535 data blocks and 5000ms of data into a cluster\&.
.sp
Programs trying to find a certain frame can only seek directly to a cluster and have to read the whole cluster afterwards\&. Therefore creating larger clusters may lead to imprecise or slow seeking\&.
.RE
.PP
\fB\-\-no\-cues\fR
.RS 4
Tells
\fBmkvmerge\fR(1)
not to create and write the cue data which can be compared to an index in an AVI\&.
Matroska(TM)
files can be played back without the cue data, but seeking will probably be imprecise and slower\&. Use this only if you\*(Aqre really desperate for space or for testing purposes\&. See also option
\fB\-\-cues\fR
which can be specified for each input file\&.
.RE
.PP
\fB\-\-clusters\-in\-meta\-seek\fR
.RS 4
Tells
\fBmkvmerge\fR(1)
to create a meta seek element at the end of the file containing all clusters\&. See also the section about the
Matroska(TM) file layout\&.
.RE
.PP
\fB\-\-disable\-lacing\fR
.RS 4
Disables lacing for all tracks\&. This will increase the file\*(Aqs size, especially if there are many audio tracks\&. This option is not intended for everyday use\&.
.RE
.PP
\fB\-\-enable\-durations\fR
.RS 4
Write durations for all blocks\&. This will increase file size and does not offer any additional value for players at the moment\&.
.RE
.PP
\fB\-\-disable\-track\-statistics\-tags\fR
.RS 4
Normally
\fBmkvmerge\fR(1)
will write certain tags with statistics for each track\&. If such tags are already present then they will be overwritten\&. The tags are
\fBBPS\fR,
\fBDURATION\fR,
\fBNUMBER_OF_BYTES\fR
and
\fBNUMBER_OF_FRAMES\fR\&.
.sp
Enabling this option prevents
\fBmkvmerge\fR(1)
from writing those tags and from touching any existing tags with same names\&.
.RE
.PP
\fB\-\-timecode\-scale\fR \fIwsp\('o\(/lczynnik\fR
.RS 4
Forces the timecode scale factor to
\fIfactor\fR\&. Valid values are in the range
\fB1000\fR\&.\&.\fB10000000\fR
or the special value
\fB\-1\fR\&.
.sp
Normally
\fBmkvmerge\fR(1)
will use a value of
\fB1000000\fR
which means that timecodes and durations will have a precision of 1ms\&. For files that will not contain a video track but at least one audio track
\fBmkvmerge\fR(1)
will automatically chose a timecode scale factor so that all timecodes and durations have a precision of one audio sample\&. This causes bigger overhead but allows precise seeking and extraction\&.
.sp
If the special value
\fB\-1\fR
is used then
\fBmkvmerge\fR(1)
will use sample precision even if a video track is present\&.
.RE
.SS "Dzielenie plik\('ow, powiązanie, scalanie i \(/lączenie (więcej opcji globalnych)"
.PP
\fB\-\-split\fR \fIparametr\fR
.RS 4
Splits the output file after a given size or a given time\&. Please note that tracks can only be split right before a key frame\&. Due to buffering
\fBmkvmerge\fR(1)
will split right before the next key frame after the split point has been reached\&. Therefore the split point may be a bit off from what the user has specified\&.
.sp
Na obecną chwilę
\fBmkvmerge\fR(1)
obs\(/luguje cztery r\('ożne tryby\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Splitting by size\&.
.sp
Syntax:
\fB\-\-split\fR
[size:]\fId\fR[k|m|g]
.sp
Przyk\(/lady:
\-\-split size:700m
lub
\-\-split 150000000
.sp
The parameter
\fId\fR
may end with \*(Aqk\*(Aq, \*(Aqm\*(Aq or \*(Aqg\*(Aq to indicate that the size is in KB, MB or GB respectively\&. Otherwise a size in bytes is assumed\&. After the current output file has reached this size limit a new one will be started\&.
.sp
The \*(Aqsize:\*(Aq prefix may be omitted for compatibility reasons\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Splitting after a duration\&.
.sp
Syntax:
\fB\-\-split\fR
[duration:]\fIHH:MM:SS\&.nnnnnnnnn\fR|\fId\fRs
.sp
Przyk\(/lady:
\-\-split duration:00:60:00\&.000
lub
\-\-split 3600s
.sp
The parameter must either have the form
\fIHH:MM:SS\&.nnnnnnnnn\fR
for specifying the duration in up to nano\-second precision or be a number
\fId\fR
followed by the letter \*(Aqs\*(Aq for the duration in seconds\&.
\fIHH\fR
is the number of hours,
\fIMM\fR
the number of minutes,
\fISS\fR
the number of seconds and
\fInnnnnnnnn\fR
the number of nanoseconds\&. Both the number of hours and the number of nanoseconds can be omitted\&. There can be up to nine digits after the decimal point\&. After the duration of the contents in the current output has reached this limit a new output file will be started\&.
.sp
The \*(Aqduration:\*(Aq prefix may be omitted for compatibility reasons\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Splitting after specific timecodes\&.
.sp
Syntax:
\fB\-\-split\fR
timecodes:\fIA\fR[,\fIB\fR[,\fIC\fR\&.\&.\&.]]
.sp
Przyk\(/lad:
\-\-split timecodes:00:45:00\&.000,01:20:00\&.250,6300s
.sp
The parameters
\fIA\fR,
\fIB\fR,
\fIC\fR
etc must all have the same format as the ones used for the duration (see above)\&. The list of timecodes is separated by commas\&. After the input stream has reached the current split point\*(Aqs timecode a new file is created\&. Then the next split point given in this list is used\&.
.sp
The \*(Aqtimecodes:\*(Aq prefix must not be omitted\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Keeping specific parts by specifying timecode ranges while discarding others\&.
.sp
Syntax:
\fB\-\-split\fR
parts:\fIstart1\fR\-\fIend1\fR[,[+]\fIstart2\fR\-\fIend2\fR[,[+]\fIstart3\fR\-\fIend3\fR\&.\&.\&.]]
.sp
Przyk\(/lady:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
\-\-split parts:00:01:20\-00:02:45,00:05:50\-00:10:30
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
\-\-split parts:00:01:20\-00:02:45,+00:05:50\-00:10:30
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
\-\-split parts:\-00:02:45,00:05:50\-
.RE
.sp
The
parts
mode tells
\fBmkvmerge\fR(1)
to keep certain ranges of timecodes while discarding others\&. The ranges to keep have to be listed after the
parts:
keyword and be separated by commas\&. A range itself consists of a start and an end timecode in the same format the other variations of
\fI\-\-split\fR
accept (e\&.g\&. both
00:01:20
and
80s
refer to the same timecode)\&.
.sp
If a start timecode is left out then it defaults to the previous range\*(Aqs end timecode\&. If there was no previous range then it defaults to the start of the file (see example 3)\&.
.sp
If an end timecode is left out then it defaults to the end of the source files which basically tells
\fBmkvmerge\fR(1)
to keep the rest (see example 3)\&.
.sp
Normally each range will be written to a new file\&. This can be changed so that consecutive ranges are written to the same file\&. For that the user has to prefix the start timecode with a
+\&. This tells
\fBmkvmerge\fR(1)
not to create a new file and instead append the range to the same file the previous range was written to\&. Timecodes will be adjusted so that there will be no gap in the output file even if there was a gap in the two ranges in the input file\&.
.sp
In example 1
\fBmkvmerge\fR(1)
will create two files\&. The first will contain the content starting from
00:01:20
until
00:02:45\&. The second file will contain the content starting from
00:05:50
until
00:10:30\&.
.sp
In example 2
\fBmkvmerge\fR(1)
will create only one file\&. This file will contain both the content starting from
00:01:20
until
00:02:45
and the content starting from
00:05:50
until
00:10:30\&.
.sp
In example 3
\fBmkvmerge\fR(1)
will create two files\&. The first will contain the content from the start of the source files until
00:02:45\&. The second file will contain the content starting from
00:05:50
until the end of the source files\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUwaga\fR
.ps -1
.br
Note that
\fBmkvmerge\fR(1)
only makes decisions about splitting at key frame positions\&. This applies to both the start and the end of each range\&. So even if an end timecode is between two key frames
\fBmkvmerge\fR(1)
will continue outputting the frames up to but excluding the following key frame\&.
.sp .5v
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
Keeping specific parts by specifying frame/field number ranges while discarding others\&.
.sp
Syntax:
\fB\-\-split\fR
parts\-frames:\fIstart1\fR\-\fIend1\fR[,[+]\fIstart2\fR\-\fIend2\fR[,[+]\fIstart3\fR\-\fIend3\fR\&.\&.\&.]]
.sp
Przyk\(/lady:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
\-\-split parts\-frames:137\-258,548\-1211
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
\-\-split parts\-frames:733\-912,+1592\-2730
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
\-\-split parts\-frames:\-430,2512\-
.RE
.sp
The
parts\-frames
mode tells
\fBmkvmerge\fR(1)
to keep certain ranges of frame/field numbers while discarding others\&. The ranges to keep have to be listed after the
parts\-frames:
keyword and be separated by commas\&. A range itself consists of a start and an end frame/field number\&. Numbering starts at 1\&.
.sp
If a start number is left out then it defaults to the previous range\*(Aqs end number\&. If there was no previous range then it defaults to the start of the file (see example 3)\&.
.sp
If an end number is left out then it defaults to the end of the source files which basically tells
\fBmkvmerge\fR(1)
to keep the rest (see example 3)\&.
.sp
Normally each range will be written to a new file\&. This can be changed so that consecutive ranges are written to the same file\&. For that the user has to prefix the start number with a
+\&. This tells
\fBmkvmerge\fR(1)
not to create a new file and instead append the range to the same file the previous range was written to\&. Timecodes will be adjusted so that there will be no gap in the output file even if there was a gap in the two ranges in the input file\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUwaga\fR
.ps -1
.br
Note that
\fBmkvmerge\fR(1)
only makes decisions about splitting at key frame positions\&. This applies to both the start and the end of each range\&. So even if an end frame/field number is between two key frames
\fBmkvmerge\fR(1)
will continue outputting the frames up to but excluding the following key frame\&.
.sp .5v
.RE
In example 1
\fBmkvmerge\fR(1)
will create two files\&. The first will contain the content starting from the first key frame at or after
137
up to but excluding the first key frame at or after
258\&. The second file will contain the content starting from
548
until
1211\&.
.sp
In example 2
\fBmkvmerge\fR(1)
will create only one file\&. This file will contain both the content starting from
733
until
912
and the content starting from
1592
until
2730\&.
.sp
In example 3
\fBmkvmerge\fR(1)
will create two files\&. The first will contain the content from the start of the source files until
430\&. The second file will contain the content starting from
2512
until the end of the source files\&.
.sp
This mode considers only the first video track that is output\&. If no video track is output no splitting will occur\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUwaga\fR
.ps -1
.br
The numbers given with this argument are interpreted based on the number of
Matroska(TM)
blocks that are output\&. A single
Matroska(TM)
block contains either a full frame (for progressive content) or a single field (for interlaced content)\&. mkvmerge does not distinguish between those two and simply counts the number of blocks\&. For example: If one wanted to split after the 25th full frame with interlaced content one would have to use
50
(two fields per full frame) as the split point\&.
.sp .5v
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
Splitting after specific frames/fields\&.
.sp
Syntax:
\fB\-\-split\fR
frames:\fIA\fR[,\fIB\fR[,\fIC\fR\&.\&.\&.]]
.sp
Przyk\(/lad:
\-\-split frames:120,237,891
.sp
The parameters
\fIA\fR,
\fIB\fR,
\fIC\fR
etc must all be positive integers\&. Numbering starts at 1\&. The list of frame/field numbers is separated by commas\&. After the input stream has reached the current split point\*(Aqs frame/field number a new file is created\&. Then the next split point given in this list is used\&.
.sp
The \*(Aqframes:\*(Aq prefix must not be omitted\&.
.sp
This mode considers only the first video track that is output\&. If no video track is output no splitting will occur\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUwaga\fR
.ps -1
.br
The numbers given with this argument are interpreted based on the number of
Matroska(TM)
blocks that are output\&. A single
Matroska(TM)
block contains either a full frame (for progressive content) or a single field (for interlaced content)\&. mkvmerge does not distinguish between those two and simply counts the number of blocks\&. For example: If one wanted to split after the 25th full frame with interlaced content one would have to use
50
(two fields per full frame) as the split point\&.
.sp .5v
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  7." 4.2
.\}
Splitting before specific chapters\&.
.sp
Syntax:
\fB\-\-split\fR
chapters:all
or
\fB\-\-split\fR
chapters:\fIA\fR[,\fIB\fR[,\fIC\fR\&.\&.\&.]]
.sp
Przyk\(/lad:
\-\-split chapters:5,8
.sp
The parameters
\fIA\fR,
\fIB\fR,
\fIC\fR
etc must all be positive integers\&. Numbering starts at 1\&. The list of chapter numbers is separated by commas\&. Splitting will occur right before the first key frame whose timecode is equal to or bigger than the start timecode for the chapters whose numbers are listed\&. A chapter starting at 0s is never considered for splitting and discarded silently\&.
.sp
The keyword
all
can be used instead of listing all chapter numbers manually\&.
.sp
The \*(Aqchapters:\*(Aq prefix must not be omitted\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUwaga\fR
.ps -1
.br
The
Matroska(TM)
file format supports arbitrary deeply nested chapter structures called \*(Aqedition entries\*(Aq and \*(Aqchapter atoms\*(Aq\&. However, this mode only considers the top\-most level of chapters across all edition entries\&.
.sp .5v
.RE
.RE
.sp
For this splitting mode the output filename is treated differently than for the normal operation\&. It may contain a
\fBprintf\fR
like expression \*(Aq%d\*(Aq including an optional field width, e\&.g\&. \*(Aq%02d\*(Aq\&. If it does then the current file number will be formatted appropriately and inserted at that point in the filename\&. If there is no such pattern then a pattern of \*(Aq\-%03d\*(Aq is assumed right before the file\*(Aqs extension: \*(Aq\-o output\&.mkv\*(Aq would result in \*(Aqoutput\-001\&.mkv\*(Aq and so on\&. If there\*(Aqs no extension then \*(Aq\-%03d\*(Aq will be appended to the name\&.
.RE
.PP
\fB\-\-link\fR
.RS 4
Link files to one another when splitting the output file\&. See the section on
file linking
below for details\&.
.RE
.PP
\fB\-\-link\-to\-previous\fR \fIUID\-segmentu\fR
.RS 4
Links the first output file to the segment with the segment UID given by the
\fIsegment\-UID\fR
parameter\&. See the section on
file linking
below for details\&.
.sp
If SID starts with = then its rest is interpreted as the name of a Matroska file whose segment UID is read and used\&.
.RE
.PP
\fB\-\-link\-to\-next\fR \fIUID\-segmentu\fR
.RS 4
Links the last output file to the segment with the segment UID given by the
\fIsegment\-UID\fR
parameter\&. See the section on
file linking
below for details\&.
.sp
If SID starts with = then its rest is interpreted as the name of a Matroska file whose segment UID is read and used\&.
.RE
.PP
\fB\-\-append\-mode\fR \fItryb\fR
.RS 4
Określa jak kody czasowe są przeliczane podczas scalania plik\('ow\&. Parametr
\fItryb\fR
może mieć dwie wartości: \*(Aqfile\*(Aq kt\('ory jest domyślny oraz \*(Aqtrack\*(Aq\&.
.sp
When mkvmerge appends a track (called \*(Aqtrack2_1\*(Aq from now on) from a second file (called \*(Aqfile2\*(Aq) to a track (called \*(Aqtrack1_1\*(Aq) from the first file (called \*(Aqfile1\*(Aq) then it has to offset all timecodes for \*(Aqtrack2_1\*(Aq by an amount\&. For \*(Aqfile\*(Aq mode this amount is the highest timecode encountered in \*(Aqfile1\*(Aq even if that timecode was from a different track than \*(Aqtrack1_1\*(Aq\&. In track mode the offset is the highest timecode of \*(Aqtrack1_1\*(Aq\&.
.sp
Unfortunately mkvmerge cannot detect which mode to use reliably\&. Therefore it defaults to \*(Aqfile\*(Aq mode\&. \*(Aqfile\*(Aq mode usually works better for files that have been created independently of each other; e\&.g\&. when appending
AVI
or
MP4
files\&. \*(Aqtrack\*(Aq mode may work better for sources that are essentially just parts of one big file, e\&.g\&. for
VOB
and
EVO
files\&.
.sp
Subtitle tracks are always treated as if \*(Aqfile\*(Aq mode were active even if \*(Aqtrack\*(Aq mode actually is\&.
.RE
.PP
\fB\-\-append\-to\fR \fISFID1:STID1:DFID1:DTID1\fR\fI[,\&.\&.\&.]\fR
.RS 4
This option controls to which track another track is appended\&. Each spec contains four IDs: a file ID, a track ID, a second file ID and a second track ID\&. The first pair, "source file ID" and "source track ID", identifies the track that is to be appended\&. The second pair, "destination file ID" and "destination track ID", identifies the track the first one is appended to\&.
.sp
If this option has been omitted then a standard mapping is used\&. This standard mapping appends each track from the current file to a track from the previous file with the same track ID\&. This allows for easy appending if a movie has been split into two parts and both file have the same number of tracks and track IDs with the command
\fBmkvmerge \-o output\&.mkv part1\&.mkv +part2\&.mkv\fR\&.
.RE
.PP
\fB+\fR
.RS 4
A single \*(Aq+\*(Aq causes the next file to be appended instead of added\&. The \*(Aq+\*(Aq can also be put in front of the next file name\&. Therefore the following two commands are equivalent:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o ca\(/ly\&.mkv plik1\&.mkv + plik2\&.mkv
$ mkvmerge \-o ca\(/ly\&.mkv plik1\&.mkv +plik2\&.mkv
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB[\fR \fIfile1\fR \fIfile2\fR \fB]\fR
.RS 4
If multiple file names are contained in a pair of square brackets then the second and all following files will be appended to the first file named within the brackets\&.
.sp
This is an alternative syntax to using \*(Aq+\*(Aq between the file names\&. Therefore the following two commands are equivalent:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o full\&.mkv file1\&.mkv + file2\&.mkv
$ mkvmerge \-o full\&.mkv \*(Aq[\*(Aq file1\&.mkv file2\&.mkv \*(Aq]\*(Aq
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB=\fR
.RS 4
Normally
\fBmkvmerge\fR(1)
looks for files in the same directory as an input file that have the same base name and only differ in their running number (e\&.g\&. \*(AqVTS_01_1\&.VOB\*(Aq, \*(AqVTS_01_2\&.VOB\*(Aq, \*(AqVTS_01_3\&.VOB\*(Aq etc) and treats all of those files as if they were concatenated into a single big file\&. This option, a single \*(Aq=\*(Aq, causes mkvmerge not to look for those additional files\&.
.sp
The \*(Aq=\*(Aq can also be put in front of the next file name\&. Therefore the following two commands are equivalent:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o ca\(/ly\&.mkv = plik1\&.mkv
$ mkvmerge \-o ca\(/ly\&.mkv =plik1\&.mkv
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB(\fR \fIplik1\fR \fIplik2\fR \fB)\fR
.RS 4
If multiple file names are contained in a pair of parenthesis then those files will be treated as if they were concatenated into a single big file consisting of the content of each of the files one after the other\&.
.sp
This can be used for e\&.g\&. VOB files coming from a DVD or MPEG transport streams\&. It cannot be used if each file contains its own set of headers which is usually the case with stand\-alone files like AVI or MP4\&.
.sp
Putting a file name into parenthesis also prevents
\fBmkvmerge\fR(1)
from looking for additional files with the same base name as described in
option \fB=\fR\&. Therefore these two command lines are equivalent:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o wyjściowy\&.mkv = plik\&.mkv
$ mkvmerge \-o wyjściowy\&.mkv \*(Aq(\*(Aq plik\&.mkv \*(Aq)\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Several things should be noted:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
There must be spaces both after the opening and before the closing parenthesis\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Every parameter between parenthesis is interpreted as a file name\&. Therefore all options applying to this logical file must be listed before the opening parenthesis\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Some shells treat parenthesis as special characters\&. Hence you must escape or quote them as shown in the example above\&.
.RE
.RE
.SS "Obs\(/luga za\(/lącznik\('ow (więcej globalnych opcji)"
.PP
\fB\-\-attachment\-description\fR \fIopis\fR
.RS 4
Plain text description of the following attachment\&. Applies to the next
\fB\-\-attach\-file\fR
or
\fB\-\-attach\-file\-once\fR
option\&.
.RE
.PP
\fB\-\-attachment\-mime\-type\fR \fItyp MIME\fR
.RS 4
Typ
MIME
następującego za\(/lącznika\&. Używany razem z opcją
\fB\-\-attach\-file\fR
lub
\fB\-\-attach\-file\-once\fR\&. Lista oficjalnie rozpoznawanych typ\('ow
MIME
może się znajdować na
\m[blue]\fBstronie domowej IANA\fR\m[]\&\s-2\u[2]\d\s+2\&. Typ
MIME
jest wymagany dla określenia za\(/lącznika\&.
.RE
.PP
\fB\-\-attachment\-name\fR \fInazwa\fR
.RS 4
Sets the name that will be stored in the output file for this attachment\&. If this option is not given then the name will be derived from the file name of the attachment as given with the
\fB\-\-attach\-file\fR
or the
\fB\-\-attach\-file\-once\fR
option\&.
.RE
.PP
\fB\-\-attach\-file\fR \fInazwa\-pliku\fR, \fB\-\-attach\-file\-once\fR \fInazwa\-pliku\fR
.RS 4
Creates a file attachment inside the
Matroska(TM)
file\&. The
MIME
type must have been set before this option can used\&. The difference between the two forms is that during splitting the files attached with
\fB\-\-attach\-file\fR
are attached to all output files while the ones attached with
\fB\-\-attach\-file\-once\fR
are only attached to the first file created\&. If splitting is not used then both do the same\&.
.sp
\fBmkvextract\fR(1)
can be used to extract attached files from a
Matroska(TM)
file\&.
.RE
.SS "Opcje mogące być użyte dla każdego pliku wejściowego"
.PP
\fB\-a\fR, \fB\-\-audio\-tracks\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the audio tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch\&. They\*(Aqre not simply the track numbers (see section
track IDs)\&. Default: copy all audio tracks\&.
.sp
Instead of track IDs you can also provide ISO 639\-2 language codes\&. This will only work for source files that provide language tags for their tracks\&.
.sp
Domyślnie: kopiuj wszystkie ścieżki tego rodzaju
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy all tracks of this kind but the ones listed after the
!\&.
.RE
.PP
\fB\-d\fR, \fB\-\-video\-tracks\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the video tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch\&. They\*(Aqre not simply the track numbers (see section
track IDs)\&. Default: copy all video tracks\&.
.sp
Instead of track IDs you can also provide ISO 639\-2 language codes\&. This will only work for source files that provide language tags for their tracks\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy all tracks of this kind but the ones listed after the
!\&.
.RE
.PP
\fB\-s\fR, \fB\-\-subtitle\-tracks\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the subtitle tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch\&. They\*(Aqre not simply the track numbers (see section
track IDs)\&. Default: copy all subtitle tracks\&.
.sp
Instead of track IDs you can also provide ISO 639\-2 language codes\&. This will only work for source files that provide language tags for their tracks\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy all tracks of this kind but the ones listed after the
!\&.
.RE
.PP
\fB\-b\fR, \fB\-\-button\-tracks\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the button tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch\&. They\*(Aqre not simply the track numbers (see section
track IDs)\&. Default: copy all button tracks\&.
.sp
Instead of track IDs you can also provide ISO 639\-2 language codes\&. This will only work for source files that provide language tags for their tracks\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy all tracks of this kind but the ones listed after the
!\&.
.RE
.PP
\fB\-\-track\-tags\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the tags for tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch (see section
track IDs)\&. They\*(Aqre not simply the track numbers\&. Default: copy tags for all tracks\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy everything but the IDs listed after the
!\&.
.RE
.PP
\fB\-m\fR, \fB\-\-attachments\fR \fI[!]\fR\fIn\fR\fI[:all|first]\fR\fI,m\fR\fI[:all|first]\fR\fI,\&.\&.\&.\fR
.RS 4
Copy the attachments with the IDs
\fIn\fR,
\fIm\fR
etc to all or only the first output file\&. Each ID can be followed by either \*(Aq:all\*(Aq (which is the default if neither is entered) or \*(Aq:first\*(Aq\&. If splitting is active then those attachments whose IDs are specified with \*(Aq:all\*(Aq are copied to all of the resulting output files while the others are only copied into the first output file\&. If splitting is not active then both variants have the same effect\&.
.sp
The default is to copy all attachments to all output files\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy everything but the IDs listed after the
!\&.
.RE
.PP
\fB\-A\fR, \fB\-\-no\-audio\fR
.RS 4
Żadna ścieżka dźwiękowa nie jest kopiowana z tego pliku\&.
.RE
.PP
\fB\-D\fR, \fB\-\-no\-video\fR
.RS 4
Żadne ścieżki obrazu nie są kopiowane z tego pliku\&.
.RE
.PP
\fB\-S\fR, \fB\-\-no\-subtitles\fR
.RS 4
Żadna ścieżka napis\('ow nie jest kopiowana z tego pliku\&.
.RE
.PP
\fB\-B\fR, \fB\-\-no\-buttons\fR
.RS 4
Żadna ścieżka przycisk\('ow nie jest kopiowana z tego pliku\&.
.RE
.PP
\fB\-T\fR, \fB\-\-no\-track\-tags\fR
.RS 4
Żadne pliki tag\('ow nie są kopiowane z tego pliku\&.
.RE
.PP
\fB\-\-no\-chapters\fR
.RS 4
Żadne rozdzia\(/ly nie są kopiowane z tego pliku\&.
.RE
.PP
\fB\-M\fR, \fB\-\-no\-attachments\fR
.RS 4
Żadne za\(/lączniki nie są kopiowane z tego pliku\&.
.RE
.PP
\fB\-\-no\-global\-tags\fR
.RS 4
Żadne globalne tagi nie są kopiowane z tego pliku\&.
.RE
.PP
\fB\-\-chapter\-charset\fR \fIzestaw\-znak\('ow\fR
.RS 4
Sets the charset that is used for the conversion to UTF\-8 for chapter information contained in the source file\&. See the section about
text files and character sets
for an explanation how
\fBmkvmerge\fR(1)
converts between character sets\&.
.RE
.PP
\fB\-\-chapter\-language\fR \fIkod\-językowy\fR
.RS 4
Sets the ISO639\-2 language code that is written for each chapter entry\&. This option can be used for source files that contain chapters but no information about the chapters\*(Aq languages, e\&.g\&. for MP4 and OGM files\&.
.RE
.PP
\fB\-y\fR, \fB\-\-sync\fR \fITID:d\fR\fI[,o[/p]]\fR
.RS 4
Dostosowuje kody czasowe ścieżki z id
\fITID\fR
o
\fId\fR
ms\&. ID ścieżek są takie same jak wyświetlone w opcji
\fB\-\-identify\fR
(patrz rozdzia\(/l
ID ścieżek)\&.
.sp
\fIo\fR/\fIp\fR: przesuwa czas o wielkość
\fIo\fR/\fIp\fR
aby naprawić liniowe odchy\(/ly\&.
\fIp\fR
domyślnie jest 1 jeśli nie ustawiony inaczej\&. Oba parametry
\fIo\fR
i
\fIp\fR
mogą być liczbami zmiennoprzecinkowymi\&.
.sp
Domyślnie: brak ręcznej korekcji synchronizacji (co jest tożsame z
\fId\fR
=
\fB0\fR
i
\fIo\fR/\fIp\fR
=
\fB1\&.0\fR)\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-\-cues\fR \fITID:none|iframes|all\fR
.RS 4
Controls for which tracks cue (index) entries are created for the given track (see section
track IDs)\&. \*(Aqnone\*(Aq inhibits the creation of cue entries\&. For \*(Aqiframes\*(Aq only blocks with no backward or forward references ( = I frames in video tracks) are put into the cue sheet\&. \*(Aqall\*(Aq causes
\fBmkvmerge\fR(1)
to create cue entries for all blocks which will make the file very big\&.
.sp
The default is \*(Aqiframes\*(Aq for video and subtitle tracks and \*(Aqnone\*(Aq for audio tracks\&. See also option
\fB\-\-no\-cues\fR
which inhibits the creation of cue entries regardless of the
\fB\-\-cues\fR
options used\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-\-default\-track\fR \fITID\fR\fI[:bool]\fR
.RS 4
Sets the \*(Aqdefault\*(Aq flag for the given track (see section
track IDs) if the optional argument
\fIbool\fR
is not present\&. If the user does not explicitly select a track himself then the player should prefer the track that has his \*(Aqdefault\*(Aq flag set\&. Only one track of each kind (audio, video, subtitles, buttons) can have his \*(Aqdefault\*(Aq flag set\&. If the user wants no track to have the default track flag set then he has to set
\fIbool\fR
to
\fB0\fR
for all tracks\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-\-forced\-track\fR \fITID\fR\fI[:bool]\fR
.RS 4
Sets the \*(Aqforced\*(Aq flag for the given track (see section
track IDs) if the optional argument
\fIbool\fR
is not present\&. A player must play all tracks for which this flag is set to
\fB1\fR\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-\-blockadd\fR \fITID:poziom\fR
.RS 4
Keep only the
BlockAdditions
up to the level
\fIlevel\fR
for the given track\&. The default is to keep all levels\&. This option only affects certain kinds of codecs like WAVPACK4\&.
.RE
.PP
\fB\-\-track\-name\fR \fITID:nazwa\fR
.RS 4
Sets the track name for the given track (see section
track IDs) to
\fIname\fR\&.
.RE
.PP
\fB\-\-language\fR \fITID:język\fR
.RS 4
Sets the language for the given track (see section
track IDs)\&. Both ISO639\-2 language codes and ISO639\-1 country codes are allowed\&. The country codes will be converted to language codes automatically\&. All languages including their ISO639\-2 codes can be listed with the
\fB\-\-list\-languages\fR
option\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-t\fR, \fB\-\-tags\fR \fITID:nazwa\-pliku\fR
.RS 4
Read tags for the track with the number
\fITID\fR
from the file
\fIfile\-name\fR\&. See the section about
tags
below for details\&.
.RE
.PP
\fB\-\-aac\-is\-sbr\fR \fITID\fR\fI[:0|1]\fR
.RS 4
Tells
\fBmkvmerge\fR(1)
that the track with the ID
\fITID\fR
is
SBR AAC
(also known as
HE\-AAC
or
AAC+)\&. This options is needed if a) the source file is an
AAC
file (\fInot\fR
for a
Matroska(TM)
file) and b) the
AAC
file contains
SBR AAC
data\&. The reason for this switch is that it is technically impossible to automatically tell normal
AAC
data from
SBR AAC
data without decoding a complete
AAC
frame\&. As there are several patent issues with
AAC
decoders
\fBmkvmerge\fR(1)
will never contain this decoding stage\&. So for
SBR AAC
files this switch is mandatory\&. The resulting file might not play back correctly or even not at all if the switch was omitted\&.
.sp
If the source file is a
Matroska(TM)
file then the
CodecID
should be enough to detect
SBR AAC\&. However, if the
CodecID
is wrong then this switch can be used to correct that\&.
.sp
If mkvmerge wrongfully detects that an
AAC
file is
SBR
then you can add \*(Aq:0\*(Aq to the track ID\&.
.RE
.PP
\fB\-\-reduce\-to\-core\fR \fITID\fR
.RS 4
Some audio codecs have a lossy core and optional extensions that implement lossless decoding\&. This option tells
\fBmkvmerge\fR(1)
to only copy the core but not the extensions\&. By default
\fBmkvmerge\fR(1)
copies both the core and the extensions\&.
.sp
Obecnie tylko ścieżki
DTS
są obs\(/lugiwane przez tę opcję\&. Ścieżki TrueHD zawierające wbudowany rdzeń
AC\-3
są natomiast pokazywane jako dwie oddzielne ścieżki, kt\('ore użytkownik może wybrać do skopiowania\&. Przy
DTS
taki spos\('ob by nie zadzia\(/la\(/l jako że rozszerzenia HD nie mogą być zdekodowane oddzielnie \- odwrotnie jak w przypadku danych TrueHD\&.
.RE
.PP
\fB\-\-timecodes\fR \fITID:nazwa\-pliku\fR
.RS 4
Read the timecodes to be used for the specific track ID from
\fIfile\-name\fR\&. These timecodes forcefully override the timecodes that
\fBmkvmerge\fR(1)
normally calculates\&. Read the section about
external timecode files\&.
.RE
.PP
\fB\-\-default\-duration\fR \fITID:x\fR
.RS 4
Forces the default duration of a given track to the specified value\&. Also modifies the track\*(Aqs timecodes to match the default duration\&. The argument
\fIx\fR
must be postfixed with \*(Aqs\*(Aq, \*(Aqms\*(Aq, \*(Aqus\*(Aq, \*(Aqns\*(Aq, \*(Aqfps\*(Aq, \*(Aqp\*(Aq or \*(Aqi\*(Aq to specify the default duration in seconds, milliseconds, microseconds, nanoseconds, \*(Aqframes per second\*(Aq, \*(Aqprogressive frames per second\*(Aq or \*(Aqinterlaced frames per second\*(Aq respectively\&. The number
\fIx\fR
itself can be a floating point number or a fraction\&.
.sp
If the default duration is not forced then mkvmerge will try to derive the track\*(Aqs default duration from the container and/or the encoded bitstream for certain track types, e\&.g\&. AVC/h\&.264 or MPEG\-2\&.
.sp
This option can also be used to change the
FPS
of video tracks without having to use an external timecode file\&.
.RE
.PP
\fB\-\-fix\-bitstream\-timing\-information\fR \fITID\fR\fI[:0|1]\fR
.RS 4
Normally
\fBmkvmerge\fR(1)
does not change the timing information (frame/field rate) stored in the video bitstream\&. With this option that information is adjusted to match the container timing information\&. The container timing information can come from various sources: from the command line (see option
\fB\-\-default\-duration\fR), the source container or derived from the bitstream\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUwaga\fR
.ps -1
.br
To zosta\(/lo zaimplementowane jak dotąd tylko dla ścieżek obrazu AVC/h\&.264\&.
.sp .5v
.RE
.RE
.PP
\fB\-\-nalu\-size\-length\fR \fITID:n\fR
.RS 4
Forces the
NALU
size length to
\fIn\fR
bytes\&. This parameter is only used if the
AVC/h\&.264
elementary stream packetizer is used\&. If left out it defaults to 4 bytes, but there are files that contain frames or slices that are all smaller than 65536 bytes\&. For such files you can use this parameter and decrease the size to 2\&.
.RE
.PP
\fB\-\-compression\fR \fITID:n\fR
.RS 4
Selects the compression method to be used for the track\&. Note that the player also has to support this method\&. Valid values are \*(Aqnone\*(Aq, \*(Aqzlib\*(Aq and \*(Aqmpeg4_p2\*(Aq/\*(Aqmpeg4p2\*(Aq\&.
.sp
The compression method \*(Aqmpeg4_p2\*(Aq/\*(Aqmpeg4p2\*(Aq is a special compression method called \*(Aqheader removal\*(Aq that is only available for
MPEG4
part 2 video tracks\&.
.sp
The default for some subtitle types is \*(Aqzlib\*(Aq compression\&. This compression method is also the one that most if not all playback applications support\&. Support for other compression methods other than \*(Aqnone\*(Aq is not assured\&.
.RE
.SS "Opcje mające zastosowanie tylko do ścieżek obrazu"
.PP
\fB\-f\fR, \fB\-\-fourcc\fR \fITID:FourCC\fR
.RS 4
Forces the
FourCC
to the specified value\&. Works only for video tracks in the \*(AqMS compatibility mode\*(Aq\&.
.RE
.PP
\fB\-\-display\-dimensions\fR \fITID:szerokośćxwysokość\fR
.RS 4
Pliki
Matroska(TM)
zawierają dwie wartości określające w\(/laściwości wyświetlania, kt\('ore odtwarzacz powinien brać pod uwagę podczas odtwarzania: wyświetlana szerokość i wysokość\&. Te wartości mogą być ustawione z tą opcją, np\&. \*(Aq1:640x480\*(Aq\&.
.sp
Another way to specify the values is to use the
\fB\-\-aspect\-ratio\fR
or the
\fB\-\-aspect\-ratio\-factor\fR
option (see below)\&. These options are mutually exclusive\&.
.RE
.PP
\fB\-\-aspect\-ratio\fR \fITID:ratio|width/height\fR
.RS 4
Pliki
Matroska(TM)
zawierają dwie wartości określające w\(/laściwości wyświetlania, kt\('ore odtwarzacz powinien brać pod uwagę podczas odtwarzania: wyświetlana szerokość i wysokość\&. Za pomocą tej opcji
\fBmkvmerge\fR(1)
automatycznie obliczy szerokość i wysokość wyświetlania bazując na oryginalnej szerokości i wysokości obrazu oraz proporcjach obrazu\&. Proporcje mogą być podane zar\('owno jako liczba zmiennoprzecinkowa
\fIproporcja\fR, jak i jako u\(/lamek \*(Aq\fIszerokość\fR/\fIwysokość\fR\*(Aq, np\&. \*(Aq16/9\*(Aq\&.
.sp
Another way to specify the values is to use the
\fB\-\-aspect\-ratio\-factor\fR
or
\fB\-\-display\-dimensions\fR
options (see above and below)\&. These options are mutually exclusive\&.
.RE
.PP
\fB\-\-aspect\-ratio\-factor\fR \fITID:wsp\('o\(/lczynnik|n/d\fR
.RS 4
Another way to set the aspect ratio is to specify a
\fIfactor\fR\&. The original aspect ratio is first multiplied with this
\fIfactor\fR
and used as the target aspect ratio afterwards\&.
.sp
Another way to specify the values is to use the
\fB\-\-aspect\-ratio\fR
or
\fB\-\-display\-dimensions\fR
options (see above)\&. These options are mutually exclusive\&.
.RE
.PP
\fB\-\-cropping\fR \fITID:lewo,g\('ora,prawo,d\('o\(/l\fR
.RS 4
Sets the pixel cropping parameters of a video track to the given values\&.
.RE
.PP
\fB\-\-colour\-matrix\fR \fITID:n\fR
.RS 4
Sets the matrix coefficients of the video used to derive luma and chroma values from red, green and blue color primaries\&. The parameter
\fIn\fR
is an integer rangeing from
\fB0\fR
and
\fB10\fR\&.
.sp
Valid values and their meaning are:
.sp
\fB0\fR: GBR,
\fB1\fR: BT709,
\fB2\fR: unspecified,
\fB3\fR: reserved,
\fB4\fR: FCC,
\fB5\fR: BT470BG,
\fB6\fR: SMPTE 170M,
\fB7\fR: SMPTE 240M,
\fB8\fR: YCOCG,
\fB9\fR: BT2020 non\-constant luminance,
\fB10\fR: BT2020 constant luminance
.RE
.PP
\fB\-\-colour\-bits\-per\-channel\fR \fITID:n\fR
.RS 4
Sets the number of coded bits for a colour channel\&. A value of
\fB0\fR
indicates that the number of bits is unspecified\&.
.RE
.PP
\fB\-\-chroma\-subsample\fR \fITID:hori,vert\fR
.RS 4
The amount of pixels to remove in the Cr and Cb channels for every pixel not removed horizontally/vertically\&.
.sp
Example: For video with 4:2:0 chroma subsampling, the parameter should be set to
\fITID\fR:\fB1\fR,\fB1\fR\&.
.RE
.PP
\fB\-\-cb\-subsample\fR \fITID:hori,vert\fR
.RS 4
The amount of pixels to remove in the Cb channel for every pixel not removed horizontally/vertically\&. This is additive with
\fB\-\-chroma\-subsample\fR\&.
.sp
Example: For video with 4:2:1 chroma subsampling, the parameter
\fB\-\-chroma\-subsample\fR
should be set to
\fITID\fR:\fB1\fR,\fB0\fR
and Cb\-subsample should be set to
\fITID\fR:\fB1\fR,\fB0\fR\&.
.RE
.PP
\fB\-\-chroma\-siting\fR \fITID:hori,vert\fR
.RS 4
Sets how chroma is sited horizontally/vertically (\fB0\fR: unspecified,
\fB1\fR: top collocated,
\fB2\fR: half)\&.
.RE
.PP
\fB\-\-colour\-range\fR \fITID:n\fR
.RS 4
Sets the clipping of the color ranges (\fB0\fR: unspecified,
\fB1\fR: broadcast range,
\fB2\fR: full range (no clipping),
\fB3\fR: defined by MatrixCoefficients/TransferCharacteristics)\&.
.RE
.PP
\fB\-\-colour\-transfer\-characteristics\fR \fITID:n\fR
.RS 4
The transfer characteristics of the video\&.
.sp
Valid values and their meaning are:
.sp
\fB0\fR: reserved,
\fB1\fR: ITU\-R BT\&.709,
\fB2\fR: unspecified,
\fB3\fR: reserved,
\fB4\fR: gamma 2\&.2 curve,
\fB5\fR: gamma 2\&.8 curve,
\fB6\fR: SMPTE 170M,
\fB7\fR: SMPTE 240M,
\fB8\fR: linear,
\fB9\fR: log,
\fB10\fR: log sqrt,
\fB11\fR: IEC 61966\-2\-4,
\fB12\fR: ITU\-R BT\&.1361 extended colour gamut,
\fB13\fR: IEC 61966\-2\-1,
\fB14\fR: ITU\-R BT\&.2020 10 bit,
\fB15\fR: ITU\-R BT\&.2020 12 bit,
\fB16\fR: SMPTE ST 2084,
\fB17\fR: SMPTE ST 428\-1;
\fB18\fR: ARIB STD\-B67 (HLG)
.RE
.PP
\fB\-\-colour\-primaries\fR \fITID:n\fR
.RS 4
Sets the colour primaries of the video\&.
.sp
Valid values and their meaning are:
.sp
\fB0\fR: reserved,
\fB1\fR: ITU\-R BT\&.709,
\fB2\fR: unspecified,
\fB3\fR: reserved,
\fB4\fR: ITU\-R BT\&.470M,
\fB5\fR: ITU\-R BT\&.470BG,
\fB6\fR: SMPTE 170M,
\fB7\fR: SMPTE 240M,
\fB8\fR: FILM,
\fB9\fR: ITU\-R BT\&.2020,
\fB10\fR: SMPTE ST 428\-1,
\fB22\fR: JEDEC P22 phosphors
.RE
.PP
\fB\-\-max\-content\-light\fR \fITID:n\fR
.RS 4
Sets the maximum brightness of a single pixel (Maximum Content Light Level) in candelas per square meter (cd/m\(S2)\&. The value of
\fIn\fR
should be a non\-negtive integer\&.
.RE
.PP
\fB\-\-max\-frame\-light\fR \fITID:n\fR
.RS 4
Sets the maximum brightness of a single full frame (Maximum Frame\-Average Light Level) in candelas per square meter (cd/m\(S2)\&. The value of
\fIn\fR
should be a non\-negtive integer\&.
.RE
.PP
\fB\-\-chromaticity\-coordinates\fR \fITID:red\-x,red\-y,green\-x,green\-y,blue\-x,blue\-y\fR
.RS 4
Sets the red/green/blue chromaticity coordinates as defined by CIE 1931\&.
.RE
.PP
\fB\-\-white\-colour\-coordinates\fR \fITID:x,y\fR
.RS 4
Sets the white colour chromaticity coordinates as defined by CIE 1931\&.
.RE
.PP
\fB\-\-max\-luminance\fR \fITID:float\fR
.RS 4
Sets the maximum luminance in candelas per square meter (cd/m\(S2)\&. The value should be less than 9999\&.99\&.
.RE
.PP
\fB\-\-min\-luminance\fR \fITID:float\fR
.RS 4
Sets the mininum luminance in candelas per square meter (cd/m\(S2)\&. The value should be less than 999\&.9999\&.
.RE
.PP
\fB\-\-stereo\-mode\fR \fITID:n|parametr\fR
.RS 4
Sets the stereo mode for the video track with the track ID
\fITID\fR\&. The mode can either be a number
\fIn\fR
between
\fB0\fR
and
\fB14\fR
or one of these keywords:
.sp
\*(Aqmono\*(Aq, \*(Aqside_by_side_left_first\*(Aq, \*(Aqtop_bottom_right_first\*(Aq, \*(Aqtop_bottom_left_first\*(Aq, \*(Aqcheckerboard_right_first\*(Aq, \*(Aqcheckerboard_left_first\*(Aq, \*(Aqrow_interleaved_right_first\*(Aq, \*(Aqrow_interleaved_left_first\*(Aq, \*(Aqcolumn_interleaved_right_first\*(Aq, \*(Aqcolumn_interleaved_left_first\*(Aq, \*(Aqanaglyph_cyan_red\*(Aq, \*(Aqside_by_side_right_first\*(Aq, \*(Aqanaglyph_green_magenta\*(Aq, \*(Aqboth_eyes_laced_left_first\*(Aq, \*(Aqboth_eyes_laced_right_first\*(Aq\&.
.RE
.SS "Opcje mające zastosowanie tylko do ścieżek napis\('ow"
.PP
\fB\-\-sub\-charset\fR \fITID:zestaw\-znak\('ow\fR
.RS 4
Sets the character set for the conversion to UTF\-8 for UTF\-8 subtitles for the given track ID\&. If not specified the charset will be derived from the current locale settings\&. Note that a charset is not needed for subtitles read from
Matroska(TM)
files or from Kate streams, as these are always stored in UTF\-8\&. See the section about
text files and character sets
for an explanation how
\fBmkvmerge\fR(1)
converts between character sets\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.SS "Pozosta\(/le opcje"
.PP
\fB\-i\fR, \fB\-\-identify\fR \fInazwa\-pliku\fR
.RS 4
Will let
\fBmkvmerge\fR(1)
probe the single file and report its type, the tracks contained in the file and their track IDs\&. If this option is used then the only other option allowed is the filename\&.
.sp
The output format used for the result can be changed with the option
\-\-identification\-format\&.
.RE
.PP
\fB\-I\fR, \fB\-\-identify\-verbose\fR \fInazwa\-pliku\fR
.RS 4
This option is deprecated\&. Use
\-\-identification\-format verbose\-text \-\-identify \&...
instead\&.
.RE
.PP
\fB\-F\fR, \fB\-\-identification\-format\fR \fIformat\fR
.RS 4
Determines the output format used by the
\-\-identify option\&. The following formats are supported:
text
(the default if this option isn\*(Aqt used),
verbose\-text
and
json\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
The
text
format is short and human\-readable\&. It consists of one line per item found (container, tracks, attachments etc\&.)\&.
.sp
This format is not meant to be parsed\&. The output will be translated into the language
\fBmkvmerge\fR(1)
uses (see also
\-\-ui\-language)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
The
verbose\-text
format extends the
text
format with additional properties for each item\&. The extra information is surronded by square brackets\&. It consists of space\-saparated key/value pairs where keys and values are separated by a colon\&.
.sp
Each value is escaped according to the rules described in
the section about escaping special characters in text\&.
.sp
This format is not meant to be parsed\&. The output will be translated into the language
\fBmkvmerge\fR(1)
uses (see also
\-\-ui\-language)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
The
json
format outputs a machine\-readable JSON representation\&. This format follows the JSON schema described in the file
\m[blue]\fBmkvmerge\-identification\-output\-schema\&.json\fR\m[]\&\s-2\u[3]\d\s+2\&.
.RE
.RE
.PP
\fB\-\-probe\-range\-percentage\fR \fIpercentage\fR
.RS 4
File types such as MPEG program and transport streams (\&.vob,
\&.m2ts) require parsing a certain amount of data in order to detect all tracks contained in the file\&. This amount is 0\&.3% of the source file\*(Aqs size or 10 MB, whichever is higher\&.
.sp
If tracks are known to be present but not found then the percentage to probe can be changed with this option\&. The minimum of 10 MB is built\-in and cannot be changed\&.
.RE
.PP
\fB\-l\fR, \fB\-\-list\-types\fR
.RS 4
Lista obs\(/lugiwanych plik\('ow wejściowych\&.
.RE
.PP
\fB\-\-list\-languages\fR
.RS 4
Lists all languages and their ISO639\-2 code which can be used with the
\fB\-\-language\fR
option\&.
.RE
.PP
\fB\-\-priority\fR \fIpriorytet\fR
.RS 4
Sets the process priority that
\fBmkvmerge\fR(1)
runs with\&. Valid values are \*(Aqlowest\*(Aq, \*(Aqlower\*(Aq, \*(Aqnormal\*(Aq, \*(Aqhigher\*(Aq and \*(Aqhighest\*(Aq\&. If nothing is given then \*(Aqnormal\*(Aq is used\&. On Unix like systems
\fBmkvmerge\fR(1)
will use the
\fBnice\fR(2)
function\&. Therefore only the super user can use \*(Aqhigher\*(Aq and \*(Aqhighest\*(Aq\&. On Windows all values are useable for every user\&.
.sp
Selecting \*(Aqlowest\*(Aq also causes
\fBmkvmerge\fR(1)
to select idle I/O priority in addition to the lowest possible process priority\&.
.RE
.PP
\fB\-\-command\-line\-charset\fR \fIzestaw\-znak\('ow\fR
.RS 4
Sets the character set to convert strings given on the command line from\&. It defaults to the character set given by system\*(Aqs current locale\&. This settings applies to arguments of the following options:
\fB\-\-title\fR,
\fB\-\-track\-name\fR
and
\fB\-\-attachment\-description\fR\&.
.RE
.PP
\fB\-\-output\-charset\fR \fIzestaw\-znak\('ow\fR
.RS 4
Sets the character set to which strings are converted that are to be output\&. It defaults to the character set given by system\*(Aqs current locale\&.
.RE
.PP
\fB\-r\fR, \fB\-\-redirect\-output\fR \fInazwa\-pliku\fR
.RS 4
Zapisuje wszystkie powiadomienia do pliku
\fInazwa\-pliku\fR
zamiast do konsoli\&. Podczas kiedy może być to robione \(/latwo z przekierowaniem wyjścia, są przypadki kiedy ta opcja w\(/laśnie jest potrzebna: kiedy terminal ponownie interpretuje plik wyjściowy przed zapisaniem do pliku\&. Uznawany będzie zestaw znak\('ow ustawiony z opcją
\fB\-\-output\-charset\fR\&.
.RE
.PP
\fB\-\-ui\-language\fR \fIkod\fR
.RS 4
Forces the translations for the language
\fIcode\fR
to be used (e\&.g\&. \*(Aqde_DE\*(Aq for the German translations)\&. Entering \*(Aqlist\*(Aq as the
\fIcode\fR
will cause the program to output a list of available translations\&.
.RE
.PP
\fB\-\-debug\fR \fItemat\fR
.RS 4
W\(/lącza debugowanie dla konkretnej funkcji\&. Ta opcja jest użyteczna tylko dla deweloper\('ow\&.
.RE
.PP
\fB\-\-engage\fR \fIfunkcja\fR
.RS 4
W\(/lącza eksperymentalne funkcjonalności\&. Lista dostepnych funkcjonalności jest dostępna po uruchomieniu komendy
\fBmkvmerge \-\-engage list\fR\&. Te funkcjonalności nie powinny być używane w normalnych sytuacjach\&.
.RE
.PP
\fB\-\-gui\-mode\fR
.RS 4
Turns on GUI mode\&. In this mode specially\-formatted lines may be output that can tell a controlling GUI what\*(Aqs happening\&. These messages follow the format \*(Aq#GUI#message\*(Aq\&. The message may be followed by key/value pairs as in \*(Aq#GUI#message#key1=value1#key2=value2\&...\*(Aq\&. Neither the messages nor the keys are ever translated and always output in English\&.
.RE
.PP
\fB@\fR\fIplik\-opcji\fR
.RS 4
Reads additional command line arguments from the file
\fIoptions\-file\fR\&. See the section about
option files
for further information\&.
.RE
.PP
\fB\-\-capabilities\fR
.RS 4
Lists information about optional features that have been compiled in and exit\&. The first line output will be the version information\&. All following lines contain exactly one word whose presence indicates that the feature has been compiled in\&. These features are:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"FLAC" \-\- wczytywanie surowych plik\('ow
FLAC
i umieszczanie ścieżek
FLAC
w innych kontenerach, np\&.
Ogg(TM)
albo
Matroska(TM)\&.
.RE
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Pokazuje informacje o sposobie użycia opcji i zamyka się\&.
.RE
.PP
\fB\-V\fR, \fB\-\-version\fR
.RS 4
Pokazuje informację o wersji i zamyka się\&.
.RE
.PP
\fB\-\-check\-for\-updates\fR
.RS 4
Checks online for new releases by downloading the URL
\m[blue]\fBhttp://mkvtoolnix\-releases\&.bunkus\&.org/latest\-release\&.xml\fR\m[]\&. Four lines will be output in
key=value
style: the URL from where the information was retrieved (key
version_check_url), the currently running version (key
running_version), the latest release\*(Aqs version (key
available_version) and the download URL (key
download_url)\&.
.sp
Afterwards the program exists with an exit code of 0 if no newer release is available, with 1 if a newer release is available and with 2 if an error occured (e\&.g\&. if the update information could not be retrieved)\&.
.sp
This option is only available if the program was built with support for libcurl\&.
.RE
.SH "UŻYCIE"
.PP
For each file the user can select which tracks
\fBmkvmerge\fR(1)
should take\&. They are all put into the file specified with
\fB\-o\fR\&. A list of known (and supported) source formats can be obtained with the
\fB\-l\fR
option\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWażne\fR
.ps -1
.br
.PP
The order of command line options is important\&. Please read the section
"Option order"
if you\*(Aqre new to the program\&.
.sp .5v
.RE
.SH "KOLEJNOŚĆ OPCJI"
.PP
The order in which options are entered is important for some options\&. Options fall into two categories:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Options that affect the whole program and are not tied to any input file\&. These include but are not limited to
\fB\-\-command\-line\-charset\fR,
\fB\-\-output\fR
or
\fB\-\-title\fR\&. These can appear anywhere on the command line\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Options that affect a single input file or a single track in an input file\&. These options all apply to the following input file on the command line\&. All options applying to the same input (or to tracks from the same input file) file can be written in any order as long as they all appear before that input file\*(Aqs name\&. Examples for options applying to an input file are
\fB\-\-no\-chapters\fR
or
\fB\-\-chapter\-charset\fR\&. Examples for options applying to a single track are
\fB\-\-default\-duration\fR
or
\fB\-\-language\fR\&.
.RE
.PP
The options are processed from left to right\&. If an option appears multiple times within the same scope then the last occurence will be used\&. Therefore the title will be set to "Something else" in the following example:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o wyjściowy\&.mkv \-\-title "To i tamto" wejściowy\&.avi \-\-title "Coś innego"
.fi
.if n \{\
.RE
.\}
.PP
The following example shows that using the
\fB\-\-language\fR
option twice is OK because they\*(Aqre used in different scopes\&. Even though they apply to the same track ID they apply to different input files and therefore have different scopes:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o wyjściowy\&.mkv \-\-language 0:fre fran\(,cais\&.ogg \-\-language 0:pol polski\&.ogg
.fi
.if n \{\
.RE
.\}
.SH "PRZYK\(/LADY"
.PP
Let\*(Aqs assume you have a file called MyMovie\&.avi and the audio track in a separate file, e\&.g\&. \*(AqMyMovie\&.wav\*(Aq\&. First you want to encode the audio to
OggVorbis(TM):
.sp
.if n \{\
.RS 4
.\}
.nf
$ oggenc \-q4 \-oM\('ojPlik\&.ogg M\('ojPlik\&.wav
.fi
.if n \{\
.RE
.\}
.PP
Po kilku minutach możesz po\(/lączyć obraz i dźwięk:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o M\('ojFilm\-z\-dźwiękiem\&.mkv M\('ojFilm\&.avi M\('ojFilm\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
If your
AVI
already contains an audio track then it will be copied as well (if
\fBmkvmerge\fR(1)
supports the audio format)\&. To avoid that simply do
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o M\('ojFilm\-z\-dźwiękiem\&.mkv \-A M\('ojFilm\&.avi M\('ojFilm\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
After some minutes of consideration you rip another audio track, e\&.g\&. the director\*(Aqs comments or another language to \*(AqMyMovie\-add\-audio\&.wav\*(Aq\&. Encode it again and join it up with the other file:
.sp
.if n \{\
.RS 4
.\}
.nf
$ oggenc \-q4 \-oM\('ojFilm\-dodatk\-audio\&.ogg M\('ojFilm\-dodatk\-audio\&.wav
$ mkvmerge \-o MF\-kompletny\&.mkv M\('ojFilm\-z\-dźwiękiem\&.mkv M\('ojFilm\-dodatk\-audio\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
Taki sam wynik może być osiągnięty z
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o MF\-kompletny\&.mkv \-A M\('ojFilm\&.avi M\('ojFilm\&.ogg M\('ojFilm\-dodatk\-audio\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
Now fire up
mplayer(TM)
and enjoy\&. If you have multiple audio tracks (or even video tracks) then you can tell
mplayer(TM)
which track to play with the \*(Aq\fB\-vid\fR\*(Aq and \*(Aq\fB\-aid\fR\*(Aq options\&. These are 0\-based and do not distinguish between video and audio\&.
.PP
If you need an audio track synchronized you can do that easily\&. First find out which track ID the Vorbis track has with
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-\-identify braksynchro\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
Teraz możesz użyć tego ID w następującej linii komend:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o synchro\&.mkv \-A źr\('od\(/lo\&.avi \-y 12345:200 bezsynchro\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
This would add 200ms of silence at the beginning of the audio track with the ID
\fB12345\fR
taken from \*(Aqoutofsync\&.ogg\*(Aq\&.
.PP
Some movies start synced correctly but slowly drift out of sync\&. For these kind of movies you can specify a delay factor that is applied to all timestamps \-\- no data is added or removed\&. So if you make that factor too big or too small you\*(Aqll get bad results\&. An example is that an episode I transcoded was
\fB0\&.2\fR
seconds out of sync at the end of the movie which was
\fB77340\fR
frames long\&. At
\fB29\&.97fps\fR
\fB0\&.2\fR
seconds correspond to approx\&.
\fB6\fR
frames\&. So I did
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o synchro\&.mkv \-y 23456:0,77346/77340 bezsynchro\&.mkv
.fi
.if n \{\
.RE
.\}
.PP
Wynik jest poprawny\&.
.PP
The sync options can also be used for subtitles in the same manner\&.
.PP
For text subtitles you can either use some Windows software (like
SubRipper(TM)) or the
subrip(TM)
package found in
\fBtranscode\fR(1)\*(Aqs sources in the \*(Aqcontrib/subrip\*(Aq directory\&. The general process is:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
wyodrębnia surową ścieżkę napis\('ow ze źr\('od\(/la:
.sp
.if n \{\
.RS 4
.\}
.nf
$ tccat \-i /ścieżka/do/skopiowanego/dvd/ \-T 1 \-L | tcextract \-x ps1 \-t vob \-a 0x20 | subtitle2pgm \-o m\('ojplik
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
konwertuje wynikowe obrazy PGM na tekst przy pomocy gocr:
.sp
.if n \{\
.RS 4
.\}
.nf
$ pgm2txt m\('ojplik
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
spell\-check the resulting text files:
.sp
.if n \{\
.RS 4
.\}
.nf
$ ispell \-d polski *txt
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
konwertuje pliki tekstowe do pliku SRT:
.sp
.if n \{\
.RS 4
.\}
.nf
$ srttool \-s \-w \-i m\('ojplik\&.srtx \-o m\('ojplik\&.srt
.fi
.if n \{\
.RE
.\}
.RE
.PP
The resulting file can be used as another input file for
\fBmkvmerge\fR(1):
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o m\('ojfilm\&.mkv m\('ojfilm\&.avi m\('ojfilm\&.srt
.fi
.if n \{\
.RE
.\}
.PP
If you want to specify the language for a given track then this is easily done\&. First find out the ISO639\-2 code for your language\&.
\fBmkvmerge\fR(1)
can list all of those codes for you:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-\-list\-languages
.fi
.if n \{\
.RE
.\}
.PP
Search the list for the languages you need\&. Let\*(Aqs assume you have put two audio tracks into a
Matroska(TM)
file and want to set their language codes and that their track IDs are 2 and 3\&. This can be done with
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o z\-kodami\-język\&.mkv \-\-language 2:pol \-\-language 3:eng bez\-kod\('ow\-język\&.mkv
.fi
.if n \{\
.RE
.\}
.PP
As you can see you can use the
\fB\-\-language\fR
switch multiple times\&.
.PP
Maybe you\*(Aqd also like to have the player use the Dutch language as the default language\&. You also have extra subtitles, e\&.g\&. in English and French, and want to have the player display the French ones by default\&. This can be done with
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o z\-kodami\-język\&.mkv \-\-language 2:pol \-\-language 3:dut \-\-default\-track 3 bez\-kod\('ow\-język\&.mkv \-\-language 0:eng english\&.srt \-\-default\-track 0 \-\-language 0:fre french\&.srt
.fi
.if n \{\
.RE
.\}
.PP
If you do not see the language or default track flags that you\*(Aqve specified in
\fBmkvinfo\fR(1)\*(Aqs output then please read the section about
default values\&.
.PP
Wy\(/lącza kompresję dla pliku wejściowego\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o bez\-kompresji\&.mkv \-\-compression \-1:none M\('ojFilm\&.avi \-\-compression \-1:none m\('ojfilm\&.srt
.fi
.if n \{\
.RE
.\}
.SH "TRACK IDS"
.PP
Some of the options for
\fBmkvmerge\fR(1)
need a track ID to specify which track they should be applied to\&. Those track IDs are printed by the readers when demuxing the current input file, or if
\fBmkvmerge\fR(1)
is called with the
\fB\-\-identify\fR
option\&. An example for such output:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-i v\&.mkv
Plik \*(Aqv\&.mkv\*(Aq: kontener: Matroska(TM)
Track ID 0: obraz (V_MS/VFW/FOURCC, DIV3)
Track ID 1: dźwięk (A_MPEG/L3)
.fi
.if n \{\
.RE
.\}
.PP
Nie myl ID ścieżki, kt\('ore jest przypisywane do ścieżek w plikach wnikowych MKV, z ID ścieżek z plik\('ow wejściowych\&. Tylko ID ścieżek wejściowych jest wykorzystywane w opcjach wymagających tychże wartości\&.
.PP
Also note that each input file has its own set of track IDs\&. Therefore the track IDs for file \*(Aqfile1\&.ext\*(Aq as reported by \*(Aqmkvmerge \-\-identify\*(Aq do not change no matter how many other input files are there or in which position \*(Aqfile1\&.ext\*(Aq is used\&.
.PP
Track IDs are assigned like this:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Pliki
AVI: Ścieżka obrazu ma ID 0\&. Ścieżki dźwiękowe dostają ID w porządku rosnącym zaczynając od 1\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Pliki
AAC,
AC\-3,
MP3,
SRT
i
WAV: Jedna "ścieżka" w tych plikach dostaje ID 0\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Most other files: The track IDs are assigned in order the tracks are found in the file starting at 0\&.
.RE
.PP
The special track ID \*(Aq\fB\-1\fR\*(Aq is a wild card and applies the given switch to all tracks that are read from an input file\&.
.PP
The options that use the track IDs are the ones whose description contains \*(AqTID\*(Aq\&. The following options use track IDs as well:
\fB\-\-audio\-tracks\fR,
\fB\-\-video\-tracks\fR,
\fB\-\-subtitle\-tracks\fR,
\fB\-\-button\-tracks\fR
and
\fB\-\-track\-tags\fR\&.
.SH "TEXT FILES AND CHARACTER SET CONVERSIONS"
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUwaga\fR
.ps -1
.br
.PP
This section applies to all programs in MKVToolNix even if it only mentions
\fBmkvmerge\fR(1)\&.
.sp .5v
.RE
.SS "Wprowadzenie"
.PP
All text in a
Matroska(TM)
file is encoded in UTF\-8\&. This means that
\fBmkvmerge\fR(1)
has to convert every text file it reads as well as every text given on the command line from one character set into UTF\-8\&. In return this also means that
\fBmkvmerge\fR(1)\*(Aqs output has to be converted back to that character set from UTF\-8, e\&.g\&. if a non\-English translation is used with
\fB\-\-ui\-language\fR
or for text originating from a
Matroska(TM)
file\&.
.PP
\fBmkvmerge\fR(1)
does this conversion automatically based on the presence of a
byte order marker
(short:
BOM) or the system\*(Aqs current locale\&. How the character set is inferred from the locale depends on the operating system that
\fBmkvmerge\fR(1)
is run on\&.
.SS "Znaczniki kolejności bajt\('ow (BOM)"
.PP
Text files that start with a BOM are already encoded in one representation of UTF\&.
\fBmkvmerge\fR(1)
supports the following five modes: UTF\-8, UTF\-16 Little and Big Endian, UTF\-32 Little and Big Endian\&. Text files with a BOM are automatically converted to UTF\-8\&. Any of the parameters that would otherwise set the character set for such a file (e\&.g\&.
\fB\-\-sub\-charset\fR) is silently ignored\&.
.SS "Linuks i inne systemy Unix\*(Aqowe w\(/lączając w to Mac OS"
.PP
On Unix\-like systems
\fBmkvmerge\fR(1)
uses the
\fBsetlocale\fR(3)
system call which in turn uses the environment variables
\fILANG\fR,
\fILC_ALL\fR
and
\fILC_CYPE\fR\&. The resulting character set is often one of UTF\-8 or the ISO\-8859\-* family and is used for all text file operations and for encoding strings on the command line and for output to the console\&.
.SS "Windows"
.PP
On Windows the default character set used for converting text files is determined by a call to the
\fBGetACP()\fR
system call\&.
.PP
Reading the command line is done with the
\fBGetCommandLineW()\fR
function which already returns a Unicode string\&. Therefore the option
\fB\-\-command\-line\-charset\fR
is ignored on Windows\&.
.PP
Output to the console consists of three scenarios:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
If the output is redirected with the option
\fB\-\-redirect\-output\fR
then the default charset is UTF\-8\&. This can be changed with
\fB\-\-output\-charset\fR\&.
.sp
If the output is redirected with
\fBcmd\&.exe\fR
itself, e\&.g\&. with
mkvinfo file\&.mkv > info\&.txt, then the charset is always UTF\-8 and cannot be changed\&.
.sp
Otherwise (when writing directly to the console) the Windows function
\fBWriteConsoleW()\fR
is used and the option
\fB\-\-output\-charset\fR
is ignored\&. The console should be able to output all Unicode characters for which the corresponding language support is installed (e\&.g\&. Chinese characters might not be displayed on English Windows versions)\&.
.RE
.SS "Opcje linii komend"
.PP
The following options exist that allow specifying the character sets:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-sub\-charset\fR
for text subtitle files and for text subtitle tracks stored in container formats for which the character set cannot be determined unambiguously (e\&.g\&. Ogg files),
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-chapter\-charset\fR
for chapter text files and for chapters and file titles stored in container formats for which the character set cannot be determined unambiguously (e\&.g\&. Ogg files for chapter information, track and file titles etc; MP4 files for chapter information),
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-command\-line\-charset\fR
for all strings on the command line,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-output\-charset\fR
for all strings written to the console or to a file if the output has been redirected with the
\fB\-\-redirect\-output\fR
option\&. On non\-Windows systems the default for the output charset is the system\*(Aqs current charset\&. On Windows it defaults to UTF\-8 both for redirecting with
\fB\-\-redirect\-output\fR
and with
\fBcmd\&.exe\fR
itself, e\&.g\&.
mkvinfo file\&.mkv > info\&.txt\&.
.RE
.SH "PLIKI OPCJI"
.PP
An option file is a file
\fBmkvmerge\fR(1)
can read additional command line arguments from\&. This can be used in order to circumvent certain limitations of the shell or the operating system when executing external programs like a limited command line length\&.
.PP
There are several rules regarding option files\&. Lines whose first non\-whitespace character is a hash mark (\*(Aq#\*(Aq) are treated as comments and ignored\&. White spaces at the start and end of a line will be stripped\&. Each line must contain exactly one option\&.
.PP
Linia nie zawierająca niczego jest r\('ownież ignorowana\&. Pusty parametr jest prezentowany poprzez linię "#EMPTY#"\&.
.PP
Several chars can be escaped, e\&.g\&. if you need to start a non\-comment line with \*(Aq#\*(Aq\&. The rules are described in
the section about escaping text\&.
.PP
Note that backslashes must always be escaped\&. Hash marks (\*(Aq#\*(Aq) must be escaped if they should not start a comment\&.
.PP
The command line \*(Aq\fBmkvmerge \-o "my file\&.mkv" \-A "a movie\&.avi" sound\&.ogg\fR\*(Aq could be converted into the following option file:
.sp
.if n \{\
.RS 4
.\}
.nf
# Zapisuje do pliku "c:\eMatroska\emy file\&.mkv" w systemie Windows\&.
\-o
c:\e\eMatroska\e\em\('oj plik\&.mkv
# Wstawia tytu\(/l jako "#65"\&.
\-\-title
\eh65
# Tylko kopiuje ścieżkę obrazu z "film\&.avi"\&.
\-A
film\&.avi
dźwięk\&.ogg
.fi
.if n \{\
.RE
.\}
.SH "ESCAPING SPECIAL CHARS IN TEXT"
.PP
There are a few places in which special characters in text must or should be escaped\&. The rules for escaping are simple: each character that needs escaping is replaced with a backslash followed by another character\&.
.PP
The rules are: \*(Aq \*(Aq (a space) becomes \*(Aq\es\*(Aq, \*(Aq"\*(Aq (double quotes) becomes \*(Aq\e2\*(Aq, \*(Aq:\*(Aq becomes \*(Aq\ec\*(Aq, \*(Aq#\*(Aq becomes \*(Aq\eh\*(Aq, \*(Aq[\*(Aq becomes \*(Aq\eb\*(Aq, \*(Aq]\*(Aq becomes \*(Aq\eB\*(Aq and \*(Aq\e\*(Aq (a single backslash) itself becomes \*(Aq\e\e\*(Aq\&.
.SH "NAPISY"
.PP
There are several text and bitmap subtitle formats that can be embedded into
Matroska(TM)\&. Text subtitles must be recoded to UTF\-8 so that they can be displayed correctly by a player (see the section about
text files and character sets
for an explanation how
\fBmkvmerge\fR(1)
converts between character sets)\&. Kate subtitles are already encoded in UTF\-8 and do not have to be re\-encoded\&.
.PP
The following subtitle formats are supported at the moment:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Pliki Subtitle Ripper (SRT)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Skrypty Substation Alpha (SSA) / Advanced Substation Alpha (ASS)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Pliki Universal Subtitle Format (USF)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Ścieżki OggKate
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Pliki bitmapowych napis\('ow VobSub
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Pliki bitmapowych napis\('ow PGS obecnych na p\(/lytach BluRay
.RE
.SH "JAK POWIĄZAĆ PLIKI/SEGMENTY"
.PP
Matroska(TM)
wspiera \(/lączenie plik\('ow czyli znakowanie pliku jako poprzednika lub następcę obecnego pliku\&. Aby wyrazić się precyzyjniej, to nie pliki są \(/lączone ze sobą tylko segmenty
Matroska(TM)\&. Jako że większość plik\('ow najpewniej zawiera tylko jeden segment
Matroska(TM)
dlatego używa się terminu "\(/lączenie plik\('ow", jednakże "\(/lączenie segment\('ow" by\(/lo by bardziej odpowiednie\&.
.PP
Each segment is identified by a unique 128 bit wide segment UID\&. This UID is automatically generated by
\fBmkvmerge\fR(1)\&. The linking is done primarily via putting the segment UIDs (short:
SID) of the previous/next file into the segment header information\&.
\fBmkvinfo\fR(1)
prints these
SIDs
if it finds them\&.
.PP
If a file is split into several smaller ones and linking is used then the timecodes will not start at 0 again but will continue where the last file has left off\&. This way the absolute time is kept even if the previous files are not available (e\&.g\&. when streaming)\&. If no linking is used then the timecodes should start at 0 for each file\&. By default
\fBmkvmerge\fR(1)
does not use file linking\&. If you want that you can turn it on with the
\fB\-\-link\fR
option\&. This option is only useful if splitting is activated as well\&.
.PP
Regardless of whether splitting is active or not the user can tell
\fBmkvmerge\fR(1)
to link the produced files to specific
SIDs\&. This is achieved with the options
\fB\-\-link\-to\-previous\fR
and
\fB\-\-link\-to\-next\fR\&. These options accept a segment
SID
in the format that
\fBmkvinfo\fR(1)
outputs: 16 hexadecimal numbers between
\fB0x00\fR
and
\fB0xff\fR
prefixed with \*(Aq0x\*(Aq each, e\&.g\&. \*(Aq0x41 0xda 0x73 0x66 0xd9 0xcf 0xb2 0x1e 0xae 0x78 0xeb 0xb4 0x5e 0xca 0xb3 0x93\*(Aq\&. Alternatively a shorter form can be used: 16 hexadecimal numbers between
\fB0x00\fR
and
\fB0xff\fR
without the \*(Aq0x\*(Aq prefixes and without the spaces, e\&.g\&. \*(Aq41da7366d9cfb21eae78ebb45ecab393\*(Aq\&.
.PP
If splitting is used then the first file is linked to the
SID
given with
\fB\-\-link\-to\-previous\fR
and the last file is linked to the
SID
given with
\fB\-\-link\-to\-next\fR\&. If splitting is not used then the one output file will be linked to both of the two
SIDs\&.
.SH "WARTOŚCI DOMYŚLNE"
.PP
The
Matroska(TM)
specification states that some elements have a default value\&. Usually an element is not written to the file if its value is equal to its default value in order to save space\&. The elements that the user might miss in
\fBmkvinfo\fR(1)\*(Aqs output are the
\fIlanguage\fR
and the
\fIdefault track flag\fR
elements\&. The default value for the
\fIlanguage\fR
is English (\*(Aqeng\*(Aq), and the default value for the
\fIdefault track flag\fR
is
\fItrue\fR\&. Therefore if you used
\fB\-\-language 0:eng\fR
for a track then it will not show up in
\fBmkvinfo\fR(1)\*(Aqs output\&.
.SH "ZA\(/LĄCZNIKI"
.PP
Maybe you also want to keep some photos along with your
Matroska(TM)
file, or you\*(Aqre using
SSA
subtitles and need a special
TrueType(TM)
font that\*(Aqs really rare\&. In these cases you can attach those files to the
Matroska(TM)
file\&. They will not be just appended to the file but embedded in it\&. A player can then show those files (the \*(Aqphotos\*(Aq case) or use them to render the subtitles (the \*(AqTrueType(TM)
fonts\*(Aq case)\&.
.PP
Here\*(Aqs an example how to attach a photo and a
TrueType(TM)
font to the output file:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o output\&.mkv \-A video\&.avi sound\&.ogg \e
  \-\-attachment\-description "Me and the band behind the stage in a small get\-together" \e
  \-\-attachment\-mime\-type image/jpeg \e
  \-\-attach\-file me_and_the_band\&.jpg \e
  \-\-attachment\-description "The real rare and unbelievably good looking font" \e
  \-\-attachment\-mime\-type application/octet\-stream \e
  \-\-attach\-file really_cool_font\&.ttf
.fi
.if n \{\
.RE
.\}
.PP
If a
Matroska(TM)
containing attachments file is used as an input file then
\fBmkvmerge\fR(1)
will copy the attachments into the new file\&. The selection which attachments are copied and which are not can be changed with the options
\fB\-\-attachments\fR
and
\fB\-\-no\-attachments\fR\&.
.SH "ROZDZIA\(/LY"
.PP
The
Matroska(TM)
chapter system is more powerful than the old known system used by
OGM
files\&. The full specifications can be found at
\m[blue]\fBthe Matroska(TM) website\fR\m[]\&\s-2\u[1]\d\s+2\&.
.PP
\fBmkvmerge\fR(1)
supports two kinds of chapter files as its input\&. The first format, called \*(Aqsimple chapter format\*(Aq, is the same format that the
OGM
tools expect\&. The second format is a
XML
based chapter format which supports all of
Matroska(TM)\*(Aqs chapter functionality\&.
.SS "Prosty format rozdzia\(/l\('ow"
.PP
This formmat consists of pairs of lines that start with \*(AqCHAPTERxx=\*(Aq and \*(AqCHAPTERxxNAME=\*(Aq respectively\&. The first one contains the start timecode while the second one contains the title\&. Here\*(Aqs an example:
.sp
.if n \{\
.RS 4
.\}
.nf
CHAPTER01=00:00:00\&.000
CHAPTER01NAME=Rozdzia\(/l I
CHAPTER02=00:02:30\&.000
CHAPTER02NAME=Rozdzia\(/l II
CHAPTER03=00:02:42\&.300
CHAPTER03NAME=Rozdzia\(/l III
.fi
.if n \{\
.RE
.\}
.PP
\fBmkvmerge\fR(1)
will transform every pair or lines into one
Matroska(TM)
ChapterAtom\&. It does not set any
ChapterTrackNumber
which means that the chapters all apply to all tracks in the file\&.
.PP
As this is a text file character set conversion may need to be done\&. See the section about
text files and character sets
for an explanation how
\fBmkvmerge\fR(1)
converts between character sets\&.
.SS "Format rozdzia\(/l\('ow oparty o XML"
.PP
Format rozdzia\(/l\('ow oparty o
XML
wygląda następująco:
.sp
.if n \{\
.RS 4
.\}
.nf
<?xml version="1\&.0" encoding="ISO\-8859\-1"?>
<!DOCTYPE Chapters SYSTEM "matroskachapters\&.dtd">
<Chapters>
  <EditionEntry>
    <ChapterAtom>
      <ChapterTimeStart>00:00:30\&.000</ChapterTimeStart>
      <ChapterTimeEnd>00:01:20\&.000</ChapterTimeEnd>
      <ChapterDisplay>
        <ChapterString>A short chapter</ChapterString>
        <ChapterLanguage>eng</ChapterLanguage>
      </ChapterDisplay>
      <ChapterAtom>
        <ChapterTimeStart>00:00:46\&.000</ChapterTimeStart>
        <ChapterTimeEnd>00:01:10\&.000</ChapterTimeEnd>
        <ChapterDisplay>
          <ChapterString>A part of that short chapter</ChapterString>
          <ChapterLanguage>eng</ChapterLanguage>
        </ChapterDisplay>
      </ChapterAtom>
    </ChapterAtom>
  </EditionEntry>
</Chapters>
.fi
.if n \{\
.RE
.\}
.PP
With this format three things are possible that are not possible with the simple chapter format:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
The timestamp for the end of the chapter can be set,
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
chapters can be nested,
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
the language and country can be set\&.
.RE
.PP
The mkvtoolnix distribution contains some sample files in the
doc
subdirectory which can be used as a basis\&.
.PP
The following lists the supported XML tags, their data types and, where appropriate, the valid range for their values:
.sp
.if n \{\
.RS 4
.\}
.nf
Chapters (nadrzędny)
  EditionEntry (nadrzędny)
    EditionUID (liczba ca\(/lkowita nieujemna, poprawny zakres: 1 <= wartość)
    EditionFlagHidden (liczba ca\(/lkowita nieujemna, poprawny zakres: 0 <= wartość <= 1)
    EditionFlagDefault (liczba ca\(/lkowita nieujemna, poprawny zakres: 0 <= wartość <= 1)
    EditionFlagOrdered (liczba ca\(/lkowita nieujemna, poprawny zakres: 0 <= wartość <= 1)
    ChapterAtom (nadrzędny)
      ChapterAtom (nadrzędny)
      ChapterUID (liczba ca\(/lkowita nieujemna, poprawny zakres: 1 <= wartość)
      ChapterTimeStart (liczba ca\(/lkowita nieujemna)
      ChapterTimeEnd (liczba ca\(/lkowita nieujemna)
      ChapterFlagHidden (liczba ca\(/lkowita nieujemna, poprawny zakres: 0 <= wartość <= 1)
      ChapterFlagEnabled (liczba ca\(/lkowita nieujmena, poprawny zakres: 0 <= wartość <= 1)
      ChapterSegmentUID (liczba binarna, poprawny zakres: 1 <= d\(/lugość w bajtach)
      ChapterSegmentEditionUID (liczba ca\(/lkowita nieujemna, poprawny zakres: 1 <= wartość)
      ChapterPhysicalEquiv (liczba ca\(/lkowita nieujemna)
      ChapterTrack (nadrzędny)
        ChapterTrackNumber (liczba ca\(/lkowita nieujemna, poprawny zakres: 1 <= wartość)
      ChapterDisplay (nadrzędny)
        ChapterString (wyraz UTF\-8)
        ChapterLanguage (wyraz UTF\-8)
        ChapterCountry (wyraz UTF\-8)
      ChapterProcess (nadrzędny)
        ChapterProcessCodecID (liczba ca\(/lkowita nieujemna)
        ChapterProcessPrivate (liczba binarna)
        ChapterProcessCommand (nadrzędny)
          ChapterProcessTime (liczba ca\(/lkowita nieujemna)
          ChapterProcessData (liczba binarna)
.fi
.if n \{\
.RE
.\}
.SS "Uwagi og\('olne"
.PP
When splitting files
\fBmkvmerge\fR(1)
will correctly adjust the chapters as well\&. This means that each file only includes the chapter entries that apply to it, and that the timecodes will be offset to match the new timecodes of each output file\&.
.PP
\fBmkvmerge\fR(1)
is able to copy chapters from
Matroska(TM)
source files unless this is explicitly disabled with the
\fB\-\-no\-chapters\fR
option\&. The chapters from all sources (Matroska(TM)
files, Ogg files,
MP4
files, chapter text files) are usually not merged but end up in separate
ChapterEditions\&. Only if chapters are read from several
Matroska(TM)
or
XML
files that share the same edition UIDs will chapters be merged into a single
ChapterEdition\&. If such a merge is desired in other situations as well then the user has to extract the chapters from all sources with
\fBmkvextract\fR(1)
first, merge the
XML
files manually and mux them afterwards\&.
.SH "TAGI"
.SS "Wprowadzenie"
.PP
Matroska(TM)
wspiera rozszerzony zestaw tag\('ow będący już nieaktualnym oraz nowy, prostszy system jaki jest używany w większości innych kontener\('ow:
\fIKLUCZ=WARTOŚĆ\fR\&. Jednakże, w pliku
Matroska(TM)
te tagi mogą być r\('ownież zagnieżdżone, i oba elementy
\fIKLUCZ\fR
oraz
\fIWARTOŚĆ\fR
żyją w\(/lasnym życiem\&. Przyk\(/ladowy plik
example\-tags\-2\&.xml
pokazuje jak używać nowego systemu\&.
.SS "Scope of the tags"
.PP
tagi
Matroska(TM)
nie odnoszą się z automatu do ca\(/lego pliku\&. Mogą określać ca\(/ly plik, ale mogą r\('ownież określać r\('ożne części sk\(/ladowe pliku: jedną lub kilka ściezek, jeden lub kilka rozdzia\(/l\('ow, a nawet kombinację obydwu\&. Odnośnik do
\m[blue]\fBspecyfikacji Matroska(TM)\fR\m[]\&\s-2\u[4]\d\s+2
dostarczy więcej informacji\&.
.PP
One important fact is that tags are linked to tracks or chapters with the
Targets
Matroska(TM)
tag element, and that the UIDs used for this linking are
\fInot\fR
the track IDs
\fBmkvmerge\fR(1)
uses everywhere\&. Instead the numbers used are the UIDs which
\fBmkvmerge\fR(1)
calculates automatically (if the track is taken from a file format other than
Matroska(TM)) or which are copied from the source file if the track\*(Aqs source file is a
Matroska(TM)
file\&. Therefore it is difficult to know which UIDs to use in the tag file before the file is handed over to
\fBmkvmerge\fR(1)\&.
.PP
\fBmkvmerge\fR(1)
knows two options with which you can add tags to
Matroska(TM)
files: The
\fB\-\-global\-tags\fR
and the
\fB\-\-tags\fR
options\&. The difference is that the former option,
\fB\-\-global\-tags\fR, will make the tags apply to the complete file by removing any of those
Targets
elements mentioned above\&. The latter option,
\fB\-\-tags\fR, automatically inserts the UID that
\fBmkvmerge\fR(1)
generates for the tag specified with the
\fITID\fR
part of the
\fB\-\-tags\fR
option\&.
.SS "Przyk\(/lad"
.PP
Let\*(Aqs say that you want to add tags to a video track read from an
AVI\&.
\fBmkvmerge \-\-identify file\&.avi\fR
tells you that the video track\*(Aqs ID (do not mix this ID with the UID!) is 0\&. So you create your tag file, leave out all
Targets
elements and call
\fBmkvmerge\fR(1):
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o plik\&.mkv \-\-tags 0:tagi\&.xml plik\&.avi
.fi
.if n \{\
.RE
.\}
.SS "Format pliku tag\('ow"
.PP
\fBmkvmerge\fR(1)
supports a
XML
based tag file format\&. The format is very closely modeled after
\m[blue]\fBthe Matroska(TM) specification\fR\m[]\&\s-2\u[4]\d\s+2\&. Both the binary and the source distributions of MKVToolNix come with a sample file called
example\-tags\-2\&.xml
which simply lists all known tags and which can be used as a basis for real life tag files\&.
.PP
The basics are:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The outermost element must be
<Tags>\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
One logical tag is contained inside one pair of
<Tag>
XML
tags\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
White spaces directly before and after tag contents are ignored\&.
.RE
.SS "Typy danych"
.PP
The new
Matroska(TM)
tagging system only knows two data types, a UTF\-8 string and a binary type\&. The first is used for the tag\*(Aqs name and the
<String>
element while the binary type is used for the
<Binary>
element\&.
.PP
As binary data itself would not fit into a
XML
file
\fBmkvmerge\fR(1)
supports two other methods of storing binary data\&. If the contents of a
XML
tag starts with \*(Aq@\*(Aq then the following text is treated as a file name\&. The corresponding file\*(Aqs content is copied into the
Matroska(TM)
element\&.
.PP
Otherwise the data is expected to be
Base64
encoded\&. This is an encoding that transforms binary data into a limited set of
ASCII
characters and is used e\&.g\&. in email programs\&.
\fBmkvextract\fR(1)
will output
Base64
encoded data for binary elements\&.
.PP
The deprecated tagging system knows some more data types which can be found in the official
Matroska(TM)
tag specs\&. As
\fBmkvmerge\fR(1)
does not support this system anymore these types aren\*(Aqt described here\&.
.SS "Znane tagi dla formatu XML"
.PP
The following lists the supported XML tags, their data types and, where appropriate, the valid range for their values:
.sp
.if n \{\
.RS 4
.\}
.nf
Tags (master)
  Tag (master)
    Targets (master)
      TargetTypeValue (unsigned integer)
      TargetType (UTF\-8 string)
      TrackUID (unsigned integer)
      EditionUID (unsigned integer)
      ChapterUID (unsigned integer)
      AttachmentUID (unsigned integer)
    Simple (master)
      Simple (master)
      Name (UTF\-8 string)
      TagLanguage (UTF\-8 string)
      DefaultLanguage (unsigned integer)
      String (UTF\-8 string)
      Binary (binary)
.fi
.if n \{\
.RE
.\}
.SH "PLIKI XML INFORMACJI O SEGMENCIE"
.PP
With a segment info XML file it is possible to set certain values in the "segment information" header field of a
Matroska(TM)
file\&. All of these values cannot be set via other command line options\&.
.PP
Other "segment information" header fields can be set via command line options but not via the XML file\&. This includes e\&.g\&. the
\fB\-\-title\fR
and the
\fB\-\-timecode\-scale\fR
options\&.
.PP
There are other elements that can be set neither via command line options nor via the XML files\&. These include the following elements:
\fIDateUTC\fR
(also known as the "muxing date"),
\fIMuxingApp\fR,
\fIWritingApp\fR
and
\fIDuration\fR\&. They\*(Aqre always set by
\fBmkvmerge\fR(1)
itself\&.
.PP
The following lists the supported XML tags, their data types and, where appropriate, the valid range for their values:
.sp
.if n \{\
.RS 4
.\}
.nf
Info (master)
  SegmentUID (binary, valid range: length in bytes == 16)
  SegmentFilename (UTF\-8 string)
  PreviousSegmentUID (binary, valid range: length in bytes == 16)
  PreviousSegmentFilename (UTF\-8 string)
  NextSegmentUID (binary, valid range: length in bytes == 16)
  NextSegmentFilename (UTF\-8 string)
  SegmentFamily (binary, valid range: length in bytes == 16)
  ChapterTranslate (master)
    ChapterTranslateEditionUID (unsigned integer)
    ChapterTranslateCodec (unsigned integer)
    ChapterTranslateID (binary)
.fi
.if n \{\
.RE
.\}
.SH "ROZMIESZCZENIE ELEMENT\('OW W PLIKU MATROSKA(TM)"
.PP
The
Matroska(TM)
file layout is quite flexible\&.
\fBmkvmerge\fR(1)
will render a file in a predefined way\&. The resulting file looks like this:
.PP
[nag\(/l\('owek EBML] [segment {meta seek #1} [informacje o segmencie] [informacje o ścieżce] {za\(/lączniki} {rozdzia\(/ly} [klaster 1] {klaster 2} \&.\&.\&. {klaster n} {indeks cue} {meta seek #2} {tagi}]
.PP
The elements in curly braces are optional and depend on the contents and options used\&. A couple of notes:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
meta seek #1 includes only a small number of level 1 elements, and only if they actually exist: attachments, chapters, cues, tags, meta seek #2\&. Older versions of
\fBmkvmerge\fR(1)
used to put the clusters into this meta seek element as well\&. Therefore some imprecise guessing was necessary to reserve enough space\&. It often failed\&. Now only the clusters are stored in meta seek #2, and meta seek #1 refers to the meta seek element #2\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Elementy za\(/lącznik\('ow, rozdzia\(/l\('ow i tag\('ow będą obecne tylko jeśli zostaną dodane\&.
.RE
.PP
Najmniejszy możliwy plik
Matroska(TM)
wygląda\(/lby następująco:
.PP
[nag\(/l\('owek EBML] [segment [informacja o segmencie] [informacja o ścieżce] [klaster 1]]
.PP
This might be the case for audio\-only files\&.
.SH "ZEWNĘTRZNE PLIKI KOD\('OW CZASOWYCH"
.PP
\fBmkvmerge\fR(1)
allows the user to chose the timecodes for a specific track himself\&. This can be used in order to create files with variable frame rate video or include gaps in audio\&. A frame in this case is the unit that
\fBmkvmerge\fR(1)
creates separately per
Matroska(TM)
block\&. For video this is exactly one frame, for audio this is one packet of the specific audio type\&. E\&.g\&. for
AC\-3
this would be a packet containing
\fB1536\fR
samples\&.
.PP
Timecode files that are used when tracks are appended to each other must only be specified for the first part in a chain of tracks\&. For example if you append two files, v1\&.avi and v2\&.avi, and want to use timecodes then your command line must look something like this:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \&.\&.\&. \-\-timecodes 0:moje_kody_czasowe\&.txt v1\&.avi +v2\&.avi
.fi
.if n \{\
.RE
.\}
.PP
There are four formats that are recognized by
\fBmkvmerge\fR(1)\&. The first line always contains the version number\&. Empty lines, lines containing only whitespace and lines beginning with \*(Aq#\*(Aq are ignored\&.
.SS "Format kod\('ow czasowych v1"
.PP
This format starts with the version line\&. The second line declares the default number of frames per second\&. All following lines contain three numbers separated by commas: the start frame (\fB0\fR
is the first frame), the end frame and the number of frames in this range\&. The
FPS
is a floating point number with the dot \*(Aq\&.\*(Aq as the decimal point\&. The ranges can contain gaps for which the default
FPS
is used\&. An example:
.sp
.if n \{\
.RS 4
.\}
.nf
# format kod\('ow czasowych v1
przyk\(/ladowo 27\&.930
800,1000,25
1500,1700,30
.fi
.if n \{\
.RE
.\}
.SS "Format kod\('ow czasowych v2"
.PP
In this format each line contains a timecode for the corresponding frame\&. This timecode must be given in millisecond precision\&. It can be a floating point number, but it doesn\*(Aqt have to be\&. You
\fIhave to\fR
give at least as many timecode lines as there are frames in the track\&. The timecodes in this file must be sorted\&. Example for 25fps:
.sp
.if n \{\
.RS 4
.\}
.nf
# format kod\('ow czasowych v2
0
40
80
.fi
.if n \{\
.RE
.\}
.SS "Format kod\('ow czasowych v3"
.PP
In this format each line contains a duration in seconds followed by an optional number of frames per second\&. Both can be floating point numbers\&. If the number of frames per second is not present the default one is used\&. For audio you should let the codec calculate the frame timecodes itself\&. For that you should be using
\fB0\&.0\fR
as the number of frames per second\&. You can also create gaps in the stream by using the \*(Aqgap\*(Aq keyword followed by the duration of the gap\&. Example for an audio file:
.sp
.if n \{\
.RS 4
.\}
.nf
# format kod\('ow czasowych v3
przyk\(/ladowo 0\&.0
25\&.325
7\&.530,38\&.236
przerwa, 10\&.050
2\&.000,38\&.236
.fi
.if n \{\
.RE
.\}
.SS "Format kod\('ow czasowych v4"
.PP
This format is identical to the v2 format\&. The only difference is that the timecodes do not have to be sorted\&. This format should almost never be used\&.
.SH "KODY ZAMKNIĘCIA"
.PP
\fBmkvmerge\fR(1)
exits with one of three exit codes:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB0\fR
\-\- Ten kod zamknięcia oznacza, że muksowanie zosta\(/lo zakończone powodzeniem\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB1\fR
\-\- In this case
\fBmkvmerge\fR(1)
has output at least one warning, but muxing did continue\&. A warning is prefixed with the text \*(AqWarning:\*(Aq\&. Depending on the issues involved the resulting file might be ok or not\&. The user is urged to check both the warning and the resulting file\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB2\fR
\-\- This exit code is used after an error occurred\&.
\fBmkvmerge\fR(1)
aborts right after outputting the error message\&. Error messages range from wrong command line arguments over read/write errors to broken files\&.
.RE
.SH "ZMIENNE ŚRODOWISKOWE"
.PP
\fBmkvmerge\fR(1)
uses the default variables that determine the system\*(Aqs locale (e\&.g\&.
\fILANG\fR
and the
\fILC_*\fR
family)\&. Additional variables:
.PP
\fIMKVMERGE_DEBUG\fR, \fIMKVTOOLNIX_DEBUG\fR i jego skr\('ocona forma \fIMTX_DEBUG\fR
.RS 4
The content is treated as if it had been passed via the
\fB\-\-debug\fR
option\&.
.RE
.PP
\fIMKVMERGE_ENGAGE\fR, \fIMKVTOOLNIX_ENGAGE\fR i jego skr\('ocona forma \fIMTX_ENGAGE\fR
.RS 4
The content is treated as if it had been passed via the
\fB\-\-engage\fR
option\&.
.RE
.PP
\fIMKVMERGE_OPTIONS\fR, \fIMKVTOOLNIX_OPTIONS\fR i jego skr\('ocona forma \fIMTX_OPTIONS\fR
.RS 4
The content is split on white space\&. The resulting partial strings are treated as if it had been passed as command line options\&. If you need to pass special characters (e\&.g\&. spaces) then you have to escape them (see
the section about escaping special characters in text)\&.
.RE
.SH "ZOBACZ TAKŻE"
.PP
\fBmkvinfo\fR(1),
\fBmkvextract\fR(1),
\fBmkvpropedit\fR(1),
\fBmkvtoolnix-gui\fR(1)
.SH "STRONA WWW"
.PP
The latest version can always be found at
\m[blue]\fBthe MKVToolNix homepage\fR\m[]\&\s-2\u[5]\d\s+2\&.
.SH "AUTOR"
.PP
\fBMoritz Bunkus\fR <\&moritz@bunkus\&.org\&>
.RS 4
Autor
.RE
.SH "PRZYPISY"
.IP " 1." 4
the Matroska(TM) website
.RS 4
\%http://www.matroska.org/
.RE
.IP " 2." 4
stronie domowej IANA
.RS 4
\%http://www.iana.org/assignments/media-types/
.RE
.IP " 3." 4
mkvmerge-identification-output-schema.json
.RS 4
\%https://mkvtoolnix.download/doc/mkvmerge-identification-output-schema.json
.RE
.IP " 4." 4
specyfikacji
Matroska(TM)
.RS 4
\%http://matroska.org/technical/specs/index.html
.RE
.IP " 5." 4
the MKVToolNix homepage
.RS 4
\%https://mkvtoolnix.download/
.RE
