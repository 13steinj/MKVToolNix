'\" t
.\"     Title: mkvmerge
.\"    Author: Bunkus, Moritz <moritz@bunkus.org>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 2015-09-19
.\"    Manual: Ordres d\*(Aqusuari
.\"    Source: MKVToolNix 8.4.0
.\"  Language: Catalan
.\"
.TH "MKVMERGE" "1" "2015\-09\-19" "MKVToolNix 8\&.4\&.0" "Ordres d\*(Aqusuari"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NOM"
mkvmerge \- Fusiona fluxos multim\(`edia dins d\*(Aqun fitxer Matroska(TM)
.SH "SINOPSIS"
.HP \w'\fBmkvmerge\fR\ 'u
\fBmkvmerge\fR [opcions_globals] {\-o\ sortida} [opcions_1] {fitxer_1} [[opcions_2]\ {fitxer_2}] [@fitxer_opcions]
.SH "DESCRIPCI\('O"
.PP
Aquest programa pren l\*(Aqentrada des de diversos fitxers multim\(`edia d\*(Aqentrada i uneix els seus fluxos (tots o nom\('es els seleccionats) en un fitxer
Matroska(TM); vegeu
\m[blue]\fBel lloc web del Matroska(TM)\fR\m[]\&\s-2\u[1]\d\s+2\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBImportant\fR
.ps -1
.br
.PP
L\*(Aqordre de les opcions a la l\('inia d\*(Aqordres \('es important\&. Si us plau, llegiu la secci\('o
"L'ordre de les opcions"
si sou novell emprant aquest programa\&.
.sp .5v
.RE
.SS "Opcions globals"
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
Incrementa la loquacitat\&.
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
Suprimeix la sortida de l\*(Aqestat\&.
.RE
.PP
\fB\-o\fR, \fB\-\-output\fR \fInom_fitxer\fR
.RS 4
Escriu al fitxer
\fInom_fitxer\fR\&. Si s\*(Aqusa la divisi\('o, llavors aquest par\(`ametre es tractar\(`a de manera diferent\&. Per a m\('es detalls vegeu l\*(Aqexplicaci\('o sobre l\*(Aqopci\('o
\fB\-\-split\fR\&.
.RE
.PP
\fB\-w\fR, \fB\-\-webm\fR
.RS 4
Crea un fitxer conforme amb WebM\&. Tamb\('e s\*(Aqhabilita si el nom de l\*(Aqextensi\('o del fitxer de sortida \('es "webm"\&. Aquest mode obliga a complir certes restriccions\&. Els \('unics c\(`odecs permesos s\('on VP8, VP9 per a v\('ideo i Opus, Vorbis per a pistes d\*(Aq\(`audio\&. No estan permeses ni els cap\('itols ni les etiquetes\&. L\*(Aqelement de cap\(,calera DocType \('es canviat a "webm"\&.
.RE
.PP
\fB\-\-title\fR \fIt\('itol\fR
.RS 4
Estableix el t\('itol general pel fitxer de sortida, p\&. ex\&., el nom de la pel\(mdl\('icula\&.
.RE
.PP
\fB\-\-default\-language\fR \fIcodi_idioma\fR
.RS 4
Estableix el codi d\*(Aqidioma per omissi\('o que ser\(`a usat per a les pistes on no s\*(Aqhagi establert l\*(Aqidioma amb l\*(Aqopci\('o
\fB\-\-language\fR
i per a les quals el contenidor font no proporciona un idioma\&.
.sp
El codi d\*(Aqidioma per omissi\('o \('es \(Found\(Fc per a \(Foundefined\(Fc (sense definir)\&.
.RE
.SS "Informaci\('o quant a la manipulaci\('o del segment (opcions globals)"
.PP
\fB\-\-segmentinfo\fR \fInom_fitxer\&.xml\fR
.RS 4
Llegeix la informaci\('o del segment a partir d\*(Aqun fitxer
XML\&. Aquest fitxer pot contenir el
UID
de la fam\('ilia del segment, el
UID
del segment, el
UID
del segment anterior i el
UID
del segment seg\(:uent\&. Un fitxer i un
DTD
d\*(Aqexemple estan inclosos en la distribuci\('o de les MKVToolNix\&.
.sp
Per a m\('es detalls, vegeu m\('es endavant la secci\('o sobre
els fitxers XML d'informaci\('o del segment\&.
.RE
.PP
\fB\-\-segment\-uid\fR \fISID1,SID2\&.\&.\&.\fR
.RS 4
Estableix els UID del segment a usar\&. Aquest \('es un UID del segment de 128 bits en la forma usual de l\*(AqUID: nombres hexadecimals, amb o sense el \(Fo0x\(Fc com a prefix, amb o sense espais, exactament 32 d\('igits\&.
.sp
If SID starts with = then its rest is interpreted as the name of a Matroska file whose segment UID is read and used\&.
.sp
Cada fitxer creat cont\('e un segment, i cada segment t\('e un UID del segment\&. Si s\*(Aqespecifiquen m\('es UID que segments, llavors els UID que sobrin seran ignorats\&. Si s\*(Aqespecifiquen menys UID que segments, llavors es crearan de manera aleat\(`oria els UID que faltin\&.
.RE
.SS "Manipulaci\('o dels cap\('itols i etiquetes (opcions globals)"
.PP
\fB\-\-chapter\-language\fR \fIcodi_idioma\fR
.RS 4
Estableix el codi d\*(Aqidioma ISO639\-2 que s\*(Aqescriur\(`a en cada entrada de cap\('itol\&. Per omissi\('o s\*(Aqestableix a \(Foeng\(Fc\&. Per a m\('es detalls vegeu m\('es endavant la secci\('o sobre
els cap\('itols\&.
.sp
Aquesta opci\('o es pot usar tant per a simples fitxers de cap\('itols com per a fitxers d\*(Aqorigen que continguin cap\('itols sense informaci\('o sobre l\*(Aqidioma, p\&. ex\&., fitxers MP4 i OGM\&.
.RE
.PP
\fB\-\-chapter\-charset\fR \fIjoc_de_car\(`acters\fR
.RS 4
Estableix el joc de car\(`acters que es far\(`a servir per a la conversi\('o a UTF\-8 per a simples fitxers de cap\('itols\&. Vegeu la secci\('o sobre
la conversi\('o per a fitxers de text i jocs de car\(`acters
per a veure una explicaci\('o sobre com realitza el
\fBmkvmerge\fR(1)
la conversi\('o entre diferents jocs de car\(`acters\&.
.sp
Aquest ajustament tamb\('e s\*(Aqaplica als cap\('itols que es copien des de certs tipus de contenidors, p\&. ex\&., fitxers Ogg/OGM i MP4\&. Per a m\('es detalls vegeu m\('es endavant la secci\('o sobre els cap\('itols\&.
.RE
.PP
\fB\-\-cue\-chapter\-name\-format\fR \fIformat\fR
.RS 4
El
\fBmkvmerge\fR(1)
pot llegir fulls de muntatge (CUE
sheets) per a fitxers d\*(Aq\(`audio com a entrada pels cap\('itols\&. Els fulls de muntatge normalment contenen les entrades
\fIPERFORMER\fR
i
\fITITLE\fR
per a cada entrada de l\*(Aq\('index\&. El
\fBmkvmerge\fR(1)
usa aquestes dues cadenes per tal de construir el nom del cap\('itol\&. Amb aquesta opci\('o, es pot establir el format emprat per a aquest nom\&.
.sp
Si no s\*(Aqindica aquesta opci\('o, llavors el
\fBmkvmerge\fR(1)
usar\(`a per omissi\('o el format \(Fo%p \- %t\(Fc (l\*(Aqartista, seguit per un espai, una barra, un altre espai i el t\('itol)\&.
.sp
Si s\*(Aqindica el format, llavors es copiar\(`a tot tal com est\(`a excepte els seg\(:uents meta car\(`acters que seran substitu\(:its aix\('i:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%p\fR
ser\(`a substitu\(:it per la cadena a l\*(Aqentrada
\fIPERFORMER\fR,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%t\fR
ser\(`a substitu\(:it per la cadena a l\*(Aqentrada
\fITITLE\fR,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%n\fR
ser\(`a substitu\(:it pel n\('umero de la pista actual i,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%N\fR
ser\(`a substitu\(:it pel n\('umero de la pista actual afegint\-li un zero a l\*(Aqesquerra si aquest n\('umero \('es menor que 10\&.
.RE
.RE
.PP
\fB\-\-chapters\fR \fInom_fitxer\fR
.RS 4
Llegeix la informaci\('o dels cap\('itol des del fitxer
\fInom_fitxer\fR\&. Per a m\('es detalls vegeu m\('es endavant la secci\('o sobre
els cap\('itols\&.
.RE
.PP
\fB\-\-global\-tags\fR \fInom_fitxer\fR
.RS 4
Llegeix les etiquetes globals des del fitxer
\fInom_fitxer\fR\&. Per a m\('es detalls vegeu m\('es endavant la secci\('o sobre
les etiquetes\&.
.RE
.SS "Control general de la sortida (opcions globals avan\(,cades)"
.PP
\fB\-\-track\-order\fR \fIFID1:TID1,FID2:TID2\&.\&.\&.\fR
.RS 4
Aquesta opci\('o canvia l\*(Aqordre en el qual es creen les pistes d\*(Aqun fitxer d\*(Aqentrada\&. L\*(Aqargument \('es una llista separada per comes de parells d\*(AqID\&. Cada parell cont\('e primer l\*(AqID del fitxer (\fIFID1\fR), el qual nom\('es \('es el n\('umero del fitxer a la l\('inia d\*(Aqordres partint de 0\&. El segon \('es un ID de pista (\fITID1\fR) d\*(Aqaquest fitxer\&. Si s\*(Aqometen alguns ID de pista, llavors aquestes pistes seran creades despr\('es de les establertes amb aquesta opci\('o\&.
.RE
.PP
\fB\-\-cluster\-length\fR \fIespecificaci\('o\fR
.RS 4
Limita el nombre de blocs de dades o la durada de les dades en cada cl\('uster\&. El par\(`ametre
\fIespecificaci\('o\fR
pot ser un n\('umero
\fIn\fR
sense una unitat o un n\('umero
\fId\fR
amb el sufix \(Foms\(Fc\&.
.sp
Si no s\*(Aqempra cap unitat, llavors el
\fBmkvmerge\fR(1)
tindr\(`a com a m\(`axim
\fIn\fR
blocs d\*(Aqinformaci\('o a cada cl\('uster\&. El nombre m\(`axim de blocs \('es 65535\&.
.sp
Si el n\('umero
\fId\fR
t\('e el sufix \(Foms\(Fc, llavors el
\fBmkvmerge\fR(1)
posar\(`a com a m\(`axim
\fId\fR
mil\(mdlisegons d\*(Aqinformaci\('o de dades en cada cl\('uster\&. El valor m\('inim per a
\fId\fR
\('es \(Fo100ms\(Fc, i el m\(`axim \('es \(Fo32000ms\(Fc\&.
.sp
Per omissi\('o, el
\fBmkvmerge\fR(1)
posa com a m\(`axim 65535 blocs de dades i 5000ms d\*(Aqinformaci\('o de dades a cada cl\('uster\&.
.sp
Els programes que intenten trobar un cert fotograma nom\('es poden cercar directament a un cl\('uster i posteriorment llegir tot el cl\('uster\&. Per tant, el crear cl\('usters molt grans podria comportar una cerca lenta i poc precisa\&.
.RE
.PP
\fB\-\-no\-cues\fR
.RS 4
Li diu al
\fBmkvmerge\fR(1)
que no crei i escrigui les dades de l\*(Aq\('index, el qual es pot comparar amb l\*(Aq\('index d\*(Aqun AVI\&. Els fitxers
Matroska(TM)
es poden reproduir sense les dades de l\*(Aq\('index, per\(`o la cerca probablement ser\(`a poc precisa i lenta\&. Useu aix\(`o nom\('es si realment esteu desesperat per estalviar espai o amb finalitat de proves\&. Vegeu tamb\('e que l\*(Aqopci\('o
\fB\-\-cues\fR
es pot especificar per a cada fitxer d\*(Aqentrada\&.
.RE
.PP
\fB\-\-clusters\-in\-meta\-seek\fR
.RS 4
Li diu al
\fBmkvmerge\fR(1)
que crei un element meta de cerca al final del fitxer que contindr\(`a tots els cl\('usters\&. Vegeu tamb\('e la secci\('o sobre
disposici\('o dels fitxers Matroska(TM)\&.
.RE
.PP
\fB\-\-disable\-lacing\fR
.RS 4
Deshabilita l\*(Aqenlla\(,cat per a les pistes\&. Aix\(`o incrementar\(`a la mida del fitxer, especialment si hi ha moltes pistes d\*(Aq\(`audio\&. Aquesta opci\('o no ha estat dissenyada per a l\*(Aq\('us freq\(:uent\&.
.RE
.PP
\fB\-\-enable\-durations\fR
.RS 4
Escriu les durades per a tots els blocs\&. Aix\(`o incrementar\(`a la mida del fitxer, i al moment no oferir\(`a cap valor addicional als reproductors\&.
.RE
.PP
\fB\-\-disable\-track\-statistics\-tags\fR
.RS 4
Normalment, el
\fBmkvmerge\fR(1)
escriu algunes etiquetes amb estad\('istiques per a cada pista\&. Si aquestes etiquetes ja estan presents, llavors se sobreescriuran\&. Les etiquetes s\('on
\fBBPS\fR,
\fBDURATION\fR,
\fBNUMBER_OF_BYTES\fR
i
\fBNUMBER_OF_FRAMES\fR\&.
.sp
L\*(Aqhabilitar aquesta opci\('o impedeix que el
\fBmkvmerge\fR(1)
escrigui i editi les etiquetes existents que tinguin els mateixos noms\&.
.RE
.PP
\fB\-\-timecode\-scale\fR \fIfactor\fR
.RS 4
For\(,ca el factor d\*(Aqescala dels codis de temps amb
\fIfactor\fR\&. Els valors admesos estan compresos en l\*(Aqinterval
\fB1000\fR\&.\&.\fB10000000\fR
o el valor especial
\fB\-1\fR\&.
.sp
Normalment, el
\fBmkvmerge\fR(1)
usar\(`a el valor
\fB1000000\fR, el qual vol dir que els codis de temps i durades tindran una precisi\('o de 1ms\&. Pels fitxers que no continguin una pista de v\('ideo per\(`o s\('i almenys una d\*(Aq\(`audio, llavors el
\fBmkvmerge\fR(1)
agafar\(`a un factor d\*(Aqescala de codis de temps pel que tots els codis de temps i durades tindran una precisi\('o d\*(Aquna mostra d\*(Aq\(`audio\&. Aix\(`o causar\(`a una major sobrec\(`arrega per\(`o permetr\(`a que la cerca i extracci\('o siguin m\('es precises\&.
.sp
Si s\*(Aqusa el valor especial
\fB\-1\fR, llavors el
\fBmkvmerge\fR(1)
emprar\(`a la precisi\('o de la mostra, encara que hi hagi una pista de v\('ideo\&.
.RE
.SS "Divisi\('o, vinculaci\('o, annexat i concatenaci\('o dels fitxers (m\('es opcions globals)"
.PP
\fB\-\-split\fR \fIespecificaci\('o\fR
.RS 4
Divideix el fitxer de sortida despr\('es d\*(Aquna mida o temps especificat\&. Si us plau, tingueu en compte que aquestes pistes nom\('es es poden dividir just abans d\*(Aqun fotograma clau\&. A causa de l\*(Aq\('us de mem\(`oria interm\(`edia i despr\('es d\*(Aqarribar al punt de divisi\('o especificat, el
\fBmkvmerge\fR(1)
realitzar\(`a la divisi\('o just abans que s\*(Aqhagi abastat el seg\(:uent fotograma clau\&. Per tant, el punt de divisi\('o podria ser un xic diferent de l\*(Aqespecificat per l\*(Aqusuari\&.
.sp
Fins ara, el
\fBmkvmerge\fR(1)
admet quatre modes diferents\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Divisi\('o per la mida\&.
.sp
Sintaxi:
\fB\-\-split\fR[size:]\fId\fR[k|m|g]
.sp
Exemples:
\-\-split size:700m
o
\-\-split 150000000
.sp
El par\(`ametre
\fId\fR
pot acabar amb \(Fok\(Fc, \(Fom\(Fc o \(Fog\(Fc per indicar que la mida \('es en KB, MB o GB respectivament\&. D\*(Aqaltra manera, s\*(Aqassumeix que la mida \('es en bytes\&. Despr\('es que el fitxer de sortida actual abasti la mida l\('imit, comen\(,car\(`a la creaci\('o d\*(Aqun altre fitxer\&.
.sp
El prefix \(Fosize:\(Fc es pot ometre per motius de compatibilitat\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Divisi\('o despr\(`es d\*(Aquna durada\&.
.sp
Sintaxi:
\fB\-\-split\fR[duration:]\fIHH:MM:SS\&.nnnnnnnnn\fR|\fId\fRs
.sp
Exemples:
\-\-split duration:00:60:00\&.000
o
\-\-split 3600s
.sp
El par\(`ametre pot tenir la forma
\fIHH:MM:SS\&.nnnnnnnnn\fR
per especificar la durada amb una precisi\('o de nanosegons, o pot ser un n\('umero
\fId\fR
seguit per la lletra \(Fos\(Fc per a una durada en segons\&.
\fIHH\fR
\('es el n\('umero de les hores,
\fIMM\fR
\('es el dels minuts,
\fISS\fR
\('es el dels segons i
\fInnnnnnnnn\fR
\('es el dels nanosegons\&. Tant el n\('umero de les hores com el dels nanosegons es poden ometre\&. Hi ha fins a nou d\('igits despr\('es del punt decimal\&. Despr\('es que el fitxer de sortida actual abasti la durada l\('imit, comen\(,car\(`a la creaci\('o d\*(Aqun altre fitxer\&.
.sp
El prefix \(Foduration:\(Fc es pot ometre per motius de compatibilitat\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Divisi\('o despr\('es d\*(Aquns codis de temps espec\('ifics\&.
.sp
Sintaxi:
\fB\-\-split\fRtimecodes:\fIA\fR[,\fIB\fR[,\fIC\fR\&.\&.\&.]]
.sp
Exemple:
\-\-split timecodes:00:45:00\&.000,01:20:00\&.250,6300s
.sp
Els par\(`ametres
\fIAS\fR,
\fIB\fR,
\fIC\fR, etc\&. poden tenir el mateix format que l\*(Aqusat per a la divisi\('o per durada (vegeu m\('es amunt )\&. La llista dels codis de temps est\(`a separada per comes\&. Despr\('es que el flux d\*(Aqentrada abasti el punt de divisi\('o pel codi de temps actual, es crear\(`a un fitxer nou\&. Llavors s\*(Aqusar\(`a el seg\(:uent punt de divisi\('o especificat a la llista\&.
.sp
El prefix \(Fotimecodes:\(Fc no es pot ometre\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Mant\('e les parts especificades pels intervals de codis de temps especificats mentre que les altres seran descartades\&.
.sp
Sintaxi:
\fB\-\-split\fRparts:\fIinici_1\fR\-\fIfinal_1\fR[,[+]\fIinici_2\fR\-\fIfinal_2\fR[,[+]\fIinici_3\fR\-\fIfinal_3\fR\&.\&.\&.]]
.sp
Exemples:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
\-\-split parts:00:01:20\-00:02:45,00:05:50\-00:10:30
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
\-\-split parts:00:01:20\-00:02:45,+00:05:50\-00:10:30
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
\-\-split parts:\-00:02:45,00:05:50\-
.RE
.sp
El mode
parts
li indica al
\fBmkvmerge\fR(1)
que mantingui certs intervals de codis de temps mentre es descarten altres\&. Els intervals a mantenir s\*(Aqhan de llistar despr\('es de la paraula clau
parts:
i s\*(Aqhan de separar amb comes\&. Un interval, en si mateix, consisteix d\*(Aqun inici i un final, en el mateix format i altres variacions que accepta
\fI\-\-split\fR
(p\&. ex\&., tant
00:01:20
com
80s
es refereixen al mateix codi de temps)\&.
.sp
Si s\*(Aqomet un codi de temps inicial, llavors per omissi\('o s\*(Aqemprar\(`a el codi de temps final de l\*(Aqinterval anterior\&. Si no hi ha un interval anterior, llavors per omissi\('o s\*(Aqemprar\(`a el d\*(Aqinici del fitxer (vegeu l\*(Aqexemple 3)\&.
.sp
Si s\*(Aqomet el codi de temps final, llavors per omissi\('o es prendr\(`a el valor final dels fitxers d\*(Aqentrada\&. El qual b\(`asicament li indicar\(`a al
\fBmkvmerge\fR(1)
que mantingui la resta (vegeu l\*(Aqexemple 3)\&.
.sp
Normalment, cada interval ser\(`a escrit a un fitxer nou\&. Aix\(`o es pot canviar de manera que els intervals consecutius s\*(Aqescriguin en el mateix fitxer\&. Per fer\-ho, l\*(Aqusuari haur\(`a d\*(Aqassignar el prefix
+
al codi de temps d\*(Aqinici\&. Aix\(`o li indicar\(`a al
\fBmkvmerge\fR(1)
que no cre\(:i un fitxer nou i en comptes d\*(Aqaix\(`o, que annexi l\*(Aqinterval despr\('es de l\*(Aq\('ultim interval escrit al fitxer\&. Els codis de temps seran ajustats de manera que no hi hagi discontinu\(:itats en el fitxer de sortida, fins i tot si hi havia una entre dos intervals al fitxer d\*(Aqentrada\&.
.sp
En l\*(Aqexemple 1, el
\fBmkvmerge\fR(1)
crear\(`a dos fitxers\&. El primer abastar\(`a el contingut a partir de
00:01:20
fins
00:02:45\&. El segon abastar\(`a el contingut a partir de
00:05:50
fins
00:10:30\&.
.sp
En l\*(Aqexemple 2, el
\fBmkvmerge\fR(1)
crear\(`a un \('unic fitxer\&. Aquest abastar\(`a ambd\('os, el contingut a partir de
00:01:20
fins
00:02:45
i el contingut a partir de
00:05:50
fins
00:10:30\&.
.sp
En l\*(Aqexemple 3, el
\fBmkvmerge\fR(1)
crear\(`a dos fitxers\&. El primer abastar\(`a el contingut des del comen\(,cament dels fitxers d\*(Aqorigen fins
00:02:45\&. El segon abastar\(`a el contingut a partir de
00:05:50
fins al final dels fitxers d\*(Aqorigen\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNota\fR
.ps -1
.br
Recordeu que el
\fBmkvmerge\fR(1)
nom\('es pren decisions sobre la divisi\('o a les posicions dels fotogrames clau\&. Aix\(`o \('es aplicable tant a l\*(Aqinici com al final de cada interval\&. De manera que si un codi de temps final es troba entre dos fotogrames clau, el
\fBmkvmerge\fR(1)
continuar\(`a amb la sortida dels fotogrames fins al final per\(`o excloent el seg\(:uent fotograma clau\&.
.sp .5v
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
Mant\('e les parts especificades pels intervals de n\('umero de fotograma/camp especificats mentre que les altres seran descartades\&.
.sp
Sintaxi:
\fB\-\-split\fRparts\-frames:\fIinici_1\fR\-\fIfinal_1\fR[,[+]\fIinici_2\fR\-\fIfinal_2\fR[,[+]\fIinici_3\fR\-\fIfinal_3\fR\&.\&.\&.]]
.sp
Exemples:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
\-\-split parts\-frames:137\-258,548\-1211
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
\-\-split parts\-frames:733\-912,+1592\-2730
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
\-\-split parts\-frames:\-430,2512\-
.RE
.sp
El mode
parts\-frames:
li indica al
\fBmkvmerge\fR(1)
que mantingui certs intervals num\(`erics de fotogrames/camps, mentre es descarten altres\&. Els intervals a mantenir s\*(Aqhan d\*(Aqespecificar despr\('es de la paraula clau
parts\-frames:
i separar amb comes\&. Un interval consisteix en un n\('umero de fotograma/camp inicial i final\&. La numeraci\('o comen\(,ca per l\*(Aq1\&.
.sp
Si s\*(Aqomet un n\('umero inicial, llavors per omissi\('o s\*(Aqemprar\(`a el n\('umero final de l\*(Aqinterval anterior Si no hi ha un interval anterior, llavors per omissi\('o s\*(Aqemprar\(`a el d\*(Aqinici del fitxer (vegeu l\*(Aqexemple 3)\&.
.sp
Si s\*(Aqomet el n\('umero final, llavors per omissi\('o es prendr\(`a el valor final dels fitxers d\*(Aqentrada\&. El qual b\(`asicament li indicar\(`a al
\fBmkvmerge\fR(1)
que mantingui la resta (vegeu l\*(Aqexemple 3)\&.
.sp
Normalment, cada interval ser\(`a escrit a un fitxer nou\&. Aix\(`o es pot canviar de manera que els intervals consecutius s\*(Aqescriguin en el mateix fitxer\&. Per fer\-ho, l\*(Aqusuari haur\(`a d\*(Aqassignar el prefix
+
al n\('umero d\*(Aqinici\&. Aix\(`o li indicar\(`a al
\fBmkvmerge\fR(1)
que no cre\(:i un fitxer nou i en comptes d\*(Aqaix\(`o, que annexi l\*(Aqinterval despr\('es de l\*(Aq\('ultim interval escrit al fitxer\&. Els codis de temps seran ajustats de manera que no hi hagi discontinu\(:itats en el fitxer de sortida, fins i tot si hi havia una entre dos intervals al fitxer d\*(Aqentrada\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNota\fR
.ps -1
.br
Recordeu que el
\fBmkvmerge\fR(1)
nom\('es pren decisions sobre la divisi\('o a les posicions dels fotogrames clau\&. Aix\(`o \('es aplicable tant a l\*(Aqinici com al final de cada interval\&. De manera que si un n\('umero de fotograma/camp final es troba entre dos fotogrames clau, el
\fBmkvmerge\fR(1)
continuar\(`a amb la sortida dels fotogrames fins al final per\(`o excloent el seg\(:uent fotograma clau\&.
.sp .5v
.RE
En l\*(Aqexemple 1, el
\fBmkvmerge\fR(1)
crear\(`a dos fitxers\&. El primer abastar\(`a el contingut a partir del primer fotograma clau o despr\('es del
137
fins, per\(`o sense incloure el primer fotograma clau o despr\('es del
258\&. El segon abastar\(`a el contingut a partir del
548
fins al
1211\&.
.sp
En l\*(Aqexemple 2, el
\fBmkvmerge\fR(1)
crear\(`a un \('unic fitxer\&. Aquest abastar\(`a ambd\('os, el contingut a partir del
733
fins al
912
i el contingut a partir del
1592
fins al
2730\&.
.sp
En l\*(Aqexemple 3, el
\fBmkvmerge\fR(1)
crear\(`a dos fitxers\&. El primer abastar\(`a el contingut des del comen\(,cament dels fitxers d\*(Aqorigen fins al
430\&. El segon abastar\(`a el contingut a partir del
2512
fins al final dels fitxers d\*(Aqorigen\&.
.sp
Aquest mode nom\('es considera la primera pista de v\('ideo que es genera\&. Si no hi ha cap pista de v\('ideo a la sortida, no es produir\(`a cap divisi\('o\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNota\fR
.ps -1
.br
Els n\('umeros donats amb aquest argument s\('on interpretats en base al nombre de blocs
Matroska(TM)
que es generen\&. Un \('unic bloc
Matroska(TM)
cont\('e tot un fotograma (per a contingut progressiu) o nom\('es un camp (per a contingut entrella\(,cat)\&. El
\fBmkvmerge\fR(1)
no fa distincions entre els dos i nom\('es compta el nombre de blocs\&. Per exemple: Si es vol dividir despr\('es del 25\(`e fotograma amb material entrella\(,cat, llavors s\*(Aqhaur\(`a d\*(Aqusar
50
(dos camps per a tot un fotograma) com a punt de tall\&.
.sp .5v
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
Divisi\('o despr\('es d\*(Aquns fotogrames/camps espec\('ifics\&.
.sp
Sintaxi:
\fB\-\-split\fRframes:\fIA\fR[,\fIB\fR[,\fIC\fR\&.\&.\&.]]
.sp
Exemple:
\-\-split frames:120,237,891
.sp
Els par\(`ametres
\fIA\fR,
\fIB\fR,
\fIC\fR, etc\&. hauran de ser tots sencers positius\&. La numeraci\('o comen\(,ca per 1\&. La llista de n\('umeros de fotograma/camp estar\(`a separada per comes\&. Despr\('es que el flux d\*(Aqentrada hagi abastat el n\('umero de fotograma/camp del punt de tall actual, es crear\(`a un fitxer nou\&. Despr\('es s\*(Aqusar\(`a el seg\(:uent punt de tall indicat a la llista\&.
.sp
El prefix \(Foframes:\(Fc no es pot ometre\&.
.sp
Aquest mode nom\('es considera la primera pista de v\('ideo que es genera\&. Si no hi ha cap pista de v\('ideo a la sortida, no es produir\(`a cap divisi\('o\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNota\fR
.ps -1
.br
Els n\('umeros donats amb aquest argument s\('on interpretats en base al nombre de blocs
Matroska(TM)
que es generen\&. Un \('unic bloc
Matroska(TM)
cont\('e tot un fotograma (per a contingut progressiu) o nom\('es un camp (per a contingut entrella\(,cat)\&. El
\fBmkvmerge\fR(1)
no fa distincions entre els dos i nom\('es compta el nombre de blocs\&. Per exemple: Si es vol dividir despr\('es del 25\(`e fotograma amb material entrella\(,cat, llavors s\*(Aqhaur\(`a d\*(Aqusar
50
(dos camps per a tot un fotograma) com a punt de tall\&.
.sp .5v
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  7." 4.2
.\}
Dividir abans de cap\('itols espec\('ifics\&.
.sp
Sintaxi:
\fB\-\-split\fRchapters:all
o
\fB\-\-split\fRchapters:\fIA\fR[,\fIB\fR[,\fIC\fR\&.\&.\&.]]
.sp
Exemple:
\-\-split chapters:5,8
.sp
Els par\(`ametres
\fIA\fR,
\fIB\fR,
\fIC\fR, etc\&. hauran de ser tots sencers positius\&. La numeraci\('o comen\(,ca per 1\&. La llista de cap\('itols estar\(`a separada per comes\&. La divisi\('o succeir\(`a just abans del primer fotograma clau on el codi de temps sigui igual o major que el codi de temps d\*(Aqinici per als cap\('itols dels n\('umeros llistats\&. Un cap\('itol que comen\(,ca als 0s mai es tindr\(`a en compte per a la divisi\('o i ser\(`a om\(`es silenciosament\&.
.sp
La paraula clau
all
es pot usar en lloc d\*(Aquna llista manual de tots els n\('umeros de cap\('itols\&.
.sp
El prefix \(Fochapters:\(Fc no es pot ometre\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNota\fR
.ps -1
.br
El format de fitxer
Matroska(TM)
admet estructures de cap\('itols arbitr\(`aries i aniuades profundament anomenades \(Foentrades de l\*(Aqedici\('o\(Fc (edition entries) i \(Fo\(`atoms del cap\('itol\(Fc (chapter atoms)\&. No obstant, aquest mode nom\('es t\('e en compte el nivell m\('es alt dels cap\('itols al llarg de totes les entrades de l\*(Aqedici\('o\&.
.sp .5v
.RE
.RE
.sp
En aquest mode de divisi\('o, el nom del fitxer de sortida ser\(`a tractat de manera diferent que amb el funcionament normal\&. Pot contenir un
\fBprintf\fR
com l\*(Aqexpressi\('o \(Fo%d\(Fc, incloent una amplada de camp opcional, p\&. ex\&., \(Fo%02d\(Fc\&. Si es fa llavors el n\('umero del fitxer actual ser\(`a formatat adequadament i inserit en aquest punt del nom del fitxer\&. Si no hi ha aquest patr\('o, llavors s\*(Aqassumir\(`a \(Fo\-%03d\(Fc com a patr\('o just abans de l\*(Aqextensi\('o del fitxer: \(Fo\-o sortida\&.mkv\(Fc resultaria en \(Fosortida\-001\&.mkv\(Fc i aix\('i en endavant\&. Si no hi ha extensi\('o, llavors s\*(Aqafegir\(`a \(Fo\-%03d\(Fc al nom\&.
.RE
.PP
\fB\-\-link\fR
.RS 4
Els fitxers es vinculen a altres quan es divideix el fitxer de sortida\&. Per a m\('es detalls, vegeu la seg\(:uent secci\('o
vincular els fitxers\&.
.RE
.PP
\fB\-\-link\-to\-previous\fR \fIUID_segment\fR
.RS 4
Vincula el primer fitxer de sortida al segment amb l\*(AqUID del segment indicat mitjan\(,cant el par\(`ametre
\fIUID_segment\fR\&. Per a m\('es detalls, vegeu la seg\(:uent secci\('o
vincular els fitxers\&.
.sp
If SID starts with = then its rest is interpreted as the name of a Matroska file whose segment UID is read and used\&.
.RE
.PP
\fB\-\-link\-to\-next\fR \fIUID_segment\fR
.RS 4
Vincula l\*(Aq\('ultim fitxer de sortida al segment amb l\*(AqUID del segment indicat mitjan\(,cant el par\(`ametre
\fIUID_segment\fR\&. Per a m\('es detalls, vegeu la seg\(:uent secci\('o
vincular els fitxers\&.
.sp
If SID starts with = then its rest is interpreted as the name of a Matroska file whose segment UID is read and used\&.
.RE
.PP
\fB\-\-append\-mode\fR \fImode\fR
.RS 4
Determina com es calcularan els codis de temps en annexar els fitxers\&. El par\(`ametre
\fImode\fR
pot tenir dos valors: \(Fofile\(Fc que \('es l\*(Aqopci\('o per omissi\('o i \(Fotrack\(Fc\&.
.sp
Quan el
\fBmkvmerge\fR(1)
annexa una pista (anomenada \(Fopista2_1\(Fc d\*(Aqara en endavant) des d\*(Aqun segon fitxer (anomenat \(Fofitxer2\(Fc) a una pista (anomenada \(Fopista1_1\(Fc) des del primer fitxer (anomenat \(Fofitxer1\(Fc) llavors compensar\(`a una quantitat en tots els codis de temps per a la \(Fopista2_1\(Fc\&. En el mode \(Fofile\(Fc aquesta quantitat ser\(`a el major codi de temps trobat en el \(Fofitxer1\(Fc, fins i tot si aquest codi de temps provingu\('es d\*(Aquna pista diferent a \(Fopista1_1\(Fc\&. En el mode \(Fotrack\(Fc, la compensaci\('o ser\(`a el major codi de temps de la \(Fopista1_1\(Fc\&.
.sp
Malauradament, el
\fBmkvmerge\fR(1)
no pot detectar quin mode \('es m\('es convenient usar\&. Per tant, per omissi\('o usa el mode \(Fofile\(Fc\&. Aquest mode, en general funciona millor per a fitxers que es creen de manera independent els uns dels altres; p\&. ex\&., quan s\*(Aqannexen fitxers
AVI
o
MP4\&. El mode \(Fotrack\(Fc podria funcionar millor per a fonts que essencialment nom\('es s\('on parts d\*(Aqun fitxer gran, p\&. ex\&., per a fitxers
VOB
i
EVO\&.
.sp
Les pistes de subt\('itols sempre seran tractades com si estigu\('es actiu el mode \(Fofile\(Fc, fins i tot si el que est\(`a actiu \('es el mode \(Fotrack\(Fc\&.
.RE
.PP
\fB\-\-append\-to\fR \fISFID1:STID1:DFID1:DTID1\fR\fI[\&.\&.\&.]\fR
.RS 4
Aquesta opci\('o controla quina pista \('es annexada a una altra\&. Cada especificaci\('o cont\('e quatre ID: un identificador de fitxer (FID), un identificador de pista (TID), un segon identificador de fitxer i un segon identificador de pista\&. El primer parell, l\*(Aq\(FoID del fitxer d\*(Aqorigen\(Fc i l\*(Aq\(FoID de la pista de l\*(Aqorigen\(Fc, identifiquen la pista que s\*(Aqha d\*(Aqannexar\&. El segon parell, l\*(Aq\(FoID del fitxer de destinaci\('o\(Fc i l\*(Aq\(FoID de la pista de destinaci\('o\(Fc, identifiquen la pista a la qual s\*(Aqha d\*(Aqannexar la primera\&.
.sp
Si s\*(Aqomet aquesta opci\('o, llavors s\*(Aqusar\(`a un mapeig est\(`andard\&. Aquest, annexar\(`a cada pista del fitxer actual a una pista del fitxer anterior amb el mateix ID de pista\&. Aix\(`o permet annexar amb facilitat dos fitxers que havien estat dividits a partir d\*(Aquna pel\(mdl\('icula, si tenen el mateix nombre de pistes i ID de la pista, amb l\*(Aqordre:
\fBmkvmerge \-o sortida\&.mkv part1\&.mkv +part2\&.mkv\fR\&.
.RE
.PP
\fB+\fR
.RS 4
Un \('unic signe \(Fo+\(Fc causar\(`a que s\*(Aqannexi el fitxer seg\(:uent en comptes d\*(Aqafegir\-lo\&. El signe \(Fo+\(Fc tamb\('e es pot posar davant del nom de fitxer seg\(:uent\&. Per tant, les dues ordres seg\(:uents s\('on equivalents:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o complet\&.mkv fitxer_1\&.mkv + fitxer_2\&.mkv
$ mkvmerge \-o complet\&.mkv fitxer_1\&.mkv +fitxer_2\&.mkv
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB=\fR
.RS 4
Normally
\fBmkvmerge\fR(1)
looks for files in the same directory as an input file that have the same base name and only differ in their running number (e\&.g\&. \*(AqVTS_01_1\&.VOB\*(Aq, \*(AqVTS_01_2\&.VOB\*(Aq, \*(AqVTS_01_3\&.VOB\*(Aq etc) and treats all of those files as if they were concatenated into a single big file\&. This option, a single \*(Aq=\*(Aq, causes mkvmerge not to look for those additional files\&.
.sp
El signe \(Fo=\(Fc tamb\('e es pot posar davant del nom de fitxer seg\(:uent\&. Per tant, les dues ordres seg\(:uents s\('on equivalents:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o complet\&.mkv = fitxer_1\&.mkv
$ mkvmerge \-o complet\&.mkv =fitxer_1\&.mkv
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB(\fR \fIfitxer_1\fR \fIfitxer_2\fR \fB)\fR
.RS 4
If multiple file names are contained in a pair of parenthesis then those files will be treated as if they were concatenated into a single big file consisting of the content of each of the files one after the other\&.
.sp
This can be used for e\&.g\&. VOB files coming from a DVD or MPEG transport streams\&. It cannot be used if each file contains its own set of headers which is usually the case with stand\-alone files like AVI or MP4\&.
.sp
Putting a file name into parenthesis also prevents
\fBmkvmerge\fR(1)
from looking for additional files with the same base name as described in
option \fB=\fR\&. Therefore these two command lines are equivalent:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o sortida\&.mkv = fitxer\&.mkv
$ mkvmerge \-o sortida\&.mkv \*(Aq(\*(Aq fitxer\&.mkv \*(Aq)\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Hi ha diverses coses que s\*(Aqhan de tenir en compte:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Hi ha d\*(Aqhaver espais abans i despr\('es dels signes de par\(`entesi\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Cada par\(`ametre entre par\(`entesis s\*(Aqinterpretar\(`a com un nom de fitxer\&. Per tant, totes les opcions que s\*(Aqhagin d\*(Aqaplicar a aquest fitxer, per l\(`ogica s\*(Aqhauran d\*(Aqintroduir abans del signe d\*(Aqobertura del par\(`entesi\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Alguns int\(`erprets d\*(Aqordres tracten els par\(`entesis com a car\(`acters especials\&. Per tant, s\*(Aqhauran d\*(Aqescapar o posar entre cometes tal com es mostra en l\*(Aqexemple anterior\&.
.RE
.RE
.SS "Implementaci\('o per a adjunts (m\('es opcions globals)"
.PP
\fB\-\-attachment\-description\fR \fIdescripci\('o\fR
.RS 4
Plain text description of the following attachment\&. Applies to the next
\fB\-\-attach\-file\fR
or
\fB\-\-attach\-file\-once\fR
option\&.
.RE
.PP
\fB\-\-attachment\-mime\-type\fR \fItipus_MIME\fR
.RS 4
MIME
type of the following attachment\&. Applies to the next
\fB\-\-attach\-file\fR
or
\fB\-\-attach\-file\-once\fR
option\&. A list of officially recognized
MIME
types can be found e\&.g\&. at
\m[blue]\fBthe IANA homepage\fR\m[]\&\s-2\u[2]\d\s+2\&. The
MIME
type is mandatory for an attachment\&.
.RE
.PP
\fB\-\-attachment\-name\fR \fInom\fR
.RS 4
Sets the name that will be stored in the output file for this attachment\&. If this option is not given then the name will be derived from the file name of the attachment as given with the
\fB\-\-attach\-file\fR
or the
\fB\-\-attach\-file\-once\fR
option\&.
.RE
.PP
\fB\-\-attach\-file\fR \fInom_fitxer\fR, \fB\-\-attach\-file\-once\fR \fInom_fitxer\fR
.RS 4
Creates a file attachment inside the
Matroska(TM)
file\&. The
MIME
type must have been set before this option can used\&. The difference between the two forms is that during splitting the files attached with
\fB\-\-attach\-file\fR
are attached to all output files while the ones attached with
\fB\-\-attach\-file\-once\fR
are only attached to the first file created\&. If splitting is not used then both do the same\&.
.sp
El
\fBmkvextract\fR(1)
es pot emprar per extreure els fitxers adjunts des d\*(Aqun fitxer
Matroska(TM)\&.
.RE
.SS "Opcions que es poden usar per a cada fitxer d\*(Aqentrada"
.PP
\fB\-a\fR, \fB\-\-audio\-tracks\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the audio tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch\&. They\*(Aqre not simply the track numbers (see section
track IDs)\&. Default: copy all audio tracks\&.
.sp
Instead of track IDs you can also provide ISO 639\-2 language codes\&. This will only work for source files that provide language tags for their tracks\&.
.sp
Per omissi\('o: copia totes les pistes d\*(Aqaquest tipus\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy all tracks of this kind but the ones listed after the
!\&.
.RE
.PP
\fB\-d\fR, \fB\-\-video\-tracks\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the video tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch\&. They\*(Aqre not simply the track numbers (see section
track IDs)\&. Default: copy all video tracks\&.
.sp
Instead of track IDs you can also provide ISO 639\-2 language codes\&. This will only work for source files that provide language tags for their tracks\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy all tracks of this kind but the ones listed after the
!\&.
.RE
.PP
\fB\-s\fR, \fB\-\-subtitle\-tracks\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the subtitle tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch\&. They\*(Aqre not simply the track numbers (see section
track IDs)\&. Default: copy all subtitle tracks\&.
.sp
Instead of track IDs you can also provide ISO 639\-2 language codes\&. This will only work for source files that provide language tags for their tracks\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy all tracks of this kind but the ones listed after the
!\&.
.RE
.PP
\fB\-b\fR, \fB\-\-button\-tracks\fR \fI[!]\fR\fIn,m,\&.\&.\&.\fR
.RS 4
Copy the button tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch\&. They\*(Aqre not simply the track numbers (see section
track IDs)\&. Default: copy all button tracks\&.
.sp
Instead of track IDs you can also provide ISO 639\-2 language codes\&. This will only work for source files that provide language tags for their tracks\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy all tracks of this kind but the ones listed after the
!\&.
.RE
.PP
\fB\-\-track\-tags\fR \fI[!]\fR\fIn,m\&.\&.\&.\fR
.RS 4
Copy the tags for tracks
\fIn\fR,
\fIm\fR
etc\&. The numbers are track IDs which can be obtained with the
\fB\-\-identify\fR
switch (see section
track IDs)\&. They\*(Aqre not simply the track numbers\&. Default: copy tags for all tracks\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy everything but the IDs listed after the
!\&.
.RE
.PP
\fB\-m\fR, \fB\-\-attachments\fR \fI[!]\fR\fIn\fR\fI[:all|first]\fR\fI,m\fR\fI[:all|first]\fR\fI,\&.\&.\&.\fR
.RS 4
Copy the attachments with the IDs
\fIn\fR,
\fIm\fR
etc to all or only the first output file\&. Each ID can be followed by either \*(Aq:all\*(Aq (which is the default if neither is entered) or \*(Aq:first\*(Aq\&. If splitting is active then those attachments whose IDs are specified with \*(Aq:all\*(Aq are copied to all of the resulting output files while the others are only copied into the first output file\&. If splitting is not active then both variants have the same effect\&.
.sp
The default is to copy all attachments to all output files\&.
.sp
If the IDs are prefixed with
!
then the meaning is reversed: copy everything but the IDs listed after the
!\&.
.RE
.PP
\fB\-A\fR, \fB\-\-no\-audio\fR
.RS 4
No copia cap pista d\*(Aq\(`audio des d\*(Aqaquest fitxer\&.
.RE
.PP
\fB\-D\fR, \fB\-\-no\-video\fR
.RS 4
No copia cap pista de v\('ideo des d\*(Aqaquest fitxer\&.
.RE
.PP
\fB\-S\fR, \fB\-\-no\-subtitles\fR
.RS 4
No copia cap pista de subt\('itols des d\*(Aqaquest fitxer\&.
.RE
.PP
\fB\-B\fR, \fB\-\-no\-buttons\fR
.RS 4
Don\*(Aqt copy any button track from this file\&.
.RE
.PP
\fB\-T\fR, \fB\-\-no\-track\-tags\fR
.RS 4
No copia cap etiqueta espec\('ifica de pista des d\*(Aqaquest fitxer\&.
.RE
.PP
\fB\-\-no\-chapters\fR
.RS 4
No copia cap cap\('itol des d\*(Aqaquest fitxer\&.
.RE
.PP
\fB\-M\fR, \fB\-\-no\-attachments\fR
.RS 4
No copia cap adjunt des d\*(Aqaquest fitxer\&.
.RE
.PP
\fB\-\-no\-global\-tags\fR
.RS 4
No copia cap etiqueta global des d\*(Aqaquest fitxer\&.
.RE
.PP
\fB\-\-chapter\-charset\fR \fIjoc_de_car\(`acters\fR
.RS 4
Estableix el joc de car\(`acters que es far\(`a servir per a la conversi\('o a UTF\-8 per a la informaci\('o de cap\('itols continguda al fitxer d\*(Aqorigen\&. Vegeu la secci\('o sobre
la conversi\('o per a fitxers de text i jocs de car\(`acters
per a veure una explicaci\('o sobre com realitza el
\fBmkvmerge\fR(1)
la conversi\('o entre diferents jocs de car\(`acters\&.
.RE
.PP
\fB\-\-chapter\-language\fR \fIcodi_idioma\fR
.RS 4
Sets the ISO639\-2 language code that is written for each chapter entry\&. This option can be used for source files that contain chapters but no information about the chapters\*(Aq languages, e\&.g\&. for MP4 and OGM files\&.
.RE
.PP
\fB\-y\fR, \fB\-\-sync\fR \fITID:d\fR\fI[,o[/p]]\fR
.RS 4
Adjust the timecodes of the track with the id
\fITID\fR
by
\fId\fR
ms\&. The track IDs are the same as the ones given with
\fB\-\-identify\fR
(see section
track IDs)\&.
.sp
\fIo\fR/\fIp\fR: adjust the timestamps by
\fIo\fR/\fIp\fR
to fix linear drifts\&.
\fIp\fR
defaults to 1 if omitted\&. Both
\fIo\fR
and
\fIp\fR
can be floating point numbers\&.
.sp
Defaults: no manual sync correction (which is the same as
\fId\fR
=
\fB0\fR
and
\fIo\fR/\fIp\fR
=
\fB1\&.0\fR)\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-\-cues\fR \fITID:none|iframes|all\fR
.RS 4
Controls for which tracks cue (index) entries are created for the given track (see section
track IDs)\&. \*(Aqnone\*(Aq inhibits the creation of cue entries\&. For \*(Aqiframes\*(Aq only blocks with no backward or forward references ( = I frames in video tracks) are put into the cue sheet\&. \*(Aqall\*(Aq causes
\fBmkvmerge\fR(1)
to create cue entries for all blocks which will make the file very big\&.
.sp
The default is \*(Aqiframes\*(Aq for video tracks and \*(Aqnone\*(Aq for all others\&. See also option
\fB\-\-no\-cues\fR
which inhibits the creation of cue entries regardless of the
\fB\-\-cues\fR
options used\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-\-default\-track\fR \fITID\fR\fI[:boole\(`a]\fR
.RS 4
Sets the \*(Aqdefault\*(Aq flag for the given track (see section
track IDs) if the optional argument
\fIbool\fR
is not present\&. If the user does not explicitly select a track himself then the player should prefer the track that has his \*(Aqdefault\*(Aq flag set\&. Only one track of each kind (audio, video, subtitles, buttons) can have his \*(Aqdefault\*(Aq flag set\&. If the user wants no track to have the default track flag set then he has to set
\fIbool\fR
to
\fB0\fR
for all tracks\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-\-forced\-track\fR \fITID\fR\fI[:boole\(`a]\fR
.RS 4
Sets the \*(Aqforced\*(Aq flag for the given track (see section
track IDs) if the optional argument
\fIbool\fR
is not present\&. A player must play all tracks for which this flag is set to
\fB1\fR\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-\-blockadd\fR \fITID:nivell\fR
.RS 4
Nom\('es mant\('e
BlockAdditions
fins al
\fInivell\fR
per a la pista indicada\&. Per omissi\('o ho mant\('e en tots els nivells\&. Aquesta opci\('o nom\('es afecta certs tipus de c\(`odecs com WAVPACK4\&.
.RE
.PP
\fB\-\-track\-name\fR \fITID:nom\fR
.RS 4
Sets the track name for the given track (see section
track IDs) to
\fIname\fR\&.
.RE
.PP
\fB\-\-language\fR \fITID:idioma\fR
.RS 4
Sets the language for the given track (see section
track IDs)\&. Both ISO639\-2 language codes and ISO639\-1 country codes are allowed\&. The country codes will be converted to language codes automatically\&. All languages including their ISO639\-2 codes can be listed with the
\fB\-\-list\-languages\fR
option\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.PP
\fB\-t\fR, \fB\-\-tags\fR \fITID:nom_fitxer\fR\fITID\fR\fITID\fR
.RS 4
Llegeix les etiquetes per a la pista amb el n\('umero
\fITID\fR
des del fitxer
\fInom_fitxer\fR\&. Per a m\('es detalls vegeu m\('es endavant la secci\('o sobre
les etiquetes\&.
.RE
.PP
\fB\-\-aac\-is\-sbr\fR \fITID\fR\fI[:0|1]\fR
.RS 4
Tells
\fBmkvmerge\fR(1)
that the track with the ID
\fITID\fR
is
SBR AAC
(also known as
HE\-AAC
or
AAC+)\&. This options is needed if a) the source file is an
AAC
file (\fInot\fR
for a
Matroska(TM)
file) and b) the
AAC
file contains
SBR AAC
data\&. The reason for this switch is that it is technically impossible to automatically tell normal
AAC
data from
SBR AAC
data without decoding a complete
AAC
frame\&. As there are several patent issues with
AAC
decoders
\fBmkvmerge\fR(1)
will never contain this decoding stage\&. So for
SBR AAC
files this switch is mandatory\&. The resulting file might not play back correctly or even not at all if the switch was omitted\&.
.sp
If the source file is a
Matroska(TM)
file then the
CodecID
should be enough to detect
SBR AAC\&. However, if the
CodecID
is wrong then this switch can be used to correct that\&.
.sp
If mkvmerge wrongfully detects that an
AAC
file is
SBR
then you can add \*(Aq:0\*(Aq to the track ID\&.
.RE
.PP
\fB\-\-reduce\-to\-core\fR \fITID\fR
.RS 4
Some audio codecs have a lossy core and optional extensions that implement lossless decoding\&. This option tells
\fBmkvmerge\fR(1)
to only copy the core but not the extensions\&. By default
\fBmkvmerge\fR(1)
copies both the core and the extensions\&.
.sp
Currently only
DTS
tracks are affected by this option\&. TrueHD tracks that contain an embedded
AC\-3
core are instead presented as two separate tracks for which the user can select which track to copy\&. For
DTS
such a scheme would not work as the HD extensions cannot be decoded by themselves \(en unlike the TrueHD data\&.
.sp
If mkvmerge wrongfully detects that an
AAC
file is
SBR
then you can add \*(Aq:0\*(Aq to the track ID\&.
.RE
.PP
\fB\-\-timecodes\fR \fITID:nom_fitxer\fR
.RS 4
Read the timecodes to be used for the specific track ID from
\fIfile\-name\fR\&. These timecodes forcefully override the timecodes that
\fBmkvmerge\fR(1)
normally calculates\&. Read the section about
external timecode files\&.
.RE
.PP
\fB\-\-default\-duration\fR \fITID:x\fR
.RS 4
Forces the default duration of a given track to the specified value\&. Also modifies the track\*(Aqs timecodes to match the default duration\&. The argument
\fIx\fR
must be postfixed with \*(Aqs\*(Aq, \*(Aqms\*(Aq, \*(Aqus\*(Aq, \*(Aqns\*(Aq, \*(Aqfps\*(Aq, \*(Aqp\*(Aq or \*(Aqi\*(Aq to specify the default duration in seconds, milliseconds, microseconds, nanoseconds, \*(Aqframes per second\*(Aq, \*(Aqprogressive frames per second\*(Aq or \*(Aqinterlaced frames per second\*(Aq respectively\&. The number
\fIx\fR
itself can be a floating point number or a fraction\&.
.sp
If the default duration is not forced then mkvmerge will try to derive the track\*(Aqs default duration from the container and/or the encoded bitstream for certain track types, e\&.g\&. AVC/h\&.264 or MPEG\-2\&.
.sp
This option can also be used to change the
FPS
of video tracks without having to use an external timecode file\&.
.RE
.PP
\fB\-\-fix\-bitstream\-timing\-information\fR \fITID\fR\fI[:0|1]\fR
.RS 4
Normally
\fBmkvmerge\fR(1)
does not change the timing information (frame/field rate) stored in the video bitstream\&. With this option that information is adjusted to match the container timing information\&. The container timing information can come from various sources: from the command line (see option
\fB\-\-default\-duration\fR), the source container or derived from the bitstream\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNota\fR
.ps -1
.br
Per ara, nom\('es s\*(Aqha implementat per a pistes AVC/h\&.264\&.
.sp .5v
.RE
.RE
.PP
\fB\-\-nalu\-size\-length\fR \fITID:n\fR
.RS 4
Forces the
NALU
size length to
\fIn\fR
bytes\&. This parameter is only used if the
AVC/h\&.264
elementary stream packetizer is used\&. If left out it defaults to 4 bytes, but there are files that contain frames or slices that are all smaller than 65536 bytes\&. For such files you can use this parameter and decrease the size to 2\&.
.RE
.PP
\fB\-\-compression\fR \fITID:n\fR
.RS 4
Selects the compression method to be used for the track\&. Note that the player also has to support this method\&. Valid values are \*(Aqnone\*(Aq, \*(Aqzlib\*(Aq, \*(Aqlzo\*(Aq/\*(Aqlxo1x\*(Aq, \*(Aqbz2\*(Aq/\*(Aqbzlib\*(Aq and \*(Aqmpeg4_p2\*(Aq/\*(Aqmpeg4p2\*(Aq\&. The values \*(Aqlzo\*(Aq/\*(Aqlxo1x\*(Aq and \*(Aqbz2\*(Aq/\*(Aqbzlib\*(Aq are only available if
\fBmkvmerge\fR(1)
has been compiled with support for the
liblzo(TM)
and
bzlib(TM)
compression libraries, respectively\&.
.sp
The compression method \*(Aqmpeg4_p2\*(Aq/\*(Aqmpeg4p2\*(Aq is a special compression method called \*(Aqheader removal\*(Aq that is only available for
MPEG4
part 2 video tracks\&.
.sp
The default for some subtitle tracks is \*(Aqzlib\*(Aq compression\&. This compression method is also the one that most if not all playback applications support\&. Support for other compression methods other than \*(Aqnone\*(Aq is not assured\&.
.RE
.SS "Opcions que nom\('es s\*(Aqapliquen a les pistes de v\('ideo"
.PP
\fB\-f\fR, \fB\-\-fourcc\fR \fITID:FourCC\fR
.RS 4
For\(,ca el
FourCC
al valor especificat\&. Nom\('es funciona per a les pistes de v\('ideo en el
mode compatibilitat de MS\&.
.RE
.PP
\fB\-\-display\-dimensions\fR \fITID:amplada_x_al\(,cada\fR
.RS 4
Matroska(TM)
files contain two values that set the display properties that a player should scale the image on playback to: display width and display height\&. These values can be set with this option, e\&.g\&. \*(Aq1:640x480\*(Aq\&.
.sp
Another way to specify the values is to use the
\fB\-\-aspect\-ratio\fR
or the
\fB\-\-aspect\-ratio\-factor\fR
option (see below)\&. These options are mutually exclusive\&.
.RE
.PP
\fB\-\-aspect\-ratio\fR \fITID:relaci\('o|amplada/al\(,cada\fR
.RS 4
Matroska(TM)
files contain two values that set the display properties that a player should scale the image on playback to: display width and display height\&. With this option
\fBmkvmerge\fR(1)
will automatically calculate the display width and display height based on the image\*(Aqs original width and height and the aspect ratio given with this option\&. The ratio can be given either as a floating point number
\fIratio\fR
or as a fraction \*(Aq\fIwidth\fR/\fIheight\fR\*(Aq, e\&.g\&. \*(Aq16/9\*(Aq\&.
.sp
Another way to specify the values is to use the
\fB\-\-aspect\-ratio\-factor\fR
or
\fB\-\-display\-dimensions\fR
options (see above and below)\&. These options are mutually exclusive\&.
.RE
.PP
\fB\-\-aspect\-ratio\-factor\fR \fITID:factor|n/d\fR
.RS 4
Another way to set the aspect ratio is to specify a
\fIfactor\fR\&. The original aspect ratio is first multiplied with this
\fIfactor\fR
and used as the target aspect ratio afterwards\&.
.sp
Another way to specify the values is to use the
\fB\-\-aspect\-ratio\fR
or
\fB\-\-display\-dimensions\fR
options (see above)\&. These options are mutually exclusive\&.
.RE
.PP
\fB\-\-cropping\fR \fITID:Esquerra,A_dalt,Dreta,A_baix\fR
.RS 4
Sets the pixel cropping parameters of a video track to the given values\&.
.RE
.PP
\fB\-\-stereo\-mode\fR \fITID:n|Paraula_clau\fR
.RS 4
Sets the stereo mode for the video track with the track ID
\fITID\fR\&. The mode can either be a number
\fIn\fR
between
\fB0\fR
and
\fB14\fR
or one of these keywords:
.sp
\*(Aqmono\*(Aq, \*(Aqside_by_side_left_first\*(Aq, \*(Aqtop_bottom_right_first\*(Aq, \*(Aqtop_bottom_left_first\*(Aq, \*(Aqcheckerboard_right_first\*(Aq, \*(Aqcheckerboard_left_first\*(Aq, \*(Aqrow_interleaved_right_first\*(Aq, \*(Aqrow_interleaved_left_first\*(Aq, \*(Aqcolumn_interleaved_right_first\*(Aq, \*(Aqcolumn_interleaved_left_first\*(Aq, \*(Aqanaglyph_cyan_red\*(Aq, \*(Aqside_by_side_right_first\*(Aq, \*(Aqanaglyph_green_magenta\*(Aq, \*(Aqboth_eyes_laced_left_first\*(Aq, \*(Aqboth_eyes_laced_right_first\*(Aq\&.
.RE
.SS "Opcions que nom\('es s\*(Aqapliquen a pistes de subt\('itols de text"
.PP
\fB\-\-sub\-charset\fR \fITID:joc_de_car\(`acters\fR
.RS 4
Sets the character set for the conversion to UTF\-8 for UTF\-8 subtitles for the given track ID\&. If not specified the charset will be derived from the current locale settings\&. Note that a charset is not needed for subtitles read from
Matroska(TM)
files or from Kate streams, as these are always stored in UTF\-8\&. See the section about
text files and character sets
for an explanation how
\fBmkvmerge\fR(1)
converts between character sets\&.
.sp
This option can be used multiple times for an input file applying to several tracks by selecting different track IDs each time\&.
.RE
.SS "Altres opcions"
.PP
\fB\-i\fR, \fB\-\-identify\fR \fInom_fitxer\fR
.RS 4
Will let
\fBmkvmerge\fR(1)
probe the single file and report its type, the tracks contained in the file and their track IDs\&. If this option is used then the only other option allowed is the filename\&.
.RE
.PP
\fB\-I\fR, \fB\-\-identify\-verbose\fR \fInom_fitxer\fR
.RS 4
Will let
\fBmkvmerge\fR(1)
probe the single file and report its type, the tracks contained in the file and their track IDs\&. If this option is used then the only other option allowed is the filename\&.
.sp
This option causes
\fBmkvmerge\fR(1)
to output additional information about the container and each track within\&. The extra information is surronded by square brackets\&. It consists of space\-saparated key/value pairs where keys and values are separated by a colon\&.
.sp
Each value is escaped according to the rules described in
the section about escaping special characters in text\&.
.RE
.PP
\fB\-l\fR, \fB\-\-list\-types\fR
.RS 4
Llista els tipus de fitxers d\*(Aqentrada admesos\&.
.RE
.PP
\fB\-\-list\-languages\fR
.RS 4
Lists all languages and their ISO639\-2 code which can be used with the
\fB\-\-language\fR
option\&.
.RE
.PP
\fB\-\-priority\fR \fIprioritat\fR
.RS 4
Sets the process priority that
\fBmkvmerge\fR(1)
runs with\&. Valid values are \*(Aqlowest\*(Aq, \*(Aqlower\*(Aq, \*(Aqnormal\*(Aq, \*(Aqhigher\*(Aq and \*(Aqhighest\*(Aq\&. If nothing is given then \*(Aqnormal\*(Aq is used\&. On Unix like systems
\fBmkvmerge\fR(1)
will use the
\fBnice\fR(2)
function\&. Therefore only the super user can use \*(Aqhigher\*(Aq and \*(Aqhighest\*(Aq\&. On Windows all values are useable for every user\&.
.sp
Selecting \*(Aqlowest\*(Aq also causes
\fBmkvmerge\fR(1)
to select idle I/O priority in addition to the lowest possible process priority\&.
.RE
.PP
\fB\-\-command\-line\-charset\fR \fIjoc_de_car\(`acters\fR
.RS 4
Estableix el joc de car\(`acters al qual convertir les cadenes donades des de la l\('inia d\*(Aqordres\&. Per omissi\('o ser\(`a el joc de car\(`acters donat per la configuraci\('o regional actual del sistema\&. Aquesta ajustament s\*(Aqaplicar\(`a als arguments de les seg\(:uents opcions:
\fB\-\-title\fR,
\fB\-\-track\-name\fR
i
\fB\-\-attachment\-description\fR\&.
.RE
.PP
\fB\-\-output\-charset\fR \fIjoc_de_car\(`acters\fR
.RS 4
Estableix el joc de car\(`acters al qual convertir les cadenes donades per la sortida\&. Per omissi\('o ser\(`a el joc de car\(`acters establert a la configuraci\('o regional actual del sistema\&.
.RE
.PP
\fB\-r\fR, \fB\-\-redirect\-output\fR \fInom_fitxer\fR
.RS 4
Escriu tots els missatges al fitxer
\fInom_fitxer\fR
en lloc de a la consola\&. Si b\('e aix\(`o es pot fer f\(`acilment amb la redirecci\('o de la sortida, hi ha casos en qu\(`e cal aquesta opci\('o: quan el terminal reinterpreta la sortida abans d\*(Aqescriure\-la a un fitxer\&. Es respecta el joc de car\(`acters establert amb
\fB\-\-output\-charset\fR\&.
.RE
.PP
\fB\-\-ui\-language\fR \fIcodi\fR
.RS 4
For\(,ca l\*(Aq\('us de les traduccions pel
\fIcodi\fR
d\*(Aqidioma (p\&. ex\&., \(Fode_DE\(Fc per a les traduccions en alemany)\&. Tot i que \('es preferible usar les variables d\*(Aqentorn
\fILANG\fR,
\fILC_MESSAGES\fR
i
\fILC_ALL\fR\&. Introduint \(Folist\(Fc com a
\fIcodi\fR
far\(`a que el
\fBmkvmerge\fR(1)
ofereixi a la sortida, una llista de les traduccions disponibles\&.
.RE
.PP
\fB\-\-debug\fR \fItema\fR
.RS 4
Activa la depuraci\('o per a una caracter\('istica espec\('ifica\&. Aquesta opci\('o nom\('es \('es \('util per als desenvolupadors\&.
.RE
.PP
\fB\-\-engage\fR \fIcaracter\('istica\fR
.RS 4
Activa les caracter\('istiques experimentals\&. Es pot sol\(mdlicitar una llista de les caracter\('istiques disponibles amb
\fBmkvmerge \-\-engage list\fR\&. Aquestes caracter\('istiques no estan destinades a ser emprades en situacions normals\&.
.RE
.PP
\fB\-\-gui\-mode\fR
.RS 4
Activa el mode IGU\&. En aquest mode, les l\('inies surten amb un format especial que pot explicar\-vos el que est\(`a succeint per tal de controlar la IGU\&. Aquests missatges segueixen el format \(Fo#GUI#message\(Fc\&. El missatge pot estar seguit per parells clau/valor com a \(Fo#GUI#message#key1=value1#key2=value2\&...\(Fc\&. Ni els missatges ni les claus seran tradu\(:its, sempre sortiran en angl\(`es\&.
.RE
.PP
\fB@\fR\fIfitxer_opcions\fR
.RS 4
Reads additional command line arguments from the file
\fIoptions\-file\fR\&. See the section about
option files
for further information\&.
.RE
.PP
\fB\-\-capabilities\fR
.RS 4
Lists information about optional features that have been compiled in and exit\&. The first line output will be the version information\&. All following lines contain exactly one word whose presence indicates that the feature has been compiled in\&. These features are:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\*(AqBZ2\*(Aq \-\- the
bzlib(TM)
compression library\&. Affects the available compression methods for the
\fB\-\-compression\fR
option\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\*(AqLZO\*(Aq \-\- the
lzo(TM)
compression library\&. Affects the available compression methods for the
\fB\-\-compression\fR
option\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\*(AqFLAC\*(Aq \-\- reading raw
FLAC
files and handling
FLAC
tracks in other containers, e\&.g\&.
Ogg(TM)
or
Matroska(TM)\&.
.RE
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Mostra la informaci\('o d\*(Aq\('us i surt\&.
.RE
.PP
\fB\-V\fR, \fB\-\-version\fR
.RS 4
Mostra la informaci\('o sobre la versi\('o i surt\&.\&.
.RE
.PP
\fB\-\-check\-for\-updates\fR
.RS 4
Comprova en l\('inia si hi ha nous llan\(,caments per baixar\-los des de l\*(AqURL
\m[blue]\fBhttp://mkvtoolnix\-releases\&.bunkus\&.org/latest\-release\&.xml\fR\m[]\&. Es generaran quatre l\('inies amb l\*(Aqestil
key=valor: l\*(AqURL des d\*(Aqon s\*(Aqha obtingut la informaci\('o (clau
version_check_url), la versi\('o actualment en execuci\('o (clau
running_version), la versi\('o de l\*(Aq\('ultim llan\(,cament (clau
available_version) i l\*(AqURL per a la baixada (clau
download_url)\&.
.sp
Despr\('es el programa sortir\(`a amb un codi de sortida de 0 si no hi ha cap llan\(,cament m\('es recent disponible, amb 1 si hi ha disponible una nova versi\('o i amb 2 si s\*(Aqha produ\(:it un error (p\&. ex\&., si no s\*(Aqha pogut recuperar la informaci\('o sobre l\*(Aqactualitzaci\('o)\&.
.sp
Aquesta opci\('o nom\('es estar\(`a disponible si el programa va ser constru\(:it amb la implementaci\('o per a \(Folibcurl\(Fc\&.
.RE
.SH "\('US"
.PP
For each file the user can select which tracks
\fBmkvmerge\fR(1)
should take\&. They are all put into the file specified with
\fB\-o\fR\&. A list of known (and supported) source formats can be obtained with the
\fB\-l\fR
option\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBImportant\fR
.ps -1
.br
.PP
L\*(Aqordre de les opcions a la l\('inia d\*(Aqordres \('es important\&. Si us plau, llegiu la secci\('o
"L'ordre de les opcions"
si sou novell emprant aquest programa\&.
.sp .5v
.RE
.SH "L'ORDRE DE LES OPCIONS"
.PP
The order in which options are entered is important for some options\&. Options fall into two categories:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Options that affect the whole program and are not tied to any input file\&. These include but are not limited to
\fB\-\-command\-line\-charset\fR,
\fB\-\-output\fR
or
\fB\-\-title\fR\&. These can appear anywhere on the command line\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Options that affect a single input file or a single track in an input file\&. These options all apply to the following input file on the command line\&. All options applying to the same input (or to tracks from the same input file) file can be written in any order as long as they all appear before that input file\*(Aqs name\&. Examples for options applying to an input file are
\fB\-\-no\-chapters\fR
or
\fB\-\-chapter\-charset\fR\&. Examples for options applying to a single track are
\fB\-\-default\-duration\fR
or
\fB\-\-language\fR\&.
.RE
.PP
The options are processed from left to right\&. If an option appears multiple times within the same scope then the last occurence will be used\&. Therefore the title will be set to "Something else" in the following example:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o sortida\&.mkv \-\-title \*(AqAix\(`o i all\(`o\*(Aq entrada\&.avi \-\-title \*(AqQualsevulla cosa\*(Aq
.fi
.if n \{\
.RE
.\}
.PP
The following example shows that using the
\fB\-\-language\fR
option twice is OK because they\*(Aqre used in different scopes\&. Even though they apply to the same track ID they apply to different input files and therefore have different scopes:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o sortida\&.mkv \-\-language 0:fre frances\&.ogg \-\-language 0:deu holandes\&.ogg
.fi
.if n \{\
.RE
.\}
.SH "EXEMPLES"
.PP
Let\*(Aqs assume you have a file called MyMovie\&.avi and the audio track in a separate file, e\&.g\&. \*(AqMyMovie\&.wav\*(Aq\&. First you want to encode the audio to
OggVorbis(TM):
.sp
.if n \{\
.RS 4
.\}
.nf
$ oggenc \-q4 \-o meva_peli\&.ogg meva_peli\&.wav
.fi
.if n \{\
.RE
.\}
.PP
Despr\('es d\*(Aquns minuts ja podreu unir l\*(Aq\(`audio i el v\('ideo:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o meva_peli\-amb\-so\&.mkv meva_peli\&.avi meva_peli\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
If your
AVI
already contains an audio track then it will be copied as well (if
\fBmkvmerge\fR(1)
supports the audio format)\&. To avoid that simply do
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o meva_peli\-amb\-so\&.mkv \-A  meva_peli\&.avi meva_peli\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
After some minutes of consideration you rip another audio track, e\&.g\&. the director\*(Aqs comments or another language to \*(AqMyMovie\-add\-audio\&.wav\*(Aq\&. Encode it again and join it up with the other file:
.sp
.if n \{\
.RS 4
.\}
.nf
$ oggenc \-q4 \-o meva_peli\-afegeix\-\(`audio\&.ogg meva_peli\-afegeix\-\(`audio\&.wav
$ mkvmerge \-o MM\-completa\&.mkv meva_peli\-amb\-so\&.mkv meva_peli\-afegeix\-\(`audio\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
Es pot aconseguir el mateix resultat amb:a\(~nadir
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o MM\-complet\&.mkv \-A meva_peli\&.avi meva_peli\&.ogg meva_peli\-afegeix_\(`audio\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
Now fire up
mplayer(TM)
and enjoy\&. If you have multiple audio tracks (or even video tracks) then you can tell
mplayer(TM)
which track to play with the \*(Aq\fB\-vid\fR\*(Aq and \*(Aq\fB\-aid\fR\*(Aq options\&. These are 0\-based and do not distinguish between video and audio\&.
.PP
If you need an audio track synchronized you can do that easily\&. First find out which track ID the Vorbis track has with
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-\-identify desincronitzat\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
Ara podeu emprar aquest ID a la l\('inia d\*(Aqordres seg\(:uent:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o ben_sincronitzat\&.mkv \-A origen\&.avi \-y 12345:200 sense_sincronitzar\&.ogg
.fi
.if n \{\
.RE
.\}
.PP
This would add 200ms of silence at the beginning of the audio track with the ID
\fB12345\fR
taken from \*(Aqoutofsync\&.ogg\*(Aq\&.
.PP
Some movies start synced correctly but slowly drift out of sync\&. For these kind of movies you can specify a delay factor that is applied to all timestamps \-\- no data is added or removed\&. So if you make that factor too big or too small you\*(Aqll get bad results\&. An example is that an episode I transcoded was
\fB0\&.2\fR
seconds out of sync at the end of the movie which was
\fB77340\fR
frames long\&. At
\fB29\&.97fps\fR\fB0\&.2\fR
seconds correspond to approx\&.
\fB6\fR
frames\&. So I did
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o ben_sincronitzat\&.mkv \-y 23456:0,77346/77340 sense_sincronitzar\&.mkv
.fi
.if n \{\
.RE
.\}
.PP
El resultat ha estat bo\&.
.PP
Les opcions de sincronitzaci\('o tamb\('e es poden usar per a subt\('itols de la mateixa manera\&.
.PP
For text subtitles you can either use some Windows software (like
SubRipper(TM)) or the
subrip(TM)
package found in
\fBtranscode\fR(1)\*(Aqs sources in the \*(Aqcontrib/subrip\*(Aq directory\&. The general process is:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
extract a raw subtitle stream from the source:
.sp
.if n \{\
.RS 4
.\}
.nf
$ tccat \-i /cam\('i/on/copiar/dvd/ \-T 1 \-L | tcextract \-x ps1 \-t vob \-a 0x20 | subtitle2pgm \-o meva_peli
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
convert the resulting PGM images to text with gocr:
.sp
.if n \{\
.RS 4
.\}
.nf
$ pgm2txt meva_peli
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
spell\-check the resulting text files:
.sp
.if n \{\
.RS 4
.\}
.nf
$ ispell \-d american *txt
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
convert the text files to a SRT file:
.sp
.if n \{\
.RS 4
.\}
.nf
$ srttool \-s \-w \-i meva_peli\&.srtx \-o meva_peli\&.srt
.fi
.if n \{\
.RE
.\}
.RE
.PP
El fitxer resultant el pot usar el
\fBmkvmerge\fR(1)
com un altre fitxer d\*(Aqentrada:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o meva_peli\&.mkv meva_peli\&.avi meva_peli\&.srt
.fi
.if n \{\
.RE
.\}
.PP
If you want to specify the language for a given track then this is easily done\&. First find out the ISO639\-2 code for your language\&.
\fBmkvmerge\fR(1)
can list all of those codes for you:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-\-list\-languages
.fi
.if n \{\
.RE
.\}
.PP
Search the list for the languages you need\&. Let\*(Aqs assume you have put two audio tracks into a
Matroska(TM)
file and want to set their language codes and that their track IDs are 2 and 3\&. This can be done with
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o amb_codis_d_idioma\&.mkv \-\-language 2:ger \-\-language 3:dut sense_codis_d_idioma\&.mkv
.fi
.if n \{\
.RE
.\}
.PP
As you can see you can use the
\fB\-\-language\fR
switch multiple times\&.
.PP
Maybe you\*(Aqd also like to have the player use the Dutch language as the default language\&. You also have extra subtitles, e\&.g\&. in English and French, and want to have the player display the French ones by default\&. This can be done with
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o amb_codis_d_idioma\&.mkv \-\-language 2:ger \-\-language 3:dut \-\-default\-track 3 sense_codis_d_idioma\&.mkv \-\-language 0:eng angl\(`es\&.srt \-\-default\-track 0 \-\-language 0:fre franc\(`es\&.srt
.fi
.if n \{\
.RE
.\}
.PP
If you do not see the language or default track flags that you\*(Aqve specified in
\fBmkvinfo\fR(1)\*(Aqs output then please read the section about
default values\&.
.PP
Deshabilita la compressi\('o per a un fitxer d\*(Aqentrada\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o sense_compressi\('o\&.mkv \-\-compression \-1:none meva_peli\&.avi \-\-compression \-1:none meva_peli\&.srt
.fi
.if n \{\
.RE
.\}
.SH "ELS ID DE LA PISTA"
.PP
Some of the options for
\fBmkvmerge\fR(1)
need a track ID to specify which track they should be applied to\&. Those track IDs are printed by the readers when demuxing the current input file, or if
\fBmkvmerge\fR(1)
is called with the
\fB\-\-identify\fR
option\&. An example for such output:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-i v\&.mkv
Fitxer \(Fov\&.mkv\(Fc: contenidor: Matroska(TM)
ID de la pista 0: video (V_MS/VFW/FOURCC, DIV3)
ID de la pista 1: audio (A_MPEG/L3)
.fi
.if n \{\
.RE
.\}
.PP
Do not confuse the track IDs that are assigned to the tracks that are placed in the output MKV file with the track IDs of the input files\&. Only the input file track IDs are used for options needing these values\&.
.PP
Also note that each input file has its own set of track IDs\&. Therefore the track IDs for file \*(Aqfile1\&.ext\*(Aq as reported by \*(Aqmkvmerge \-\-identify\*(Aq do not change no matter how many other input files are there or in which position \*(Aqfile1\&.ext\*(Aq is used\&.
.PP
Els ID de pista s\('on assignats aix\('i:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
AVI
files: The video track has the ID 0\&. The audio tracks get IDs in ascending order starting at 1\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
AAC,
AC\-3,
MP3,
SRT
and
WAV
files: The one \*(Aqtrack\*(Aq in that file gets the ID 0\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Most other files: The track IDs are assigned in order the tracks are found in the file starting at 0\&.
.RE
.PP
The special track ID \*(Aq\fB\-1\fR\*(Aq is a wild card and applies the given switch to all tracks that are read from an input file\&.
.PP
The options that use the track IDs are the ones whose description contains \*(AqTID\*(Aq\&. The following options use track IDs as well:
\fB\-\-audio\-tracks\fR,
\fB\-\-video\-tracks\fR,
\fB\-\-subtitle\-tracks\fR,
\fB\-\-button\-tracks\fR
and
\fB\-\-track\-tags\fR\&.
.SH "CONVERSI\('O PER A FITXERS DE TEXT I JOCS DE CAR\(`ACTERS"
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNota\fR
.ps -1
.br
.PP
This section applies to all programs in MKVToolNix even if it only mentions
\fBmkvmerge\fR(1)\&.
.sp .5v
.RE
.SS "Introducci\('o"
.PP
All text in a
Matroska(TM)
file is encoded in UTF\-8\&. This means that
\fBmkvmerge\fR(1)
has to convert every text file it reads as well as every text given on the command line from one character set into UTF\-8\&. In return this also means that
\fBmkvmerge\fR(1)\*(Aqs output has to be converted back to that character set from UTF\-8, e\&.g\&. if a non\-English translation is used with
\fB\-\-ui\-language\fR
or for text originating from a
Matroska(TM)
file\&.
.PP
\fBmkvmerge\fR(1)
does this conversion automatically based on the presence of a
byte order marker
(short:
BOM) or the system\*(Aqs current locale\&. How the character set is inferred from the locale depends on the operating system that
\fBmkvmerge\fR(1)
is run on\&.
.SS "Byte order markers (BOM)"
.PP
Text files that start with a BOM are already encoded in one representation of UTF\&.
\fBmkvmerge\fR(1)
supports the following five modes: UTF\-8, UTF\-16 Little and Big Endian, UTF\-32 Little and Big Endian\&. Text files with a BOM are automatically converted to UTF\-8\&. Any of the parameters that would otherwise set the character set for such a file (e\&.g\&.
\fB\-\-sub\-charset\fR) is silently ignored\&.
.SS "Sistemes Linux i Unix, incloent el Mac OS"
.PP
On Unix\-like systems
\fBmkvmerge\fR(1)
uses the
\fBsetlocale\fR(3)
system call which in turn uses the environment variables
\fILANG\fR,
\fILC_ALL\fR
and
\fILC_CYPE\fR\&. The resulting character set is often one of UTF\-8 or the ISO\-8859\-* family and is used for all text file operations and for encoding strings on the command line and for output to the console\&.
.SS "Windows"
.PP
On Windows the default character set used for converting text files is determined by a call to the
\fBGetACP()\fR
system call\&.
.PP
Reading the command line is done with the
\fBGetCommandLineW()\fR
function which already returns a Unicode string\&. Therefore the option
\fB\-\-command\-line\-charset\fR
is ignored on Windows\&.
.PP
La sortida a la consola consta de tres escenaris:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
If the output is redirected with the option
\fB\-\-redirect\-output\fR
then the default charset is UTF\-8\&. This can be changed with
\fB\-\-output\-charset\fR\&.
.sp
If the output is redirected with
\fBcmd\&.exe\fR
itself, e\&.g\&. with
mkvinfo file\&.mkv > info\&.txt, then the charset is always UTF\-8 and cannot be changed\&.
.sp
Otherwise (when writing directly to the console) the Windows function
\fBWriteConsoleW()\fR
is used and the option
\fB\-\-output\-charset\fR
is ignored\&. The console should be able to output all Unicode characters for which the corresponding language support is installed (e\&.g\&. Chinese characters might not be displayed on English Windows versions)\&.
.RE
.SS "Opcions de la l\('inia d\*(Aqordres"
.PP
Les seg\(:uents opcions permeten especificar els jocs de car\(`acters:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-sub\-charset\fR
for text subtitle files and for text subtitle tracks stored in container formats for which the character set cannot be determined unambiguously (e\&.g\&. Ogg files),
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-chapter\-charset\fR
for chapter text files and for chapters and file titles stored in container formats for which the character set cannot be determined unambiguously (e\&.g\&. Ogg files for chapter information, track and file titles etc; MP4 files for chapter information),
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-command\-line\-charset\fR
for all strings on the command line,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-output\-charset\fR
for all strings written to the console or to a file if the output has been redirected with the
\fB\-\-redirect\-output\fR
option\&. On non\-Windows systems the default for the output charset is the system\*(Aqs current charset\&. On Windows it defaults to UTF\-8 both for redirecting with
\fB\-\-redirect\-output\fR
and with
\fBcmd\&.exe\fR
itself, e\&.g\&.
mkvinfo file\&.mkv > info\&.txt\&.
.RE
.SH "FITXERS D'OPCIONS"
.PP
An option file is a file
\fBmkvmerge\fR(1)
can read additional command line arguments from\&. This can be used in order to circumvent certain limitations of the shell or the operating system when executing external programs like a limited command line length\&.
.PP
Hi ha diverses regles relatives als fitxers d\*(Aqopcions\&. Les l\('inies que tinguin com a primer car\(`acter un coixinet (#) seran tractades com a comentaris i ignorades\&. Els espais en blanc al comen\(,cament i final de la l\('inia seran descartats\&. Cada l\('inia haur\(`a de contenir exactament una opci\('o\&.
.PP
A line not containing anything is also ignored\&. An empty argument is represented by the line \*(Aq#EMPTY#\*(Aq\&.
.PP
Es poden interpretar diversos car\(`acters com d\*(Aqescapament, p\&. ex\&., si necessiteu que una l\('inia que comen\(,ca amb un coixinet \(Fo#\(Fc, no sigui interpretada com un comentari\&. Les regles es descriuen a
la secci\('o sobre text d'escapament\&.
.PP
Note that backslashes must always be escaped\&. Hash marks (\*(Aq#\*(Aq) must be escaped if they should not start a comment\&.
.PP
La l\('inia d\*(Aqordres \(Fo\fBmkvmerge \-o "meu_fitxer\&.mkv" \-A "una_peli\&.avi" so\&.ogg\fR\(Fc es pot convertir en el seg\(:uent fitxer d\*(Aqopcions:
.sp
.if n \{\
.RS 4
.\}
.nf
# Escriu al fitxer \(FoC:\eMatroska\emeu_fitxer\&.mkv\(Fc, sota Windows\&.
\-o
C:\e\eMatroska\e\emeu_fitxer\&.mkv
# Estableix el t\('itol a \(Fo#65\(Fc\&.
\-\-title
\eh65
# Nom\('es pren el v\('ideo de \(Founa_peli\&.avi\(Fc\&.
\-A
una_peli\&.avi
so\&.ogg
.fi
.if n \{\
.RE
.\}
.SH "CAR\(`ACTERS ESPECIALS D'ESCAPADA EN EL TEXT"
.PP
Hi ha pocs llocs en els quals els car\(`acters especials en el text puguin o hagin de ser escapats\&. Les regles de l\*(Aqescapament s\('on simples: cada car\(`acter que necessiti ser escapat ser\(`a substitu\(:it amb una barra invertida seguida d\*(Aqun altre car\(`acter\&.
.PP
Les regles s\('on: \(Fo \(Fc (un espai) ser\(`a \(Fo\es\(Fc, \(Fo"\(Fc (cometes) ser\(`a \(Fo\e2\(Fc, \(Fo:\(Fc ser\(`a \(Fo\ec\(Fc, \(Fo#\(Fc ser\(`a \(Fo\eh\(Fc, \(Fo[\(Fc ser\(`a \(Fo\eb\(Fc, \(Fo]\(Fc ser\(`a \(Fo\eB\(Fc i \(Fo\e\(Fc (una \('unica barra invertida) ser\(`a \(Fo\e\e\(Fc\&.
.SH "SUBT\('ITOLS"
.PP
There are several text and bitmap subtitle formats that can be embedded into
Matroska(TM)\&. Text subtitles must be recoded to UTF\-8 so that they can be displayed correctly by a player (see the section about
text files and character sets
for an explanation how
\fBmkvmerge\fR(1)
converts between character sets)\&. Kate subtitles are already encoded in UTF\-8 and do not have to be re\-encoded\&.
.PP
De moment s\*(Aqadmeten els seg\(:uents formats de subt\('itols:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Fitxers Subtitle Ripper (SRT)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Substation Alpha (SSA) / Advanced Substation Alpha scripts (ASS)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Fitxers format de subt\('itols universal (USF)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Fluxos OggKate
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Fitxers de subt\('itols amb mapes de bits VobSub
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
PGS bitmap subtitle files as found on BluRay discs
.RE
.SH "VINCULAR ELS FITXERS"
.PP
Matroska(TM)
supports file linking which simply says that a specific file is the predecessor or successor of the current file\&. To be precise, it\*(Aqs not really the files that are linked but the
Matroska(TM)
segments\&. As most files will probably only contain one
Matroska(TM)
segment the following explanations use the term \*(Aqfile linking\*(Aq although \*(Aqsegment linking\*(Aq would be more appropriate\&.
.PP
Each segment is identified by a unique 128 bit wide segment UID\&. This UID is automatically generated by
\fBmkvmerge\fR(1)\&. The linking is done primarily via putting the segment UIDs (short:
SID) of the previous/next file into the segment header information\&.
\fBmkvinfo\fR(1)
prints these
SIDs
if it finds them\&.
.PP
If a file is split into several smaller ones and linking is used then the timecodes will not start at 0 again but will continue where the last file has left off\&. This way the absolute time is kept even if the previous files are not available (e\&.g\&. when streaming)\&. If no linking is used then the timecodes should start at 0 for each file\&. By default
\fBmkvmerge\fR(1)
does not use file linking\&. If you want that you can turn it on with the
\fB\-\-link\fR
option\&. This option is only useful if splitting is activated as well\&.
.PP
Regardless of whether splitting is active or not the user can tell
\fBmkvmerge\fR(1)
to link the produced files to specific
SIDs\&. This is achieved with the options
\fB\-\-link\-to\-previous\fR
and
\fB\-\-link\-to\-next\fR\&. These options accept a segment
SID
in the format that
\fBmkvinfo\fR(1)
outputs: 16 hexadecimal numbers between
\fB0x00\fR
and
\fB0xff\fR
prefixed with \*(Aq0x\*(Aq each, e\&.g\&. \*(Aq0x41 0xda 0x73 0x66 0xd9 0xcf 0xb2 0x1e 0xae 0x78 0xeb 0xb4 0x5e 0xca 0xb3 0x93\*(Aq\&. Alternatively a shorter form can be used: 16 hexadecimal numbers between
\fB0x00\fR
and
\fB0xff\fR
without the \*(Aq0x\*(Aq prefixes and without the spaces, e\&.g\&. \*(Aq41da7366d9cfb21eae78ebb45ecab393\*(Aq\&.
.PP
If splitting is used then the first file is linked to the
SID
given with
\fB\-\-link\-to\-previous\fR
and the last file is linked to the
SID
given with
\fB\-\-link\-to\-next\fR\&. If splitting is not used then the one output file will be linked to both of the two
SIDs\&.
.SH "VALORS PER OMISSI\('O"
.PP
The
Matroska(TM)
specification states that some elements have a default value\&. Usually an element is not written to the file if its value is equal to its default value in order to save space\&. The elements that the user might miss in
\fBmkvinfo\fR(1)\*(Aqs output are the
\fIlanguage\fR
and the
\fIdefault track flag\fR
elements\&. The default value for the
\fIlanguage\fR
is English (\*(Aqeng\*(Aq), and the default value for the
\fIdefault track flag\fR
is
\fItrue\fR\&. Therefore if you used
\fB\-\-language 0:eng\fR
for a track then it will not show up in
\fBmkvinfo\fR(1)\*(Aqs output\&.
.SH "ADJUNTS"
.PP
Maybe you also want to keep some photos along with your
Matroska(TM)
file, or you\*(Aqre using
SSA
subtitles and need a special
TrueType(TM)
font that\*(Aqs really rare\&. In these cases you can attach those files to the
Matroska(TM)
file\&. They will not be just appended to the file but embedded in it\&. A player can then show those files (the \*(Aqphotos\*(Aq case) or use them to render the subtitles (the \*(AqTrueType(TM)
fonts\*(Aq case)\&.
.PP
Here\*(Aqs an example how to attach a photo and a
TrueType(TM)
font to the output file:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o output\&.mkv \-A video\&.avi sound\&.ogg \e
  \-\-attachment\-description "Me and the band behind the stage in a small get\-together" \e
  \-\-attachment\-mime\-type image/jpeg \e
  \-\-attach\-file me_and_the_band\&.jpg \e
  \-\-attachment\-description "The real rare and unbelievably good looking font" \e
  \-\-attachment\-type application/octet\-stream \e
  \-\-attach\-file really_cool_font\&.ttf
.fi
.if n \{\
.RE
.\}
.PP
If a
Matroska(TM)
containing attachments file is used as an input file then
\fBmkvmerge\fR(1)
will copy the attachments into the new file\&. The selection which attachments are copied and which are not can be changed with the options
\fB\-\-attachments\fR
and
\fB\-\-no\-attachments\fR\&.
.SH "CAP\('ITOLS"
.PP
The
Matroska(TM)
chapter system is more powerful than the old known system used by
OGM
files\&. The full specifications can be found at
\m[blue]\fBthe Matroska(TM) website\fR\m[]\&\s-2\u[1]\d\s+2\&.
.PP
\fBmkvmerge\fR(1)
supports two kinds of chapter files as its input\&. The first format, called \*(Aqsimple chapter format\*(Aq, is the same format that the
OGM
tools expect\&. The second format is a
XML
based chapter format which supports all of
Matroska(TM)\*(Aqs chapter functionality\&.
.SS "El format de cap\('itols simple"
.PP
This formmat consists of pairs of lines that start with \*(AqCHAPTERxx=\*(Aq and \*(AqCHAPTERxxNAME=\*(Aq respectively\&. The first one contains the start timecode while the second one contains the title\&. Here\*(Aqs an example:
.sp
.if n \{\
.RS 4
.\}
.nf
CHAPTER01=00:00:00\&.000
CHAPTER01NAME=Intro
CHAPTER02=00:02:30\&.000
CHAPTER02NAME=Baby prepares to rock
CHAPTER03=00:02:42\&.300
CHAPTER03NAME=Baby rocks the house
.fi
.if n \{\
.RE
.\}
.PP
\fBmkvmerge\fR(1)
will transform every pair or lines into one
Matroska(TM)ChapterAtom\&. It does not set any
ChapterTrackNumber
which means that the chapters all apply to all tracks in the file\&.
.PP
Com es tracta d\*(Aqun fitxer de text, podria ser necessari realitzar una conversi\('o del joc de car\(`acters\&. Vegeu la secci\('o sobre
la conversi\('o per a fitxers de text i jocs de car\(`acters
per a veure una explicaci\('o sobre com realitza el
\fBmkvmerge\fR(1)
la conversi\('o entre diferents jocs de car\(`acters\&.
.SS "El format de cap\('itols basat en XML"
.PP
El format de cap\('itols basat en
XML
s\*(Aqassembla a aquest exemple:
.sp
.if n \{\
.RS 4
.\}
.nf
<?xml version="1\&.0" encoding="ISO\-8859\-1"?>
<!DOCTYPE Chapters SYSTEM "matroskachapters\&.dtd">
<Chapters>
  <EditionEntry>
    <ChapterAtom>
      <ChapterTimeStart>00:00:30\&.000</ChapterTimeStart>
      <ChapterTimeEnd>00:01:20\&.000</ChapterTimeEnd>
      <ChapterDisplay>
        <ChapterString>A short chapter</ChapterString>
        <ChapterLanguage>eng</ChapterLanguage>
      </ChapterDisplay>
      <ChapterAtom>
        <ChapterTimeStart>00:00:46\&.000</ChapterTimeStart>
        <ChapterTimeEnd>00:01:10\&.000</ChapterTimeEnd>
        <ChapterDisplay>
          <ChapterString>A part of that short chapter</ChapterString>
          <ChapterLanguage>eng</ChapterLanguage>
        </ChapterDisplay>
      </ChapterAtom>
    </ChapterAtom>
  </EditionEntry>
</Chapters>
.fi
.if n \{\
.RE
.\}
.PP
With this format three things are possible that are not possible with the simple chapter format:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
The timestamp for the end of the chapter can be set,
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
chapters can be nested,
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
the language and country can be set\&.
.RE
.PP
The mkvtoolnix distribution contains some sample files in the
doc
subdirectory which can be used as a basis\&.
.PP
The following lists the supported XML tags, their data types and, where appropriate, the valid range for their values:
.sp
.if n \{\
.RS 4
.\}
.nf
Chapters (master)
  EditionEntry (master)
    EditionUID (unsigned integer, valid range: 1 <= value)
    EditionFlagHidden (unsigned integer, valid range: 0 <= value <= 1)
    EditionFlagDefault (unsigned integer, valid range: 0 <= value <= 1)
    EditionFlagOrdered (unsigned integer, valid range: 0 <= value <= 1)
    ChapterAtom (master)
      ChapterAtom (master)
      ChapterUID (unsigned integer, valid range: 1 <= value)
      ChapterTimeStart (unsigned integer)
      ChapterTimeEnd (unsigned integer)
      ChapterFlagHidden (unsigned integer, valid range: 0 <= value <= 1)
      ChapterFlagEnabled (unsigned integer, valid range: 0 <= value <= 1)
      ChapterSegmentUID (binary, valid range: 1 <= length in bytes)
      ChapterSegmentEditionUID (unsigned integer, valid range: 1 <= value)
      ChapterPhysicalEquiv (unsigned integer)
      ChapterTrack (master)
        ChapterTrackNumber (unsigned integer, valid range: 1 <= value)
      ChapterDisplay (master)
        ChapterString (UTF\-8 string)
        ChapterLanguage (UTF\-8 string)
        ChapterCountry (UTF\-8 string)
      ChapterProcess (master)
        ChapterProcessCodecID (unsigned integer)
        ChapterProcessPrivate (binary)
        ChapterProcessCommand (master)
          ChapterProcessTime (unsigned integer)
          ChapterProcessData (binary)
.fi
.if n \{\
.RE
.\}
.SS "Notes generals"
.PP
When splitting files
\fBmkvmerge\fR(1)
will correctly adjust the chapters as well\&. This means that each file only includes the chapter entries that apply to it, and that the timecodes will be offset to match the new timecodes of each output file\&.
.PP
\fBmkvmerge\fR(1)
is able to copy chapters from
Matroska(TM)
source files unless this is explicitly disabled with the
\fB\-\-no\-chapters\fR
option\&. The chapters from all sources (Matroska(TM)
files, Ogg files,
MP4
files, chapter text files) are usually not merged but end up in separate
ChapterEditions\&. Only if chapters are read from several
Matroska(TM)
or
XML
files that share the same edition UIDs will chapters be merged into a single
ChapterEdition\&. If such a merge is desired in other situations as well then the user has to extract the chapters from all sources with
\fBmkvextract\fR(1)
first, merge the
XML
files manually and mux them afterwards\&.
.SH "ETIQUETES"
.SS "Introducci\('o"
.PP
Matroska(TM)
supports an extensive set of tags that is deprecated and a new, simpler system like it is is used in most other containers:
\fIKEY=VALUE\fR\&. However, in
Matroska(TM)
these tags can also be nested, and both the
\fIKEY\fR
and the
\fIVALUE\fR
are elements of their own\&. The example file
example\-tags\-2\&.xml
shows how to use this new system\&.
.SS "\(`Ambit de les etiquetes"
.PP
Matroska(TM)
tags do not automatically apply to the complete file\&. They can, but they also may apply to different parts of the file: to one or more tracks, to one or more chapters, or even to a combination of both\&. The
\m[blue]\fBthe Matroska(TM) specification\fR\m[]\&\s-2\u[3]\d\s+2
gives more details about this fact\&.
.PP
One important fact is that tags are linked to tracks or chapters with the
TargetsMatroska(TM)
tag element, and that the UIDs used for this linking are
\fInot\fR
the track IDs
\fBmkvmerge\fR(1)
uses everywhere\&. Instead the numbers used are the UIDs which
\fBmkvmerge\fR(1)
calculates automatically (if the track is taken from a file format other than
Matroska(TM)) or which are copied from the source file if the track\*(Aqs source file is a
Matroska(TM)
file\&. Therefore it is difficult to know which UIDs to use in the tag file before the file is handed over to
\fBmkvmerge\fR(1)\&.
.PP
\fBmkvmerge\fR(1)
knows two options with which you can add tags to
Matroska(TM)
files: The
\fB\-\-global\-tags\fR
and the
\fB\-\-tags\fR
options\&. The difference is that the former option,
\fB\-\-global\-tags\fR, will make the tags apply to the complete file by removing any of those
Targets
elements mentioned above\&. The latter option,
\fB\-\-tags\fR, automatically inserts the UID that
\fBmkvmerge\fR(1)
generates for the tag specified with the
\fITID\fR
part of the
\fB\-\-tags\fR
option\&.
.SS "Exemple"
.PP
Let\*(Aqs say that you want to add tags to a video track read from an
AVI\&.
\fBmkvmerge \-\-identify file\&.avi\fR
tells you that the video track\*(Aqs ID (do not mix this ID with the UID!) is 0\&. So you create your tag file, leave out all
Targets
elements and call
\fBmkvmerge\fR(1):
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \-o fitxer\&.mkv \-\-tags 0:etiquetes\&.xml fitxer\&.avi
.fi
.if n \{\
.RE
.\}
.SS "Format del fitxer d\*(Aqetiquetes"
.PP
\fBmkvmerge\fR(1)
supports a
XML
based tag file format\&. The format is very closely modeled after
\m[blue]\fBthe Matroska(TM) specification\fR\m[]\&\s-2\u[3]\d\s+2\&. Both the binary and the source distributions of MKVToolNix come with a sample file called
example\-tags\-2\&.xml
which simply lists all known tags and which can be used as a basis for real life tag files\&.
.PP
Els fonaments s\('on:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
L\*(Aqelement m\('es extern haur\(`a de ser
<Tags>\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
One logical tag is contained inside one pair of
<Tag>XML
tags\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
White spaces directly before and after tag contents are ignored\&.
.RE
.SS "Tipus de dades"
.PP
The new
Matroska(TM)
tagging system only knows two data types, a UTF\-8 string and a binary type\&. The first is used for the tag\*(Aqs name and the
<String>
element while the binary type is used for the
<Binary>
element\&.
.PP
As binary data itself would not fit into a
XML
file
\fBmkvmerge\fR(1)
supports two other methods of storing binary data\&. If the contents of a
XML
tag starts with \*(Aq@\*(Aq then the following text is treated as a file name\&. The corresponding file\*(Aqs content is copied into the
Matroska(TM)
element\&.
.PP
Otherwise the data is expected to be
Base64
encoded\&. This is an encoding that transforms binary data into a limited set of
ASCII
characters and is used e\&.g\&. in email programs\&.
\fBmkvextract\fR(1)
will output
Base64
encoded data for binary elements\&.
.PP
The deprecated tagging system knows some more data types which can be found in the official
Matroska(TM)
tag specs\&. As
\fBmkvmerge\fR(1)
does not support this system anymore these types aren\*(Aqt described here\&.
.SS "Etiquetes conegudes per al format de fitxer en XML"
.PP
The following lists the supported XML tags, their data types and, where appropriate, the valid range for their values:
.sp
.if n \{\
.RS 4
.\}
.nf
Tags (master)
  Tag (master)
    Targets (master)
      TargetTypeValue (unsigned integer)
      TargetType (UTF\-8 string)
      TrackUID (unsigned integer)
      EditionUID (unsigned integer)
      ChapterUID (unsigned integer)
      AttachmentUID (unsigned integer)
    Simple (master)
      Simple (master)
      Name (UTF\-8 string)
      TagLanguage (UTF\-8 string)
      DefaultLanguage (unsigned integer)
      String (UTF\-8 string)
      Binary (binary)
.fi
.if n \{\
.RE
.\}
.SH "ELS FITXERS XML D'INFORMACI\('O DEL SEGMENT"
.PP
With a segment info XML file it is possible to set certain values in the "segment information" header field of a
Matroska(TM)
file\&. All of these values cannot be set via other command line options\&.
.PP
Other "segment information" header fields can be set via command line options but not via the XML file\&. This includes e\&.g\&. the
\fB--title\fR
and the
\fB--timecode-scale\fR
options\&.
.PP
There are other elements that can be set neither via command line options nor via the XML files\&. These include the following elements:
\fIDateUTC\fR
(also known as the "muxing date"),
\fIMuxingApp\fR,
\fIWritingApp\fR
and
\fIDuration\fR\&. They\*(Aqre always set by
\fBmkvmerge\fR(1)
itself\&.
.PP
The following lists the supported XML tags, their data types and, where appropriate, the valid range for their values:
.sp
.if n \{\
.RS 4
.\}
.nf
Info (master)
  SegmentUID (binary, valid range: length in bytes == 16)
  SegmentFilename (UTF\-8 string)
  PreviousSegmentUID (binary, valid range: length in bytes == 16)
  PreviousSegmentFilename (UTF\-8 string)
  NextSegmentUID (binary, valid range: length in bytes == 16)
  NextSegmentFilename (UTF\-8 string)
  SegmentFamily (binary, valid range: length in bytes == 16)
  ChapterTranslate (master)
    ChapterTranslateEditionUID (unsigned integer)
    ChapterTranslateCodec (unsigned integer)
    ChapterTranslateID (binary)
.fi
.if n \{\
.RE
.\}
.SH "DISPOSICI\('O DELS FITXERS MATROSKA(TM)"
.PP
The
Matroska(TM)
file layout is quite flexible\&.
\fBmkvmerge\fR(1)
will render a file in a predefined way\&. The resulting file looks like this:
.PP
[EBML head] [segment {meta seek #1} [segment information] [track information] {attachments} {chapters} [cluster 1] {cluster 2} \&.\&.\&. {cluster n} {cues} {meta seek #2} {tags}]
.PP
The elements in curly braces are optional and depend on the contents and options used\&. A couple of notes:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
meta seek #1 includes only a small number of level 1 elements, and only if they actually exist: attachments, chapters, cues, tags, meta seek #2\&. Older versions of
\fBmkvmerge\fR(1)
used to put the clusters into this meta seek element as well\&. Therefore some imprecise guessing was necessary to reserve enough space\&. It often failed\&. Now only the clusters are stored in meta seek #2, and meta seek #1 refers to the meta seek element #2\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Attachment, chapter and tag elements are only present if they were added\&.
.RE
.PP
The shortest possible
Matroska(TM)
file would look like this:
.PP
[EBML head] [segment [segment information] [track information] [cluster 1]]
.PP
This might be the case for audio\-only files\&.
.SH "FITXERS EXTERNS PELS CODIS DE TEMPS"
.PP
\fBmkvmerge\fR(1)
allows the user to chose the timecodes for a specific track himself\&. This can be used in order to create files with variable frame rate video or include gaps in audio\&. A frame in this case is the unit that
\fBmkvmerge\fR(1)
creates separately per
Matroska(TM)
block\&. For video this is exactly one frame, for audio this is one packet of the specific audio type\&. E\&.g\&. for
AC\-3
this would be a packet containing
\fB1536\fR
samples\&.
.PP
Timecode files that are used when tracks are appended to each other must only be specified for the first part in a chain of tracks\&. For example if you append two files, v1\&.avi and v2\&.avi, and want to use timecodes then your command line must look something like this:
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkvmerge \&.\&.\&. \-\-timecodes 0:codis_de_temps\&.txt v1\&.avi +v2\&.avi
.fi
.if n \{\
.RE
.\}
.PP
There are four formats that are recognized by
\fBmkvmerge\fR(1)\&. The first line always contains the version number\&. Empty lines, lines containing only whitespace and lines beginning with \*(Aq#\*(Aq are ignored\&.
.SS "Format v1 pel fitxer del codi de temps"
.PP
This format starts with the version line\&. The second line declares the default number of frames per second\&. All following lines contain three numbers separated by commas: the start frame (\fB0\fR
is the first frame), the end frame and the number of frames in this range\&. The
FPS
is a floating point number with the dot \*(Aq\&.\*(Aq as the decimal point\&. The ranges can contain gaps for which the default
FPS
is used\&. An example:
.sp
.if n \{\
.RS 4
.\}
.nf
# Format v1 pel codi de temps
assume 27\&.930
800,1000,25
1500,1700,30
.fi
.if n \{\
.RE
.\}
.SS "Format v2 pel fitxer del codi de temps"
.PP
In this format each line contains a timecode for the corresponding frame\&. This timecode must be given in millisecond precision\&. It can be a floating point number, but it doesn\*(Aqt have to be\&. You
\fIhave to\fR
give at least as many timecode lines as there are frames in the track\&. The timecodes in this file must be sorted\&. Example for 25fps:
.sp
.if n \{\
.RS 4
.\}
.nf
# Format v2 pel codi de temps
0
40
80
.fi
.if n \{\
.RE
.\}
.SS "Format v3 pel fitxer del codi de temps"
.PP
In this format each line contains a duration in seconds followed by an optional number of frames per second\&. Both can be floating point numbers\&. If the number of frames per second is not present the default one is used\&. For audio you should let the codec calculate the frame timecodes itself\&. For that you should be using
\fB0\&.0\fR
as the number of frames per second\&. You can also create gaps in the stream by using the \*(Aqgap\*(Aq keyword followed by the duration of the gap\&. Example for an audio file:
.sp
.if n \{\
.RS 4
.\}
.nf
# Format v3 pel codi de temps
assume 0\&.0
25\&.325
7\&.530,38\&.236
gap, 10\&.050
2\&.000,38\&.236
.fi
.if n \{\
.RE
.\}
.SS "Format v4 pel fitxer del codi de temps"
.PP
This format is identical to the v2 format\&. The only difference is that the timecodes do not have to be sorted\&. This format should almost never be used\&.
.SH "CODIS DE SORTIDA"
.PP
El
\fBmkvmerge\fR(1)
sortir\(`a amb un d\*(Aqaquests tres codis de sortida:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB0\fR
\-\- Aquest codi de sortida significa que el multiplexat s\*(Aqha realitzat correctament\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB1\fR
\-\- En aquest cas, el
\fBmkvmerge\fR(1)
ha generat una sortida amb almenys un av\('is, per\(`o el multiplexat ha continuat\&. Un av\('is \('es prefixat amb el text \(FoWarning:\(Fc\&. Depenent de les q\(:uestions involucrades, el fitxer resultant ser\(`a o no correcte\&. L\*(Aqusuari ser\(`a instat a revisar tant els avisos com el fitxer\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB2\fR
\-\- Aquest codi de sortida s\*(Aqempra despr\('es de produir\-se un error\&. El
\fBmkvmerge\fR(1)
interrompr\(`a el proc\('es just despr\('es de mostrar el missatge d\*(Aqerror\&. L\*(Aqinterval dels missatges d\*(Aqerror va des d\*(Aqarguments incorrectes a la l\('inia d\*(Aqordres fins a errors de lectura/escriptura en fitxers malmesos\&.
.RE
.SH "VARIABLES D'ENTORN"
.PP
El
\fBmkvmerge\fR(1)
usa les variables per omissi\('o que es determinen a la configuraci\('o regional del sistema (p\&. ex\&.,
\fILANG\fR
i la fam\('ilia
\fILC_*\fR)\&. Variables addicionals:
.PP
\fIMKVMERGE_DEBUG\fR, \fIMKVTOOLNIX_DEBUG\fR i la seva forma abreujada \fIMTX_DEBUG\fR
.RS 4
El contingut es tractar\(`a com si s\*(Aqhagu\('es passat l\*(Aqopci\('o
\fB\-\-debug\fR\&.
.RE
.PP
\fIMKVMERGE_ENGAGE\fR, \fIMKVTOOLNIX_ENGAGE\fR i la seva forma abreujada \fIMTX_ENGAGE\fR
.RS 4
El contingut es tractar\(`a com si s\*(Aqhagu\('es passat l\*(Aqopci\('o
\fB\-\-engage\fR\&.
.RE
.PP
\fIMKVMERGE_OPTIONS\fR, \fIMKVTOOLNIX_OPTIONS\fR i la seva forma abreujada \fIMTX_OPTIONS\fR
.RS 4
El contingut ser\(`a dividit en espais en blancge\&. Les cadenes parcials resultants seran tractades com si haguessin estat passades com a opcions a la l\('inia d\*(Aqordres\&. Si necessiteu passar car\(`acters especials (p\&. ex\&., espais) llavors els haureu d\*(Aqescapar (vegeu
la secci\('o car\(`acters especials d'escapament en el text)\&.
.RE
.SH "VEGEU TAMB\('E"
.PP
\fBmkvinfo\fR(1),
\fBmkvextract\fR(1),
\fBmkvpropedit\fR(1),
\fBmkvtoolnix-gui\fR(1)
.SH "WWW"
.PP
Sempre trobareu l\*(Aq\('ultima versi\('o a
\m[blue]\fBla p\(`agina del MKVToolNix\fR\m[]\&\s-2\u[4]\d\s+2\&.
.SH "AUTOR"
.PP
\fBBunkus, Moritz\fR <\&moritz@bunkus\&.org\&>
.RS 4
Desenvolupador
.RE
.SH "NOTES"
.IP " 1." 4
el lloc web del
Matroska(TM)
.RS 4
\%http://www.matroska.org/
.RE
.IP " 2." 4
the IANA homepage
.RS 4
\%http://www.iana.org/assignments/media-types/
.RE
.IP " 3." 4
the Matroska(TM)
specification
.RS 4
\%http://matroska.org/technical/specs/index.html
.RE
.IP " 4." 4
la p\(`agina del MKVToolNix
.RS 4
\%https://www.bunkus.org/videotools/mkvtoolnix/
.RE
